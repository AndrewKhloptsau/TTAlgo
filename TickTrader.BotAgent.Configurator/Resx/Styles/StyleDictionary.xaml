<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TickTrader.BotAgent.Configurator"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Separator">
        <Setter Property="Margin" Value="0 10"/>
    </Style>

    <Style x:Key="DescriptionTextBox" TargetType="TextBlock">
        <Setter Property="Margin" Value="40 0 0 0"/>
        <Setter Property="FontSize" Value="14"/>
        <!--<Setter Property="Background" Value="LightGray"/>-->
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="validationFailed">
        <Border BorderBrush="Red" BorderThickness="1">
            <AdornedElementPlaceholder />
        </Border>
    </ControlTemplate>

    <!--<ControlTemplate x:Key="rdButton" TargetType="Button">
        <Border x:Name="buttonBorder" CornerRadius="5"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="2"
                Background="White"
                Height="50"
                Width="100" >
            <ContentControl
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter TargetName="buttonBorder" Property="Background" Value="#FFEEF5FD" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Gray"/>
                <Setter TargetName="buttonBorder" Property="Background" Value="LightGray"/>
                <Setter TargetName="buttonBorder" Property="BorderBrush" Value="SlateGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <Style x:Key="StateButton" TargetType="Button">
        <Setter Property="Margin" Value="20 0"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="SteelBlue"/>
    </Style>

    <Style x:Key="ContentControlPanel">
        <Setter Property="Control.Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}, Path=ActualWidth}"/>
        <Setter Property="Control.Padding" Value="20 0 10 0"/>
        <Setter Property="Control.Margin" Value="0 10 0 5"/>
        <Setter Property="Control.VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="BaseCheckBox" TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Content" Value="Generate"/>
        <!--<Setter Property="Padding" Value="3"/>-->
    </Style>

    <Style x:Key="StateServiceIndicator" TargetType="Ellipse">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Fill" Value="Red"/>
        <Setter Property="Margin" Value="5 0"/>
    </Style>

    <Style x:Key="StateServiceRow">
        <Setter Property="Control.HorizontalAlignment" Value="Right"/>
        <Setter Property="Control.Margin" Value="0 0 20 0"/>
    </Style>

    <Style x:Key="RestartMessage" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="ToolBarButton" TargetType="Button">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsEnabled" Value="False"/>
    </Style>

    <Style x:Key="ToolBarIcon" TargetType="{x:Type fa:ImageAwesome}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="20"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=IsEnabled}" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OpenLogsFolderButton" TargetType="Button">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 5 5 0"/>
    </Style>

    <Style x:Key="LogsHeader" TargetType="TextBlock">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="LogsBorderPanel" TargetType="Border">
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="BorderBrush" Value="SteelBlue"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="LogsPanel" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="BorderBrush" Value="SteelBlue"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type fa:ImageAwesome}">
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" CornerRadius="3 0 0 3" Background="#FFEEF5FD">
                            <ContentPresenter VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                              ContentSource="Header"
                              Margin="5 2">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorTabItem" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=docCred, Path=(Validation.Errors).Count, UpdateSourceTrigger=PropertyChanged}" Value="0">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainTabControl" TargetType="TabControl">
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="SelectedIndex" Value="0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=startAgentSpinner, Path=Visibility}" Value="Visible">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AgentSpinner" TargetType="fa:ImageAwesome">
        <Setter Property="Icon" Value="Cog"/>
        <Setter Property="SpinDuration" Value="4"/>
        <Setter Property="Spin" Value="True"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>