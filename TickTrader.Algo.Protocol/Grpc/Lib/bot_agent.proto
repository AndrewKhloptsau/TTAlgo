syntax = "proto3";

package TickTrader.Algo.Protocol.Grpc.Lib;

// current version 1.0, syncronize with VersionSpec.cs

import "metadata.proto";
import "config.proto";

service BotAgent
{
	rpc Login (LoginRequest) returns (LoginResponse);

	rpc GetPackageList(PackageListRequest) returns (PackageListResponse);
	rpc GetAccountList(AccountListRequest) returns (AccountListResponse);
	rpc GetBotList(BotListRequest) returns (BotListResponse);
	rpc SubscribeToUpdates(SubscribeToUpdatesRequest) returns (stream Update);

	rpc GetAccountMetadata(AccountKey) returns (AccountMetadataInfo);
}

message Request
{
	enum RequestStatus
	{
		SUCCESS = 0;
		INTERNAL_SERVER_ERROR = 1;
	}
}

message LoginRequest
{
	string login = 1;
	string password = 2;
	int32 major_version = 3; // client version
	int32 minor_version = 4; // client version
}

message LoginResponse
{
	enum LoginError
	{
		NONE = 0;
		INVALID_CREDENTIALS = 1;
		VERSION_MISMATCH = 2;
	}

	Request.RequestStatus status = 1;
	LoginError error = 2;
	int32 major_version = 3; // server version
	int32 minor_version = 4; // server version
}

message LogoutRequest
{
}

message LogoutResponse
{
	enum LogoutReason
	{
	    CLIENT_REQUEST = 0;
	    SERVER_LOGOUT = 1;
	}

	Request.RequestStatus status = 1;
	LogoutReason reason = 2;
	string text = 3;
}

message PackageListRequest
{
}

message PackageListResponse
{
	Request.RequestStatus status = 1;
	repeated PackageInfo packages = 2;
}

message AccountListRequest
{
}

message AccountListResponse
{
	Request.RequestStatus status = 1;
	repeated AccountKey accounts = 2;
}

message BotListRequest
{
}

message BotListResponse
{
	Request.RequestStatus status = 1;
	repeated string bots = 2;
}

message SubscribeToUpdatesRequest
{
}

message Update
{
	enum UpdateType
	{
	    ADDED = 0;
	    UPDATED = 1;
	    REMOVED = 2;
	}

	UpdateType type = 1;
	oneof update
	{
		PackageUpdate package = 5;
		AccountUpdate account = 6;
		AccountStateUpdate account_state = 7;
		BotUpdate bot = 8;
		BotStateUpdate bot_state = 9;
	}
}

message PackageUpdate
{
	PackageInfo package = 1;
}

message AccountUpdate
{
	AccountKey account = 1;
}

message AccountStateUpdate
{
	AccountKey account = 1;
}

message BotUpdate
{
	string bot_id = 1;
}

message BotStateUpdate
{
	string bot_id = 1;
}