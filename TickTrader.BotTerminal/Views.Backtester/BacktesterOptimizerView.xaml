<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:tester="clr-namespace:TickTrader.Algo.BacktesterApi;assembly=TickTrader.Algo.BacktesterApi"
                    xmlns:l="clr-namespace:TickTrader.BotTerminal">

    <Style x:Key="SettingsLabel" TargetType="Label">
        <Setter Property="Margin" Value="5,0,0,4"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="Background" Value="Red"/>-->
        <Setter Property="Padding" Value="0,0,0,2"/>
    </Style>

    <Style x:Key="SettingsCombo" TargetType="ComboBox">
        <Setter Property="Margin" Value="5,0,0,5"/>
    </Style>

    <Style x:Key="OpenConfig" TargetType="Button">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5 0 0 4"/>
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding AlgorithmProp.Value}" Value="{x:Static tester:OptimizationAlgorithms.Bruteforce}">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <DataTemplate x:Key="CheckCellTemplate">
        <CheckBox IsChecked="{Binding SeekEnabledProp.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </DataTemplate>

    <DataTemplate x:Key="ParamValTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="2,0,2,0" Text="{Binding ValueDescription.Value}" Grid.Column="0" VerticalAlignment="Center"/>
            <Button Name="editBtn" Content="..." Grid.Column="1" cal:Message.Attach="Modify" Visibility="Hidden" Width="1"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SeekEnabledProp.Value}" Value="True">
                <Setter TargetName="editBtn" Property="Visibility" Value="Visible"/>
                <Setter TargetName="editBtn" Property="Width" Value="Auto"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="AlgorithmComboBoxItem">
        <TextBlock Text="{l:ResxBinding Prefix=OptMode_}"/>
    </DataTemplate>

    <DataTemplate x:Key="MetricComboBoxItem">
        <TextBlock Text="{l:ResxBinding Key, Prefix=OptMetric_}"/>
    </DataTemplate>

    <!-- View Template -->

    <ControlTemplate x:Key="OptimizerPage.Classic">
        <StackPanel Orientation="Vertical" IsEnabled="{Binding CanSetup.Value}">
            <WrapPanel>
                <StackPanel Orientation="Horizontal" Margin="5,5,5,0">
                    <Label Content="Algorithm:" Style="{StaticResource SettingsLabel}"/>
                    <ComboBox Style="{StaticResource SettingsCombo}" Width="200"
                              ItemsSource="{Binding AvailableAlgorithms}" SelectedValue="{Binding AlgorithmProp.Value}"
                              ItemTemplate="{StaticResource AlgorithmComboBoxItem}"/>
                    <Button Content="{DynamicResource CogwheelIcon}" Style="{StaticResource OpenConfig}"
                            cal:Message.Attach="OpenAlgoSetup"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5,5,5,0">
                    <Label Content="Metric:" Style="{StaticResource SettingsLabel}"/>
                    <ComboBox SelectedIndex="0" Style="{StaticResource SettingsCombo}" Width="200"
                              ItemsSource="{Binding AvailableMetrics}" SelectedItem="{Binding SelectedMetric.Value}"
                              ItemTemplate="{StaticResource MetricComboBoxItem}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5,5,5,0">
                    <Label Content="Cores:" Style="{StaticResource SettingsLabel}"/>
                    <ComboBox MaxWidth="80" Style="{StaticResource SettingsCombo}" Width="60" HorizontalAlignment="Left"
                              ItemsSource="{Binding AvailableParallelismList}" SelectedItem="{Binding ParallelismProp.Value}"/>
                </StackPanel>
            </WrapPanel>

            <!--<Label Content="Bot parameters:"/>-->
            <DataGrid AutoGenerateColumns="False" Margin="5,10,5,5" Style="{DynamicResource NoHScrollDataGrid_Style}"
                      ItemsSource="{Binding Parameters}" CanUserReorderColumns="False" CanUserSortColumns="False">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SeekEnabledProp.Value}" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="cal:Message.Attach" Value="[Event MouseDoubleClick] = [Action Modify]"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <!--<DataGridTextColumn Header="Property" Width="1.5*" Binding="{Binding Model.ParamName}" />-->
                    <DataGridTemplateColumn Width="22" CanUserResize="False" CellTemplate="{StaticResource CheckCellTemplate}"/>
                    <!--<DataGridCheckBoxColumn Width="222" CanUserResize="False" Binding="{Binding SeekEnabledProp.Value, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>-->
                    <DataGridTextColumn Header="Parameter" Width="1*" Binding="{Binding ParamName}"/>
                    <DataGridTemplateColumn Header="Value" Width="1.5*" CellTemplate="{StaticResource ParamValTemplate}"/>
                    <!--<DataGridTemplateColumn Header="Scenario" Width="2*" CellTemplate="{StaticResource ParamValTemplate}"/>-->
                    <DataGridTextColumn Header="Variants count" Binding="{Binding CaseCountProp.Value}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>
    </ControlTemplate>

    <!-- View Style -->

    <Style x:Key="BacktesterOptimizerViewStyle.Classic" TargetType="UserControl">
        <Setter Property="Template" Value="{StaticResource OptimizerPage.Classic}"/>
    </Style>

</ResourceDictionary>