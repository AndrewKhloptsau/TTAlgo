<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:TickTrader.Algo.Common;assembly=TickTrader.Algo.Common"
                    xmlns:l="clr-namespace:TickTrader.BotTerminal">

    <!--Base Button Template/Style-->
    <ControlTemplate x:Key="FlatButton_Template" TargetType="{x:Type ButtonBase}">
        <Border Name="Border" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=CornerRadius}"
                IsHitTestVisible="{TemplateBinding IsHitTestVisible}"
                Background="{TemplateBinding Background}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=HighlightBackground}"/>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=DisabledBackground}"/>
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="ButtonBaseStyle" TargetType="ButtonBase" >
        <Setter Property="Template" Value="{StaticResource FlatButton_Template}"></Setter>
        <Setter Property="Padding" Value="2" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Shell_PrimaryForeground}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsHitTestVisible" Value="True" />
    </Style>

    <!--FlatButton-->
    
    <Style x:Key="FlatButtonMainStyle" TargetType="l:FlatButton" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource Shell_SecondaryForeground}"/>
        <Setter Property="DisabledBackground" Value="{DynamicResource Dialog_ControlDisabledBackground}" />
        <Setter Property="CornerRadius" Value="3"></Setter>
    </Style>
    
    <Style TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}"/>

    <!--Icon Button -->

    <ControlTemplate x:Key="IconButton_Template" TargetType="Button">
        <Border Name="Border" CornerRadius="2"
                IsHitTestVisible="True"
                Background="{TemplateBinding Background}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Control.Foreground" Value="{DynamicResource Shell_PrimaryForeground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="IconButton_Style" TargetType="Button" >
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Shell_SecondaryForeground}" />
        <Setter Property="Template" Value="{StaticResource IconButton_Template}" />
        <Setter Property="Background" Value="{DynamicResource Dialog_ControlBackground}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay, Path=DisabledBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--FlatToggleButton-->
    <Style x:Key="FlatToggleButtonMainStyle" TargetType="l:FlatToggleButton" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource Dialog_ButtonBackground}"/>
        <Setter Property="HighlightBackground" Value="{DynamicResource Dialog_OkButtonHighlightBackground}"/>
        <Setter Property="CheckedBackground" Value="{DynamicResource Dialog_OkButtonBackground}"/>
        <Setter Property="DisabledBackground" Value="{DynamicResource Dialog_ControlDisabledBackground}" />
        <Setter Property="CornerRadius" Value="3"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay, Path=CheckedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="l:FlatToggleButton" BasedOn="{StaticResource FlatToggleButtonMainStyle}"/>

    <!--FlatRadioButton-->
    <Style x:Key="FlatRadioButtonMainStyle" TargetType="l:FlatRadioButton" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource Dialog_ButtonBackground}"/>
        <Setter Property="HighlightBackground" Value="{DynamicResource Dialog_OkButtonHighlightBackground}"/>
        <Setter Property="CheckedBackground" Value="{DynamicResource Dialog_OkButtonBackground}"/>
        <Setter Property="DisabledBackground" Value="{DynamicResource Dialog_ControlDisabledBackground}" />
        <Setter Property="CornerRadius" Value="3"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay, Path=CheckedBackground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay, Path=DisabledBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="l:FlatRadioButton" BasedOn="{StaticResource FlatRadioButtonMainStyle}"></Style>
    
    <Style x:Key="BuyFlatRadioButtonStyle" TargetType="l:FlatRadioButton" BasedOn="{StaticResource FlatRadioButtonMainStyle}">
        <Setter Property="HighlightBackground" Value="{DynamicResource RateUpHighlightColor}"/>
        <Setter Property="CheckedBackground" Value="{DynamicResource RateUpColor}"/>
    </Style>
    <Style x:Key="SellFlatRadioButtonStyle" TargetType="l:FlatRadioButton" BasedOn="{StaticResource FlatRadioButtonMainStyle}">
        <Setter Property="HighlightBackground" Value="{DynamicResource RateDownHighlightColor}"/>
        <Setter Property="CheckedBackground" Value="{DynamicResource RateDownColor}"/>
    </Style>

    <!-- Auto Color Flat Button -->
    <ControlTemplate x:Key="AutoColorFlatButton_Template" TargetType="Button">
        <Border Name="Border" CornerRadius="2"
                Background="{TemplateBinding Background}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0.75" />
            </Trigger>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="AutoColorFlatButton_Style" TargetType="Button">
        <Setter Property="Template" Value="{StaticResource AutoColorFlatButton_Template}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Shell_PrimaryForeground}" />
    </Style>

    <Style x:Key="ListItemActionButton_Style" TargetType="Button" BasedOn="{StaticResource IconButton_Style}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="17"/>
        <Setter Property="MinWidth" Value="17"/>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Shell_PrimaryForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TrickyButton" TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}">
        <Setter Property="Margin" Value="2.5,2.5,2.5,2.5" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="Background" Value="{DynamicResource RateUnknownColor}" />
        <Setter Property="HighlightBackground" Value="{DynamicResource RateUnknownHighlightColor}" />
    </Style>

    <ControlTemplate x:Key="SellButtonTemplate" TargetType="l:FlatButton" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="32" />
            </Grid.RowDefinitions>
            <Rectangle Name="Part1" Fill="{TemplateBinding Background}" RadiusX="3" RadiusY="3" Grid.Row="1" Grid.ColumnSpan="2" />
            <Rectangle Name="Part2" Fill="{TemplateBinding Background}" RadiusX="3" RadiusY="3" Grid.RowSpan="2" />
            <Border Name="Part3" Background="Transparent" BorderThickness="5,0,0,5" BorderBrush="{TemplateBinding Background}" Margin="-5,5,5,-5" 
                        Grid.Column="1" Grid.Row="0" CornerRadius="0,0,0,7" />
            <TextBlock Text="{l:Resx SymbolDetails_Sell}" FontSize="14" Margin="5,0,0,5" VerticalAlignment="Stretch" TextAlignment="Left" />
            <ContentPresenter Margin="{TemplateBinding Padding}" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter TargetName="Part1" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=HighlightBackground}"/>
                <Setter TargetName="Part2" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=HighlightBackground}"/>
                <Setter TargetName="Part3" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=HighlightBackground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BuyButtonTemplate" TargetType="l:FlatButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="32" />
            </Grid.RowDefinitions>
            <Rectangle Name="Part1" Fill="{TemplateBinding Background}" RadiusX="3" RadiusY="3" Grid.Row="1" Grid.ColumnSpan="2"/>
            <Rectangle Name="Part2" Fill="{TemplateBinding Background}" RadiusX="3" RadiusY="3" Grid.RowSpan="2" Grid.Column="1" />
            <Border Name="Part3" Background="Transparent" BorderThickness="0,0,5,5" BorderBrush="{TemplateBinding Background}" Margin="5,5,-5,-5" 
                        Grid.Column="0" Grid.Row="0" CornerRadius="0,0,7,0" />
            <TextBlock Text="{l:Resx SymbolDetails_Buy}" FontSize="14" Margin="0,0,5,5" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextAlignment="Right" />
            <ContentPresenter Margin="{TemplateBinding Padding}" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter TargetName="Part1" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=HighlightBackground}"/>
                <Setter TargetName="Part2" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=HighlightBackground}"/>
                <Setter TargetName="Part3" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=HighlightBackground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BotControlCloseButtonStyle" TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2 0 2 0"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="7" Height="7" Stretch="Uniform" 
                          StrokeThickness="1"
                          Data="{StaticResource Cross}"
                          Stroke="{DynamicResource Shell_PrimaryForeground}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource Chart_BotControl_Background}"/>
        <Setter Property="HighlightBackground" Value="{DynamicResource Chart_BotControl_HighlightBackground}" />
    </Style>

    <Style x:Key="BotControlStartStopButtonStyle" TargetType="l:FlatButton" BasedOn="{StaticResource AutoColorFlatButton_Style}">
        <Setter Property="Background" Value="{DynamicResource Chart_BotControl_StartBackground}"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="7" Height="7" Stretch="Uniform" StrokeThickness="0" SnapsToDevicePixels="True"
                          Data="{StaticResource RightArrow}"
                          Fill="{DynamicResource Shell_PrimaryForeground}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                <Setter Property="Background" Value="{DynamicResource Chart_BotControl_StopBackground}"/>
                <Setter Property="Content">
                    <Setter.Value>
                        <Path Width="7" Height="7" Stretch="Uniform" StrokeThickness="0" SnapsToDevicePixels="True"
                                  Data="{StaticResource Square}"
                                  Fill="{DynamicResource Shell_PrimaryForeground}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BotStateStartStopButtonStyle" TargetType="l:FlatButton" BasedOn="{StaticResource AutoColorFlatButton_Style}">
        <Setter Property="Background" Value="{DynamicResource Chart_BotControl_StartBackground}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="14" Height="14" Stretch="Uniform" StrokeThickness="0" SnapsToDevicePixels="True"
                          Data="{StaticResource RightArrow}"
                          Fill="{DynamicResource Shell_PrimaryForeground}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                <Setter Property="Background" Value="{DynamicResource Chart_BotControl_StopBackground}"/>
                <Setter Property="Content">
                    <Setter.Value>
                        <Path Width="14" Height="14" Stretch="Uniform" StrokeThickness="0" SnapsToDevicePixels="True"
                                  Data="{StaticResource Square}"
                                  Fill="{DynamicResource Shell_PrimaryForeground}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PluginSetupPage_ButtonStyle" BasedOn="{StaticResource FlatButtonMainStyle}" TargetType="l:FlatButton">
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="5,7" />
        <Setter Property="Background" Value="{DynamicResource Dialog_ButtonBackground}" />
        <Setter Property="HighlightBackground" Value="{DynamicResource Dialog_ButtonHighlightBackground}" />
    </Style>

    <Style x:Key="ParamUtilityButtonStyle" TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource Dialog_ButtonBackground}"/>
        <Setter Property="HighlightBackground" Value="{DynamicResource Dialog_ButtonHighlightBackground}"/>
        <Setter Property="Margin" Value="3,0,0,0"/>
    </Style>

    <Style x:Key="PanelActionButtonStyle" TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}">
        <Setter Property="Background" Value="{DynamicResource ToolBarItem_DisabledBrush}"/>
        <Setter Property="HighlightBackground" Value="{DynamicResource ShellPanel_ItemBackgroundBrush}"/>
    </Style>

</ResourceDictionary>