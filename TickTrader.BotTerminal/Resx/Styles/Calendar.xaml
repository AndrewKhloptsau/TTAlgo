<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:TickTrader.BotTerminal"
                    xmlns:controls="clr namespace:System.Windows.Controls;assembly=System.Windows.Controls"
                    xmlns:controlsPrimitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls">
    <!-- Buttons Template -->
    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border BorderThickness="1"
                CornerRadius="3"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}">
            <Border Background="Transparent"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Canvas Height="5" Width="5">
                    <Polygon x:Name="Arrow" Fill="{DynamicResource Shell_SecondaryForeground}" Points="0,2.5 5,0 5,5" />
                </Canvas>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Shell_PrimaryForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border BorderThickness="1"
                CornerRadius="3"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}">
            <Border Background="Transparent"   
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Canvas Height="5" Width="5">
                    <Polygon x:Name="Arrow" Fill="{DynamicResource Shell_SecondaryForeground}" Points="0,0 5,2.5 0,5" />
                </Canvas>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Shell_PrimaryForeground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border Name="Border" CornerRadius="2"
                Background="{TemplateBinding Background}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"/>
        </Border>
    </ControlTemplate>
    <!-- Toggle Style -->

    <Style x:Key="CalendarButtonBaseStyle" TargetType="ButtonBase">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="0 5 0 8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="HeaderButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource CalendarButtonBaseStyle}">
        <Setter Property="Template" Value="{StaticResource HeaderButtonTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource Shell_PrimaryForeground}"/>
    </Style>

    <Style x:Key="PreviousButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource CalendarButtonBaseStyle}">
        <Setter Property="Template" Value="{StaticResource PreviousButtonTemplate}" />
    </Style>

    <Style x:Key="NextButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource CalendarButtonBaseStyle}">
        <Setter Property="Template" Value="{StaticResource NextButtonTemplate}" />
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="styleDatePickerCalendarButton" TargetType="{x:Type CalendarButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource Dialog_ControlBackground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" 
                                CornerRadius="3"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            <ContentControl x:Name="block"
                                            IsTabStop="False"
                                            Foreground="{DynamicResource Shell_PrimaryForeground}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Padding="0" Margin="0"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="block" Property="Foreground" Value="{DynamicResource Shell_SecondaryForeground}"/>
                            <Setter Property="IsEnabled"  Value="False"/>

                        </Trigger>
                        <Trigger Property="HasSelectedDays" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource RateUpColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ControlFocusBorder}"/>
                            <Setter TargetName="block" Property="Foreground" Value="{DynamicResource Shell_PrimaryForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="border" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsInactive" Value="False"/>

                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource RateUpHighlightColor}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="styleDatePickerCalendarDayButton" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource Dialog_ControlBackground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" 
                                CornerRadius="3"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            <ContentControl x:Name="block"
                                            IsTabStop="False"
                                            Foreground="{DynamicResource Shell_PrimaryForeground}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Padding="0" Margin="0"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"></Condition>
                                <Condition Property="IsToday" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Dialog_PanelBackground}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInactive" Value="True"></Condition>
                                <Condition Property="IsSelected" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="block" Property="Foreground" Value="{DynamicResource Shell_SecondaryForeground}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource RateUpColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ControlFocusBorder}"/>
                            <Setter TargetName="block" Property="Foreground" Value="{DynamicResource Shell_PrimaryForeground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource RateUpHighlightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="styleDatePickerCalendarItem" TargetType="{x:Type CalendarItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <Label>
                                <TextBlock Foreground="{DynamicResource Shell_PrimaryForeground}"
                                       HorizontalAlignment="Center"
                                       Margin="0 5 0 8"
                                       Text="{Binding}"
                                       VerticalAlignment="Center">
                                </TextBlock>
                            </Label>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Border Background="{DynamicResource Dialog_ControlBackground}"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource ControlFocusBorder}"
                        Padding="3"
                        CornerRadius="3">
                        <Grid Name="PART_Root">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="PART_PreviousButton"
                                        Grid.Column="0"
                                        Grid.Row="0"
                                        DockPanel.Dock="Left"
                                        Style="{StaticResource PreviousButtonStyle}"
                                        Width="25"
                                        Content="&lt;"
                                        Focusable="False"></Button>
                            <Button x:Name="PART_NextButton"
                                        Grid.Column="2"
                                        Grid.Row="0"
                                        Style="{StaticResource NextButtonStyle}"
                                        DockPanel.Dock="Right"
                                        Width="25"
                                        Content="&gt;" Focusable="False">
                            </Button>
                            <Button x:Name="PART_HeaderButton"
                                        Grid.Column="1"
                                        Grid.Row="0"
                                        Style="{StaticResource HeaderButtonStyle}"
                                        Width="135"
                                        MaxWidth="135">
                            </Button>

                            <Grid x:Name="PART_MonthView" 
                              Grid.ColumnSpan="3"
                              Grid.Row="1"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                            </Grid>
                            <Grid x:Name="PART_YearView"
                                  Visibility="Hidden"
                                  Grid.ColumnSpan="3"
                                  Grid.Row="1"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                            </Grid>

                            <Rectangle x:Name="PART_DisabledVisual"
                                   Opacity="0"
                                   Grid.RowSpan="2"
                                   Grid.ColumnSpan="3"
                                   Visibility="Collapsed"
                                   Fill="{DynamicResource Dialog_ControlDisabledBackground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Calendar}}, Path=DisplayMode}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Calendar}}, Path=DisplayMode}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle" Value="{StaticResource styleDatePickerCalendarButton}"/>
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource styleDatePickerCalendarDayButton}"/>
        <Setter Property="CalendarItemStyle" Value="{StaticResource styleDatePickerCalendarItem}"/>
    </Style>
</ResourceDictionary>