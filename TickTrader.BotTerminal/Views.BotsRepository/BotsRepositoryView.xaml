<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:TickTrader.BotTerminal"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <SolidColorBrush x:Key="UpdateAvailableColor" Color="DodgerBlue"/>
    <SolidColorBrush x:Key="SelectedUpdateAvailableColor" Color="RoyalBlue"/>

    <Style x:Key="ToolButton" TargetType="Button">
        <Setter Property="FontFamily" Value="/FontAwesome.Sharp;component/fonts/#Font Awesome 6 Free Solid"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolToggleButton" TargetType="ToggleButton">
        <Setter Property="FontFamily" Value="/FontAwesome.Sharp;component/fonts/#Font Awesome 6 Free Solid"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SelectedMetadataControl" TargetType="Control">
        <Grid Grid.Column="1">
            <Grid.Resources>
                <Style x:Key="TitleName" TargetType="TextBlock">
                    <Setter Property="Margin" Value="0 5 0 0"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Text="{Binding Name}" FontSize="20" FontWeight="Bold" Margin="0 0 0 10"/>

            <Grid Grid.Row="1">
                <Grid.Resources>
                    <Style x:Key="PropertyNameStyle" TargetType="TextBlock">
                        <Setter Property="Margin" Value="0 5"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Style>

                    <Style x:Key="PropertyValueStyle" TargetType="TextBlock">
                        <Setter Property="Margin" Value="10 5"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Style="{StaticResource PropertyNameStyle}" Text="Author:"/>
                <TextBlock Grid.Row="1" Style="{StaticResource PropertyNameStyle}" Text="Source:"/>

                <TextBlock Grid.Row="2" Style="{StaticResource PropertyNameStyle}" Text="Lisense:"/>

                <TextBlock Grid.Row="3" Style="{StaticResource PropertyNameStyle}" Text="Category:"/>
                <TextBlock Grid.Row="3" Grid.Column="1" Style="{StaticResource PropertyValueStyle}" Text="{Binding Category.Value}"/>

                <TextBlock Grid.Row="4" Style="{StaticResource PropertyNameStyle}" Text="Last update:"/>
            </Grid>

            <TextBlock Grid.Row="2" Text="Description" Style="{StaticResource TitleName}"/>
            <TextBlock Grid.Row="3" Text="{l:UpdateBind Description.Value}" 
                       HorizontalAlignment="Stretch" TextWrapping="WrapWithOverflow"/>

            <Grid Grid.Row="4" Margin="0 10 0 0" Visibility="{l:UpdateBind HasBetterVersion.Value, Converter={StaticResource BoolToVis}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{l:UpdateBind RemoteVersion.Value, StringFormat=New version {0} is available!}" 
                           Foreground="{StaticResource UpdateAvailableColor}" FontSize="14" VerticalAlignment="Center"/>
                <l:FlatButton Grid.Column="1" Width="60" Content="Update">
                    <l:FlatButton.Style>
                        <Style TargetType="l:FlatButton" BasedOn="{StaticResource FlatButtonMainStyle}">
                            <Setter Property="Width" Value="60"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="Background" Value="{DynamicResource Dialog_ButtonBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource UpdateAvailableColor}"/>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource SelectedUpdateAvailableColor}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource SelectedUpdateAvailableColor}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </l:FlatButton.Style>
                </l:FlatButton>
            </Grid>

            <TextBlock Grid.Row="5" Text="Installed" Style="{StaticResource TitleName}"/>
            <ListView Grid.Row="6" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Versions}" Margin="0 2">
                <ListView.Template>
                    <ControlTemplate>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="DemiBold"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="0 3"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Background="WhiteSmoke">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="1" Text="Version"/>
                                <TextBlock Grid.Column="2" Text="Api" />
                            </Grid>
                            <ItemsPresenter Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </ListView.Template>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0 0 0 1" BorderBrush="LightGray" Margin="0 2">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </Grid.Resources>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <ToggleButton x:Name="infoBtn" Grid.Column="0" ToolTip="Show more info">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToolToggleButton}">
                                            <Setter Property="Foreground" Value="SlateGray"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Content" Value="{fa:Icon ChevronUp}"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter Property="Content" Value="{fa:Icon ChevronDown}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <TextBlock Grid.Column="1" Text="{Binding Version}" />
                                <TextBlock Grid.Column="2" Text="{Binding ApiVersion}" />

                                <Button Grid.Column="3" Content="{fa:Icon Xmark}" 
                                        cal:Message.Attach="RemovePackageWithVersion" ToolTip="Remove the bot package">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ToolButton}">
                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                            <Setter Property="Margin" Value="5 0"/>
                                            <Setter Property="Foreground" Value="Red"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="DarkRed"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Grid Grid.ColumnSpan="4" Grid.Row="1" Margin="10 0 0 0"
                                      Visibility="{Binding IsChecked, ElementName=infoBtn, Converter={StaticResource BoolToVis}}">

                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                                        </Style>
                                    </Grid.Resources>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="90"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Created:" FontWeight="DemiBold"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding CreatedDate, Converter={StaticResource UtcShortDateTimeFormat}}"/>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Last modify:" FontWeight="DemiBold"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding LastModify, Converter={StaticResource UtcShortDateTimeFormat}}"/>

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Package Id:" FontWeight="DemiBold"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding PackageId}" />

                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Package size:" FontWeight="DemiBold"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Size}"/>

                                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Package path:" FontWeight="DemiBold"/>
                                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding PackagePath}"/>

                                    <Button Grid.Row="4" Grid.Column="2" Content="{fa:Icon FolderOpen}" 
                                            cal:Message.Attach="OpenPackageInExplorer" ToolTip="Open folder with package">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ToolButton}">
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                <Setter Property="VerticalAlignment" Value="Top"/>
                                                <Setter Property="Margin" Value="5 0"/>
                                                <Setter Property="Foreground" Value="Gray"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="BotMetadataItemTemplate">
        <Border BorderThickness="0 0 0 1" BorderBrush="LightGray">
            <Grid Height="60" Margin="10 0">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Center" IsChecked="{l:UpdateBind IsSelected.Value}"/>
                <Image Grid.Column="1">
                    <Image.Source>
                        <BitmapImage DecodePixelWidth="100" UriSource="/Resx/Logo/icon_logo_inversion.png" />
                    </Image.Source>
                </Image>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{Binding Name}" FontWeight="Bold"/>
                    <TextBlock Grid.Row="1" Text="{l:UpdateBind Description.Value}" FontSize="10" TextWrapping="Wrap"/>
                </Grid>

                <Grid Grid.Column="3" Margin="20 0 0 0" HorizontalAlignment="Right">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </Grid.Resources>

                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{l:UpdateBind Version.Value}"/>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{l:UpdateBind RemoteVersion.Value}" 
                               Visibility="{l:UpdateBind HasBetterVersion.Value, Converter={StaticResource BoolToVis}}"/>

                    <Button Grid.Column="0" Grid.Row="1" Margin="0 1 2 0" Content="{fa:Icon CircleArrowUp}" ToolTip="Update the bot"
                            Visibility="{l:UpdateBind HasBetterVersion.Value, Converter={StaticResource BoolToVis}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ToolButton}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource SelectedUpdateAvailableColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="BotsRepositoryView.Template.Classic">
        <Grid Background="{TemplateBinding Background}">
            <Grid.Resources>
                <Style TargetType="ListView">
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>

                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0"/>
                    <!--need to reset-->
                    <Setter Property="Padding" Value="0"/>
                    <!--need to reset-->
                </Style>
            </Grid.Resources>



            <TabControl Grid.Column="0">
                <TabItem Header="Installed">
                    <Grid Margin="5 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="{Binding Name}" FontSize="20" FontWeight="Bold"/>

                        <Grid Margin="12 5 0 5" Grid.Row="1">
                            <Grid.Resources>
                                <Style TargetType="CheckBox">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                </Style>
                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <CheckBox Grid.Column="0" IsChecked="{l:UpdateBind SelectAllBots.Value}"/>
                            <TextBox Grid.Column="1" Margin="10 0" FontSize="14" Height="26" />

                            <CheckBox Grid.Column="3" Content="Only updates" IsChecked="{l:UpdateBind OnlyWithUpdates.Value}"/>
                            <l:FlatButton Grid.Column="4" Margin="10 0 0 0" Content="Update All"
                                          cal:Message.Attach="UpdateAllSelectedBots"
                                          IsEnabled="{l:UpdateBind CanUpdateBots.Value}"
                                          Background="{DynamicResource Dialog_ButtonBackground}"
                                          HighlightBackground="{DynamicResource Dialog_ButtonHighlightBackground}"/>
                        </Grid>
                        <ListView x:Name="metainfoList" Grid.Row="2" ItemsSource="{Binding CurrentBots}" SelectedItem="{Binding SelectedBot.Value}" 
                                  ItemTemplate="{StaticResource BotMetadataItemTemplate}"/>

                        <Rectangle Grid.Column="1" Grid.RowSpan="3" VerticalAlignment="Stretch" Fill="Black" Width="0.3" Margin="5 0"/>

                        <Control Grid.Column="2" Grid.RowSpan="3" Margin="5 0" 
                                 DataContext="{l:UpdateBind SelectedBot.Value}" 
                                 Template="{StaticResource SelectedMetadataControl}" 
                                 Visibility="{l:UpdateBind SelectedItem, ElementName=metainfoList, Converter={StaticResource NullOrEmptyToVis}}"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Browse">
                    <!--<TabItem.Content>
                        <ListView ItemsSource="{Binding Releases}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="10 5">
                                        <TextBlock Text="{Binding Name}" FontSize="20" FontWeight="Bold"/>
                                        <ListView ItemsSource="{Binding Plugins}">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="10 0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition Width="auto"/>
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock Grid.Column="0" Text="{Binding Name}" FontSize="14"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding Version}" FontSize="14"/>
                                                        <Button Grid.Column="2" Style="{StaticResource ToolButton}">
                                                            <Button.Content>
                                                                <fa:IconBlock Icon="Download"/>
                                                            </Button.Content>
                                                            <Button.ToolTip>
                                                                <TextBlock Text="Load package"/>
                                                            </Button.ToolTip>
                                                        </Button>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </TabItem.Content>-->
                </TabItem>
            </TabControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="BotsRepositoryViewStyle.Classic" TargetType="Window">
        <Setter Property="Template" Value="{StaticResource BotsRepositoryView.Template.Classic}"/>
        <Setter Property="Background" Value="{DynamicResource Dialog_Background}"/>
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Width" Value="1100"/>
        <Setter Property="Height" Value="700"/>
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="MinHeight" Value="300"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
    </Style>
</ResourceDictionary>