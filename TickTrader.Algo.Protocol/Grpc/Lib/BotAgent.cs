// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bot_agent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TickTrader.Algo.Protocol.Grpc.Lib {

  /// <summary>Holder for reflection information generated from bot_agent.proto</summary>
  public static partial class BotAgentReflection {

    #region Descriptor
    /// <summary>File descriptor for bot_agent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BotAgentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9ib3RfYWdlbnQucHJvdG8SIVRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYhoKa2V5cy5wcm90bxoObWV0YWRhdGEucHJvdG8aDGNvbmZpZy5w",
            "cm90byJCCgdSZXF1ZXN0IjcKDVJlcXVlc3RTdGF0dXMSCwoHU1VDQ0VTUxAA",
            "EhkKFUlOVEVSTkFMX1NFUlZFUl9FUlJPUhABIl0KDExvZ2luUmVxdWVzdBIN",
            "CgVsb2dpbhgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIVCg1tYWpvcl92ZXJz",
            "aW9uGAMgASgFEhUKDW1pbm9yX3ZlcnNpb24YBCABKAUimgIKDUxvZ2luUmVz",
            "cG9uc2USSAoGc3RhdHVzGAEgASgOMjguVGlja1RyYWRlci5BbGdvLlByb3Rv",
            "Y29sLkdycGMuTGliLlJlcXVlc3QuUmVxdWVzdFN0YXR1cxJKCgVlcnJvchgC",
            "IAEoDjI7LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5Mb2dp",
            "blJlc3BvbnNlLkxvZ2luRXJyb3ISFQoNbWFqb3JfdmVyc2lvbhgDIAEoBRIV",
            "Cg1taW5vcl92ZXJzaW9uGAQgASgFIkUKCkxvZ2luRXJyb3ISCAoETk9ORRAA",
            "EhcKE0lOVkFMSURfQ1JFREVOVElBTFMQARIUChBWRVJTSU9OX01JU01BVENI",
            "EAIiDwoNTG9nb3V0UmVxdWVzdCLvAQoOTG9nb3V0UmVzcG9uc2USSAoGc3Rh",
            "dHVzGAEgASgOMjguVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGli",
            "LlJlcXVlc3QuUmVxdWVzdFN0YXR1cxJOCgZyZWFzb24YAiABKA4yPi5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuTG9nb3V0UmVzcG9uc2Uu",
            "TG9nb3V0UmVhc29uEgwKBHRleHQYAyABKAkiNQoMTG9nb3V0UmVhc29uEhIK",
            "DkNMSUVOVF9SRVFVRVNUEAASEQoNU0VSVkVSX0xPR09VVBABIhQKElBhY2th",
            "Z2VMaXN0UmVxdWVzdCKhAQoTUGFja2FnZUxpc3RSZXNwb25zZRJICgZzdGF0",
            "dXMYASABKA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "UmVxdWVzdC5SZXF1ZXN0U3RhdHVzEkAKCHBhY2thZ2VzGAIgAygLMi4uVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlBhY2thZ2VJbmZvIhQK",
            "EkFjY291bnRMaXN0UmVxdWVzdCKmAQoTQWNjb3VudExpc3RSZXNwb25zZRJI",
            "CgZzdGF0dXMYASABKA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuUmVxdWVzdC5SZXF1ZXN0U3RhdHVzEkUKCGFjY291bnRzGAIgAygL",
            "MjMuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFjY291bnRN",
            "b2RlbEluZm8iEAoOQm90TGlzdFJlcXVlc3QimgEKD0JvdExpc3RSZXNwb25z",
            "ZRJICgZzdGF0dXMYASABKA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wu",
            "R3JwYy5MaWIuUmVxdWVzdC5SZXF1ZXN0U3RhdHVzEj0KBGJvdHMYAiADKAsy",
            "Ly5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQm90TW9kZWxJ",
            "bmZvIhsKGVN1YnNjcmliZVRvVXBkYXRlc1JlcXVlc3QiigQKClVwZGF0ZUlu",
            "Zm8SRgoEdHlwZRgBIAEoDjI4LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYi5VcGRhdGVJbmZvLlVwZGF0ZVR5cGUSRwoHcGFja2FnZRgFIAEo",
            "CzI0LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5QYWNrYWdl",
            "VXBkYXRlSW5mb0gAEkcKB2FjY291bnQYBiABKAsyNC5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudFVwZGF0ZUluZm9IABJSCg1h",
            "Y2NvdW50X3N0YXRlGAcgASgLMjkuVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLkFjY291bnRTdGF0ZVVwZGF0ZUluZm9IABI/CgNib3QYCCAB",
            "KAsyMC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQm90VXBk",
            "YXRlSW5mb0gAEkoKCWJvdF9zdGF0ZRgJIAEoCzI1LlRpY2tUcmFkZXIuQWxn",
            "by5Qcm90b2NvbC5HcnBjLkxpYi5Cb3RTdGF0ZVVwZGF0ZUluZm9IACIyCgpV",
            "cGRhdGVUeXBlEgkKBUFEREVEEAASDAoIUkVQTEFDRUQQARILCgdSRU1PVkVE",
            "EAJCDQoLdXBkYXRlX2luZm8iVAoRUGFja2FnZVVwZGF0ZUluZm8SPwoHcGFj",
            "a2FnZRgBIAEoCzIuLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5QYWNrYWdlSW5mbyJZChFBY2NvdW50VXBkYXRlSW5mbxJECgdhY2NvdW50",
            "GAEgASgLMjMuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFj",
            "Y291bnRNb2RlbEluZm8iXgoWQWNjb3VudFN0YXRlVXBkYXRlSW5mbxJECgdh",
            "Y2NvdW50GAEgASgLMjMuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMu",
            "TGliLkFjY291bnRNb2RlbEluZm8iTQoNQm90VXBkYXRlSW5mbxI8CgNib3QY",
            "ASABKAsyLy5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQm90",
            "TW9kZWxJbmZvIlIKEkJvdFN0YXRlVXBkYXRlSW5mbxI8CgNib3QYASABKAsy",
            "Ly5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQm90TW9kZWxJ",
            "bmZvIiEKD1N0YXJ0Qm90UmVxdWVzdBIOCgZib3RfaWQYASABKAkiXAoQU3Rh",
            "cnRCb3RSZXNwb25zZRJICgZzdGF0dXMYASABKA4yOC5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdC5SZXF1ZXN0U3RhdHVzIiAK",
            "DlN0b3BCb3RSZXF1ZXN0Eg4KBmJvdF9pZBgBIAEoCSJbCg9TdG9wQm90UmVz",
            "cG9uc2USSAoGc3RhdHVzGAEgASgOMjguVGlja1RyYWRlci5BbGdvLlByb3Rv",
            "Y29sLkdycGMuTGliLlJlcXVlc3QuUmVxdWVzdFN0YXR1cyKQAQoNQWRkQm90",
            "UmVxdWVzdBI+CgdhY2NvdW50GAEgASgLMi0uVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLkFjY291bnRLZXkSPwoGY29uZmlnGAIgASgLMi8u",
            "VGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlBsdWdpbkNvbmZp",
            "ZyJaCg5BZGRCb3RSZXNwb25zZRJICgZzdGF0dXMYASABKA4yOC5UaWNrVHJh",
            "ZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdC5SZXF1ZXN0U3Rh",
            "dHVzIk4KEFJlbW92ZUJvdFJlcXVlc3QSDgoGYm90X2lkGAEgASgJEhEKCWNs",
            "ZWFuX2xvZxgCIAEoCBIXCg9jbGVhbl9hbGdvX2RhdGEYAyABKAgiXQoRUmVt",
            "b3ZlQm90UmVzcG9uc2USSAoGc3RhdHVzGAEgASgOMjguVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3QuUmVxdWVzdFN0YXR1cyJt",
            "ChZDaGFuZ2VCb3RDb25maWdSZXF1ZXN0Eg4KBmJvdF9pZBgBIAEoCRJDCgpu",
            "ZXdfY29uZmlnGAIgASgLMi8uVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdy",
            "cGMuTGliLlBsdWdpbkNvbmZpZyJjChdDaGFuZ2VCb3RDb25maWdSZXNwb25z",
            "ZRJICgZzdGF0dXMYASABKA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wu",
            "R3JwYy5MaWIuUmVxdWVzdC5SZXF1ZXN0U3RhdHVzIhQKEkFwaU1ldGFkYXRh",
            "UmVxdWVzdCKpAQoTQXBpTWV0YWRhdGFSZXNwb25zZRJICgZzdGF0dXMYASAB",
            "KA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVz",
            "dC5SZXF1ZXN0U3RhdHVzEkgKDGFwaV9tZXRhZGF0YRgCIAEoCzIyLlRpY2tU",
            "cmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5BcGlNZXRhZGF0YUluZm8i",
            "FQoTTWFwcGluZ3NJbmZvUmVxdWVzdCKsAQoUTWFwcGluZ3NJbmZvUmVzcG9u",
            "c2USSAoGc3RhdHVzGAEgASgOMjguVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLlJlcXVlc3QuUmVxdWVzdFN0YXR1cxJKCghtYXBwaW5ncxgC",
            "IAEoCzI4LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5NYXBw",
            "aW5nQ29sbGVjdGlvbkluZm8iFQoTU2V0dXBDb250ZXh0UmVxdWVzdCKsAQoU",
            "U2V0dXBDb250ZXh0UmVzcG9uc2USSAoGc3RhdHVzGAEgASgOMjguVGlja1Ry",
            "YWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3QuUmVxdWVzdFN0",
            "YXR1cxJKCg1zZXR1cF9jb250ZXh0GAIgASgLMjMuVGlja1RyYWRlci5BbGdv",
            "LlByb3RvY29sLkdycGMuTGliLlNldHVwQ29udGV4dEluZm8iWAoWQWNjb3Vu",
            "dE1ldGFkYXRhUmVxdWVzdBI+CgdhY2NvdW50GAEgASgLMi0uVGlja1RyYWRl",
            "ci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFjY291bnRLZXkigQIKF0FjY291",
            "bnRNZXRhZGF0YVJlc3BvbnNlEkgKBnN0YXR1cxgBIAEoDjI4LlRpY2tUcmFk",
            "ZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZXF1ZXN0LlJlcXVlc3RTdGF0",
            "dXMSSgoKZXJyb3JfaW5mbxgCIAEoCzI2LlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5Db25uZWN0aW9uRXJyb3JJbmZvElAKEGFjY291bnRf",
            "bWV0YWRhdGEYAyABKAsyNi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuQWNjb3VudE1ldGFkYXRhSW5mbyJ/ChFBZGRBY2NvdW50UmVxdWVz",
            "dBI+CgdhY2NvdW50GAEgASgLMi0uVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLkFjY291bnRLZXkSEAoIcGFzc3dvcmQYAiABKAkSGAoQdXNl",
            "X25ld19wcm90b2NvbBgDIAEoCCJeChJBZGRBY2NvdW50UmVzcG9uc2USSAoG",
            "c3RhdHVzGAEgASgOMjguVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMu",
            "TGliLlJlcXVlc3QuUmVxdWVzdFN0YXR1cyJWChRSZW1vdmVBY2NvdW50UmVx",
            "dWVzdBI+CgdhY2NvdW50GAEgASgLMi0uVGlja1RyYWRlci5BbGdvLlByb3Rv",
            "Y29sLkdycGMuTGliLkFjY291bnRLZXkiYQoVUmVtb3ZlQWNjb3VudFJlc3Bv",
            "bnNlEkgKBnN0YXR1cxgBIAEoDjI4LlRpY2tUcmFkZXIuQWxnby5Qcm90b2Nv",
            "bC5HcnBjLkxpYi5SZXF1ZXN0LlJlcXVlc3RTdGF0dXMiggEKFENoYW5nZUFj",
            "Y291bnRSZXF1ZXN0Ej4KB2FjY291bnQYASABKAsyLS5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudEtleRIQCghwYXNzd29yZBgC",
            "IAEoCRIYChB1c2VfbmV3X3Byb3RvY29sGAMgASgIImEKFUNoYW5nZUFjY291",
            "bnRSZXNwb25zZRJICgZzdGF0dXMYASABKA4yOC5UaWNrVHJhZGVyLkFsZ28u",
            "UHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdC5SZXF1ZXN0U3RhdHVzIlQKElRl",
            "c3RBY2NvdW50UmVxdWVzdBI+CgdhY2NvdW50GAEgASgLMi0uVGlja1RyYWRl",
            "ci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFjY291bnRLZXkiqwEKE1Rlc3RB",
            "Y2NvdW50UmVzcG9uc2USSAoGc3RhdHVzGAEgASgOMjguVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3QuUmVxdWVzdFN0YXR1cxJK",
            "CgplcnJvcl9pbmZvGAIgASgLMjYuVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLkNvbm5lY3Rpb25FcnJvckluZm8ihQEKF1Rlc3RBY2NvdW50",
            "Q3JlZHNSZXF1ZXN0Ej4KB2FjY291bnQYASABKAsyLS5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudEtleRIQCghwYXNzd29yZBgC",
            "IAEoCRIYChB1c2VfbmV3X3Byb3RvY29sGAMgASgIIrABChhUZXN0QWNjb3Vu",
            "dENyZWRzUmVzcG9uc2USSAoGc3RhdHVzGAEgASgOMjguVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3QuUmVxdWVzdFN0YXR1cxJK",
            "CgplcnJvcl9pbmZvGAIgASgLMjYuVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLkNvbm5lY3Rpb25FcnJvckluZm8iQQoUVXBsb2FkUGFja2Fn",
            "ZVJlcXVlc3QSEQoJZmlsZV9uYW1lGAEgASgJEhYKDnBhY2thZ2VfYmluYXJ5",
            "GAIgASgMImEKFVVwbG9hZFBhY2thZ2VSZXNwb25zZRJICgZzdGF0dXMYASAB",
            "KA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVz",
            "dC5SZXF1ZXN0U3RhdHVzIlYKFFJlbW92ZVBhY2thZ2VSZXF1ZXN0Ej4KB3Bh",
            "Y2thZ2UYASABKAsyLS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuUGFja2FnZUtleSJhChVSZW1vdmVQYWNrYWdlUmVzcG9uc2USSAoGc3Rh",
            "dHVzGAEgASgOMjguVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGli",
            "LlJlcXVlc3QuUmVxdWVzdFN0YXR1cyJYChZEb3dubG9hZFBhY2thZ2VSZXF1",
            "ZXN0Ej4KB3BhY2thZ2UYASABKAsyLS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9j",
            "b2wuR3JwYy5MaWIuUGFja2FnZUtleSJ7ChdEb3dubG9hZFBhY2thZ2VSZXNw",
            "b25zZRJICgZzdGF0dXMYASABKA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9j",
            "b2wuR3JwYy5MaWIuUmVxdWVzdC5SZXF1ZXN0U3RhdHVzEhYKDnBhY2thZ2Vf",
            "YmluYXJ5GAIgASgMMosWCghCb3RBZ2VudBJqCgVMb2dpbhIvLlRpY2tUcmFk",
            "ZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5Mb2dpblJlcXVlc3QaMC5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuTG9naW5SZXNwb25zZRJ/",
            "Cg5HZXRQYWNrYWdlTGlzdBI1LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYi5QYWNrYWdlTGlzdFJlcXVlc3QaNi5UaWNrVHJhZGVyLkFsZ28u",
            "UHJvdG9jb2wuR3JwYy5MaWIuUGFja2FnZUxpc3RSZXNwb25zZRJ/Cg5HZXRB",
            "Y2NvdW50TGlzdBI1LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5BY2NvdW50TGlzdFJlcXVlc3QaNi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9j",
            "b2wuR3JwYy5MaWIuQWNjb3VudExpc3RSZXNwb25zZRJzCgpHZXRCb3RMaXN0",
            "EjEuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJvdExpc3RS",
            "ZXF1ZXN0GjIuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJv",
            "dExpc3RSZXNwb25zZRKDAQoSU3Vic2NyaWJlVG9VcGRhdGVzEjwuVGlja1Ry",
            "YWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlN1YnNjcmliZVRvVXBkYXRl",
            "c1JlcXVlc3QaLS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "VXBkYXRlSW5mbzABEn8KDkdldEFwaU1ldGFkYXRhEjUuVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLkFwaU1ldGFkYXRhUmVxdWVzdBo2LlRp",
            "Y2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5BcGlNZXRhZGF0YVJl",
            "c3BvbnNlEoIBCg9HZXRNYXBwaW5nc0luZm8SNi5UaWNrVHJhZGVyLkFsZ28u",
            "UHJvdG9jb2wuR3JwYy5MaWIuTWFwcGluZ3NJbmZvUmVxdWVzdBo3LlRpY2tU",
            "cmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5NYXBwaW5nc0luZm9SZXNw",
            "b25zZRKCAQoPR2V0U2V0dXBDb250ZXh0EjYuVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLlNldHVwQ29udGV4dFJlcXVlc3QaNy5UaWNrVHJh",
            "ZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuU2V0dXBDb250ZXh0UmVzcG9u",
            "c2USiwEKEkdldEFjY291bnRNZXRhZGF0YRI5LlRpY2tUcmFkZXIuQWxnby5Q",
            "cm90b2NvbC5HcnBjLkxpYi5BY2NvdW50TWV0YWRhdGFSZXF1ZXN0GjouVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFjY291bnRNZXRhZGF0",
            "YVJlc3BvbnNlEnMKCFN0YXJ0Qm90EjIuVGlja1RyYWRlci5BbGdvLlByb3Rv",
            "Y29sLkdycGMuTGliLlN0YXJ0Qm90UmVxdWVzdBozLlRpY2tUcmFkZXIuQWxn",
            "by5Qcm90b2NvbC5HcnBjLkxpYi5TdGFydEJvdFJlc3BvbnNlEnAKB1N0b3BC",
            "b3QSMS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuU3RvcEJv",
            "dFJlcXVlc3QaMi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "U3RvcEJvdFJlc3BvbnNlEm0KBkFkZEJvdBIwLlRpY2tUcmFkZXIuQWxnby5Q",
            "cm90b2NvbC5HcnBjLkxpYi5BZGRCb3RSZXF1ZXN0GjEuVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLkFkZEJvdFJlc3BvbnNlEnYKCVJlbW92",
            "ZUJvdBIzLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZW1v",
            "dmVCb3RSZXF1ZXN0GjQuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMu",
            "TGliLlJlbW92ZUJvdFJlc3BvbnNlEogBCg9DaGFuZ2VCb3RDb25maWcSOS5U",
            "aWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQ2hhbmdlQm90Q29u",
            "ZmlnUmVxdWVzdBo6LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5DaGFuZ2VCb3RDb25maWdSZXNwb25zZRJ5CgpBZGRBY2NvdW50EjQuVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFkZEFjY291bnRSZXF1",
            "ZXN0GjUuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFkZEFj",
            "Y291bnRSZXNwb25zZRKCAQoNUmVtb3ZlQWNjb3VudBI3LlRpY2tUcmFkZXIu",
            "QWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZW1vdmVBY2NvdW50UmVxdWVzdBo4",
            "LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZW1vdmVBY2Nv",
            "dW50UmVzcG9uc2USggEKDUNoYW5nZUFjY291bnQSNy5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuQ2hhbmdlQWNjb3VudFJlcXVlc3QaOC5U",
            "aWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQ2hhbmdlQWNjb3Vu",
            "dFJlc3BvbnNlEnwKC1Rlc3RBY2NvdW50EjUuVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLlRlc3RBY2NvdW50UmVxdWVzdBo2LlRpY2tUcmFk",
            "ZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5UZXN0QWNjb3VudFJlc3BvbnNl",
            "EosBChBUZXN0QWNjb3VudENyZWRzEjouVGlja1RyYWRlci5BbGdvLlByb3Rv",
            "Y29sLkdycGMuTGliLlRlc3RBY2NvdW50Q3JlZHNSZXF1ZXN0GjsuVGlja1Ry",
            "YWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlRlc3RBY2NvdW50Q3JlZHNS",
            "ZXNwb25zZRKCAQoNVXBsb2FkUGFja2FnZRI3LlRpY2tUcmFkZXIuQWxnby5Q",
            "cm90b2NvbC5HcnBjLkxpYi5VcGxvYWRQYWNrYWdlUmVxdWVzdBo4LlRpY2tU",
            "cmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5VcGxvYWRQYWNrYWdlUmVz",
            "cG9uc2USggEKDVJlbW92ZVBhY2thZ2USNy5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuUmVtb3ZlUGFja2FnZVJlcXVlc3QaOC5UaWNrVHJh",
            "ZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVtb3ZlUGFja2FnZVJlc3Bv",
            "bnNlEogBCg9Eb3dubG9hZFBhY2thZ2USOS5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuRG93bmxvYWRQYWNrYWdlUmVxdWVzdBo6LlRpY2tU",
            "cmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5Eb3dubG9hZFBhY2thZ2VS",
            "ZXNwb25zZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TickTrader.Algo.Protocol.Grpc.Lib.KeysReflection.Descriptor, global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor, global::TickTrader.Algo.Protocol.Grpc.Lib.ConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.Request), global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Parser, null, null, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LoginRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.LoginRequest.Parser, new[]{ "Login", "Password", "MajorVersion", "MinorVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Parser, new[]{ "Status", "Error", "MajorVersion", "MinorVersion" }, null, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Parser, new[]{ "Status", "Reason", "Text" }, null, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse.Parser, new[]{ "Status", "Packages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse.Parser, new[]{ "Status", "Accounts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotListRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.BotListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse.Parser, new[]{ "Status", "Bots" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SubscribeToUpdatesRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.SubscribeToUpdatesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Parser, new[]{ "Type", "Package", "Account", "AccountState", "Bot", "BotState" }, new[]{ "UpdateInfo" }, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo.Parser, new[]{ "Package" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo.Parser, new[]{ "Bot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo.Parser, new[]{ "Bot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotRequest.Parser, new[]{ "BotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotRequest.Parser, new[]{ "BotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotRequest.Parser, new[]{ "Account", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotRequest.Parser, new[]{ "BotId", "CleanLog", "CleanAlgoData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigRequest.Parser, new[]{ "BotId", "NewConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse.Parser, new[]{ "Status", "ApiMetadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse.Parser, new[]{ "Status", "Mappings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse.Parser, new[]{ "Status", "SetupContext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataRequest.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataResponse.Parser, new[]{ "Status", "ErrorInfo", "AccountMetadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountRequest.Parser, new[]{ "Account", "Password", "UseNewProtocol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountRequest.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountRequest.Parser, new[]{ "Account", "Password", "UseNewProtocol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountRequest.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountResponse.Parser, new[]{ "Status", "ErrorInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsRequest.Parser, new[]{ "Account", "Password", "UseNewProtocol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsResponse.Parser, new[]{ "Status", "ErrorInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageRequest.Parser, new[]{ "FileName", "PackageBinary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageRequest.Parser, new[]{ "Package" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageRequest.Parser, new[]{ "Package" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageResponse.Parser, new[]{ "Status", "PackageBinary" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RequestStatus {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        [pbr::OriginalName("INTERNAL_SERVER_ERROR")] InternalServerError = 1,
      }

    }
    #endregion

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      login_ = other.login_;
      password_ = other.password_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 3;
    private int majorVersion_;
    /// <summary>
    /// client version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 4;
    private int minorVersion_;
    /// <summary>
    /// client version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (Password != other.Password) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MinorVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      status_ = other.status_;
      error_ = other.error_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 3;
    private int majorVersion_;
    /// <summary>
    /// server version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 4;
    private int minorVersion_;
    /// <summary>
    /// server version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Error != other.Error) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Error != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Error);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 16: {
            error_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError) input.ReadEnum();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MinorVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LoginError {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("INVALID_CREDENTIALS")] InvalidCredentials = 1,
        [pbr::OriginalName("VERSION_MISMATCH")] VersionMismatch = 2,
      }

    }
    #endregion

  }

  public sealed partial class LogoutRequest : pb::IMessage<LogoutRequest> {
    private static readonly pb::MessageParser<LogoutRequest> _parser = new pb::MessageParser<LogoutRequest>(() => new LogoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest(LogoutRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest Clone() {
      return new LogoutRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LogoutResponse : pb::IMessage<LogoutResponse> {
    private static readonly pb::MessageParser<LogoutResponse> _parser = new pb::MessageParser<LogoutResponse>(() => new LogoutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse(LogoutResponse other) : this() {
      status_ = other.status_;
      reason_ = other.reason_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse Clone() {
      return new LogoutResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 3;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Reason != other.Reason) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Reason != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Reason);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 16: {
            reason_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason) input.ReadEnum();
            break;
          }
          case 26: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LogoutResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LogoutReason {
        [pbr::OriginalName("CLIENT_REQUEST")] ClientRequest = 0,
        [pbr::OriginalName("SERVER_LOGOUT")] ServerLogout = 1,
      }

    }
    #endregion

  }

  public sealed partial class PackageListRequest : pb::IMessage<PackageListRequest> {
    private static readonly pb::MessageParser<PackageListRequest> _parser = new pb::MessageParser<PackageListRequest>(() => new PackageListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListRequest(PackageListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListRequest Clone() {
      return new PackageListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PackageListResponse : pb::IMessage<PackageListResponse> {
    private static readonly pb::MessageParser<PackageListResponse> _parser = new pb::MessageParser<PackageListResponse>(() => new PackageListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListResponse(PackageListResponse other) : this() {
      status_ = other.status_;
      packages_ = other.packages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListResponse Clone() {
      return new PackageListResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "packages" field.</summary>
    public const int PackagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo> _repeated_packages_codec
        = pb::FieldCodec.ForMessage(18, global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo> packages_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo> Packages {
      get { return packages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if(!packages_.Equals(other.packages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= packages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      packages_.WriteTo(output, _repeated_packages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += packages_.CalculateSize(_repeated_packages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageListResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      packages_.Add(other.packages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            packages_.AddEntriesFrom(input, _repeated_packages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountListRequest : pb::IMessage<AccountListRequest> {
    private static readonly pb::MessageParser<AccountListRequest> _parser = new pb::MessageParser<AccountListRequest>(() => new AccountListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListRequest(AccountListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListRequest Clone() {
      return new AccountListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AccountListResponse : pb::IMessage<AccountListResponse> {
    private static readonly pb::MessageParser<AccountListResponse> _parser = new pb::MessageParser<AccountListResponse>(() => new AccountListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListResponse(AccountListResponse other) : this() {
      status_ = other.status_;
      accounts_ = other.accounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListResponse Clone() {
      return new AccountListResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(18, global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo> accounts_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo> Accounts {
      get { return accounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if(!accounts_.Equals(other.accounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= accounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountListResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      accounts_.Add(other.accounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotListRequest : pb::IMessage<BotListRequest> {
    private static readonly pb::MessageParser<BotListRequest> _parser = new pb::MessageParser<BotListRequest>(() => new BotListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListRequest(BotListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListRequest Clone() {
      return new BotListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BotListResponse : pb::IMessage<BotListResponse> {
    private static readonly pb::MessageParser<BotListResponse> _parser = new pb::MessageParser<BotListResponse>(() => new BotListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListResponse(BotListResponse other) : this() {
      status_ = other.status_;
      bots_ = other.bots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListResponse Clone() {
      return new BotListResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "bots" field.</summary>
    public const int BotsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo> _repeated_bots_codec
        = pb::FieldCodec.ForMessage(18, global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo> bots_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo> Bots {
      get { return bots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if(!bots_.Equals(other.bots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= bots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      bots_.WriteTo(output, _repeated_bots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += bots_.CalculateSize(_repeated_bots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotListResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      bots_.Add(other.bots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            bots_.AddEntriesFrom(input, _repeated_bots_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeToUpdatesRequest : pb::IMessage<SubscribeToUpdatesRequest> {
    private static readonly pb::MessageParser<SubscribeToUpdatesRequest> _parser = new pb::MessageParser<SubscribeToUpdatesRequest>(() => new SubscribeToUpdatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeToUpdatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToUpdatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToUpdatesRequest(SubscribeToUpdatesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToUpdatesRequest Clone() {
      return new SubscribeToUpdatesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeToUpdatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeToUpdatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeToUpdatesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UpdateInfo : pb::IMessage<UpdateInfo> {
    private static readonly pb::MessageParser<UpdateInfo> _parser = new pb::MessageParser<UpdateInfo>(() => new UpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo(UpdateInfo other) : this() {
      type_ = other.type_;
      switch (other.UpdateInfoCase) {
        case UpdateInfoOneofCase.Package:
          Package = other.Package.Clone();
          break;
        case UpdateInfoOneofCase.Account:
          Account = other.Account.Clone();
          break;
        case UpdateInfoOneofCase.AccountState:
          AccountState = other.AccountState.Clone();
          break;
        case UpdateInfoOneofCase.Bot:
          Bot = other.Bot.Clone();
          break;
        case UpdateInfoOneofCase.BotState:
          BotState = other.BotState.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo Clone() {
      return new UpdateInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo Package {
      get { return updateInfoCase_ == UpdateInfoOneofCase.Package ? (global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.Package;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo Account {
      get { return updateInfoCase_ == UpdateInfoOneofCase.Account ? (global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.Account;
      }
    }

    /// <summary>Field number for the "account_state" field.</summary>
    public const int AccountStateFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo AccountState {
      get { return updateInfoCase_ == UpdateInfoOneofCase.AccountState ? (global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.AccountState;
      }
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo Bot {
      get { return updateInfoCase_ == UpdateInfoOneofCase.Bot ? (global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.Bot;
      }
    }

    /// <summary>Field number for the "bot_state" field.</summary>
    public const int BotStateFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo BotState {
      get { return updateInfoCase_ == UpdateInfoOneofCase.BotState ? (global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.BotState;
      }
    }

    private object updateInfo_;
    /// <summary>Enum of possible cases for the "update_info" oneof.</summary>
    public enum UpdateInfoOneofCase {
      None = 0,
      Package = 5,
      Account = 6,
      AccountState = 7,
      Bot = 8,
      BotState = 9,
    }
    private UpdateInfoOneofCase updateInfoCase_ = UpdateInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfoOneofCase UpdateInfoCase {
      get { return updateInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUpdateInfo() {
      updateInfoCase_ = UpdateInfoOneofCase.None;
      updateInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Package, other.Package)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(AccountState, other.AccountState)) return false;
      if (!object.Equals(Bot, other.Bot)) return false;
      if (!object.Equals(BotState, other.BotState)) return false;
      if (UpdateInfoCase != other.UpdateInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.Package) hash ^= Package.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.Account) hash ^= Account.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) hash ^= AccountState.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.Bot) hash ^= Bot.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.BotState) hash ^= BotState.GetHashCode();
      hash ^= (int) updateInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Package) {
        output.WriteRawTag(42);
        output.WriteMessage(Package);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Account) {
        output.WriteRawTag(50);
        output.WriteMessage(Account);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) {
        output.WriteRawTag(58);
        output.WriteMessage(AccountState);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Bot) {
        output.WriteRawTag(66);
        output.WriteMessage(Bot);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.BotState) {
        output.WriteRawTag(74);
        output.WriteMessage(BotState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Package) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Account) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountState);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Bot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.BotState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BotState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.UpdateInfoCase) {
        case UpdateInfoOneofCase.Package:
          if (Package == null) {
            Package = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo();
          }
          Package.MergeFrom(other.Package);
          break;
        case UpdateInfoOneofCase.Account:
          if (Account == null) {
            Account = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo();
          }
          Account.MergeFrom(other.Account);
          break;
        case UpdateInfoOneofCase.AccountState:
          if (AccountState == null) {
            AccountState = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo();
          }
          AccountState.MergeFrom(other.AccountState);
          break;
        case UpdateInfoOneofCase.Bot:
          if (Bot == null) {
            Bot = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo();
          }
          Bot.MergeFrom(other.Bot);
          break;
        case UpdateInfoOneofCase.BotState:
          if (BotState == null) {
            BotState = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo();
          }
          BotState.MergeFrom(other.BotState);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType) input.ReadEnum();
            break;
          }
          case 42: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.Package) {
              subBuilder.MergeFrom(Package);
            }
            input.ReadMessage(subBuilder);
            Package = subBuilder;
            break;
          }
          case 50: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.Account) {
              subBuilder.MergeFrom(Account);
            }
            input.ReadMessage(subBuilder);
            Account = subBuilder;
            break;
          }
          case 58: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) {
              subBuilder.MergeFrom(AccountState);
            }
            input.ReadMessage(subBuilder);
            AccountState = subBuilder;
            break;
          }
          case 66: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.Bot) {
              subBuilder.MergeFrom(Bot);
            }
            input.ReadMessage(subBuilder);
            Bot = subBuilder;
            break;
          }
          case 74: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.BotState) {
              subBuilder.MergeFrom(BotState);
            }
            input.ReadMessage(subBuilder);
            BotState = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UpdateType {
        [pbr::OriginalName("ADDED")] Added = 0,
        [pbr::OriginalName("REPLACED")] Replaced = 1,
        [pbr::OriginalName("REMOVED")] Removed = 2,
      }

    }
    #endregion

  }

  public sealed partial class PackageUpdateInfo : pb::IMessage<PackageUpdateInfo> {
    private static readonly pb::MessageParser<PackageUpdateInfo> _parser = new pb::MessageParser<PackageUpdateInfo>(() => new PackageUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageUpdateInfo(PackageUpdateInfo other) : this() {
      Package = other.package_ != null ? other.Package.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageUpdateInfo Clone() {
      return new PackageUpdateInfo(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (package_ != null) hash ^= Package.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (package_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Package);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo();
        }
        Package.MergeFrom(other.Package);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (package_ == null) {
              package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountUpdateInfo : pb::IMessage<AccountUpdateInfo> {
    private static readonly pb::MessageParser<AccountUpdateInfo> _parser = new pb::MessageParser<AccountUpdateInfo>(() => new AccountUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateInfo(AccountUpdateInfo other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateInfo Clone() {
      return new AccountUpdateInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountStateUpdateInfo : pb::IMessage<AccountStateUpdateInfo> {
    private static readonly pb::MessageParser<AccountStateUpdateInfo> _parser = new pb::MessageParser<AccountStateUpdateInfo>(() => new AccountStateUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountStateUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateUpdateInfo(AccountStateUpdateInfo other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateUpdateInfo Clone() {
      return new AccountStateUpdateInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountStateUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountStateUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountStateUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotUpdateInfo : pb::IMessage<BotUpdateInfo> {
    private static readonly pb::MessageParser<BotUpdateInfo> _parser = new pb::MessageParser<BotUpdateInfo>(() => new BotUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotUpdateInfo(BotUpdateInfo other) : this() {
      Bot = other.bot_ != null ? other.Bot.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotUpdateInfo Clone() {
      return new BotUpdateInfo(this);
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo bot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo Bot {
      get { return bot_; }
      set {
        bot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bot, other.Bot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bot_ != null) hash ^= Bot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.bot_ != null) {
        if (bot_ == null) {
          bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
        }
        Bot.MergeFrom(other.Bot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bot_ == null) {
              bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
            }
            input.ReadMessage(bot_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotStateUpdateInfo : pb::IMessage<BotStateUpdateInfo> {
    private static readonly pb::MessageParser<BotStateUpdateInfo> _parser = new pb::MessageParser<BotStateUpdateInfo>(() => new BotStateUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotStateUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStateUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStateUpdateInfo(BotStateUpdateInfo other) : this() {
      Bot = other.bot_ != null ? other.Bot.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStateUpdateInfo Clone() {
      return new BotStateUpdateInfo(this);
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo bot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo Bot {
      get { return bot_; }
      set {
        bot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotStateUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotStateUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bot, other.Bot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bot_ != null) hash ^= Bot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotStateUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.bot_ != null) {
        if (bot_ == null) {
          bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
        }
        Bot.MergeFrom(other.Bot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bot_ == null) {
              bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
            }
            input.ReadMessage(bot_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartBotRequest : pb::IMessage<StartBotRequest> {
    private static readonly pb::MessageParser<StartBotRequest> _parser = new pb::MessageParser<StartBotRequest>(() => new StartBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotRequest(StartBotRequest other) : this() {
      botId_ = other.botId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotRequest Clone() {
      return new StartBotRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartBotResponse : pb::IMessage<StartBotResponse> {
    private static readonly pb::MessageParser<StartBotResponse> _parser = new pb::MessageParser<StartBotResponse>(() => new StartBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotResponse(StartBotResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotResponse Clone() {
      return new StartBotResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopBotRequest : pb::IMessage<StopBotRequest> {
    private static readonly pb::MessageParser<StopBotRequest> _parser = new pb::MessageParser<StopBotRequest>(() => new StopBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotRequest(StopBotRequest other) : this() {
      botId_ = other.botId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotRequest Clone() {
      return new StopBotRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopBotResponse : pb::IMessage<StopBotResponse> {
    private static readonly pb::MessageParser<StopBotResponse> _parser = new pb::MessageParser<StopBotResponse>(() => new StopBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotResponse(StopBotResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotResponse Clone() {
      return new StopBotResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddBotRequest : pb::IMessage<AddBotRequest> {
    private static readonly pb::MessageParser<AddBotRequest> _parser = new pb::MessageParser<AddBotRequest>(() => new AddBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotRequest(AddBotRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      Config = other.config_ != null ? other.Config.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotRequest Clone() {
      return new AddBotRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          config_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            if (config_ == null) {
              config_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
            }
            input.ReadMessage(config_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddBotResponse : pb::IMessage<AddBotResponse> {
    private static readonly pb::MessageParser<AddBotResponse> _parser = new pb::MessageParser<AddBotResponse>(() => new AddBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotResponse(AddBotResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotResponse Clone() {
      return new AddBotResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveBotRequest : pb::IMessage<RemoveBotRequest> {
    private static readonly pb::MessageParser<RemoveBotRequest> _parser = new pb::MessageParser<RemoveBotRequest>(() => new RemoveBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotRequest(RemoveBotRequest other) : this() {
      botId_ = other.botId_;
      cleanLog_ = other.cleanLog_;
      cleanAlgoData_ = other.cleanAlgoData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotRequest Clone() {
      return new RemoveBotRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clean_log" field.</summary>
    public const int CleanLogFieldNumber = 2;
    private bool cleanLog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CleanLog {
      get { return cleanLog_; }
      set {
        cleanLog_ = value;
      }
    }

    /// <summary>Field number for the "clean_algo_data" field.</summary>
    public const int CleanAlgoDataFieldNumber = 3;
    private bool cleanAlgoData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CleanAlgoData {
      get { return cleanAlgoData_; }
      set {
        cleanAlgoData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (CleanLog != other.CleanLog) return false;
      if (CleanAlgoData != other.CleanAlgoData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (CleanLog != false) hash ^= CleanLog.GetHashCode();
      if (CleanAlgoData != false) hash ^= CleanAlgoData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (CleanLog != false) {
        output.WriteRawTag(16);
        output.WriteBool(CleanLog);
      }
      if (CleanAlgoData != false) {
        output.WriteRawTag(24);
        output.WriteBool(CleanAlgoData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (CleanLog != false) {
        size += 1 + 1;
      }
      if (CleanAlgoData != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.CleanLog != false) {
        CleanLog = other.CleanLog;
      }
      if (other.CleanAlgoData != false) {
        CleanAlgoData = other.CleanAlgoData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 16: {
            CleanLog = input.ReadBool();
            break;
          }
          case 24: {
            CleanAlgoData = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveBotResponse : pb::IMessage<RemoveBotResponse> {
    private static readonly pb::MessageParser<RemoveBotResponse> _parser = new pb::MessageParser<RemoveBotResponse>(() => new RemoveBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotResponse(RemoveBotResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotResponse Clone() {
      return new RemoveBotResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeBotConfigRequest : pb::IMessage<ChangeBotConfigRequest> {
    private static readonly pb::MessageParser<ChangeBotConfigRequest> _parser = new pb::MessageParser<ChangeBotConfigRequest>(() => new ChangeBotConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeBotConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigRequest(ChangeBotConfigRequest other) : this() {
      botId_ = other.botId_;
      NewConfig = other.newConfig_ != null ? other.NewConfig.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigRequest Clone() {
      return new ChangeBotConfigRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_config" field.</summary>
    public const int NewConfigFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig newConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig NewConfig {
      get { return newConfig_; }
      set {
        newConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeBotConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeBotConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (!object.Equals(NewConfig, other.NewConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (newConfig_ != null) hash ^= NewConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (newConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (newConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeBotConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.newConfig_ != null) {
        if (newConfig_ == null) {
          newConfig_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
        }
        NewConfig.MergeFrom(other.NewConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 18: {
            if (newConfig_ == null) {
              newConfig_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
            }
            input.ReadMessage(newConfig_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeBotConfigResponse : pb::IMessage<ChangeBotConfigResponse> {
    private static readonly pb::MessageParser<ChangeBotConfigResponse> _parser = new pb::MessageParser<ChangeBotConfigResponse>(() => new ChangeBotConfigResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeBotConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigResponse(ChangeBotConfigResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigResponse Clone() {
      return new ChangeBotConfigResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeBotConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeBotConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeBotConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApiMetadataRequest : pb::IMessage<ApiMetadataRequest> {
    private static readonly pb::MessageParser<ApiMetadataRequest> _parser = new pb::MessageParser<ApiMetadataRequest>(() => new ApiMetadataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiMetadataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataRequest(ApiMetadataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataRequest Clone() {
      return new ApiMetadataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiMetadataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiMetadataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiMetadataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ApiMetadataResponse : pb::IMessage<ApiMetadataResponse> {
    private static readonly pb::MessageParser<ApiMetadataResponse> _parser = new pb::MessageParser<ApiMetadataResponse>(() => new ApiMetadataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiMetadataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataResponse(ApiMetadataResponse other) : this() {
      status_ = other.status_;
      ApiMetadata = other.apiMetadata_ != null ? other.ApiMetadata.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataResponse Clone() {
      return new ApiMetadataResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "api_metadata" field.</summary>
    public const int ApiMetadataFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo apiMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo ApiMetadata {
      get { return apiMetadata_; }
      set {
        apiMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiMetadataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiMetadataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(ApiMetadata, other.ApiMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (apiMetadata_ != null) hash ^= ApiMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (apiMetadata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApiMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (apiMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApiMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiMetadataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.apiMetadata_ != null) {
        if (apiMetadata_ == null) {
          apiMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo();
        }
        ApiMetadata.MergeFrom(other.ApiMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (apiMetadata_ == null) {
              apiMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo();
            }
            input.ReadMessage(apiMetadata_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MappingsInfoRequest : pb::IMessage<MappingsInfoRequest> {
    private static readonly pb::MessageParser<MappingsInfoRequest> _parser = new pb::MessageParser<MappingsInfoRequest>(() => new MappingsInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingsInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoRequest(MappingsInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoRequest Clone() {
      return new MappingsInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingsInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingsInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingsInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class MappingsInfoResponse : pb::IMessage<MappingsInfoResponse> {
    private static readonly pb::MessageParser<MappingsInfoResponse> _parser = new pb::MessageParser<MappingsInfoResponse>(() => new MappingsInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingsInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoResponse(MappingsInfoResponse other) : this() {
      status_ = other.status_;
      Mappings = other.mappings_ != null ? other.Mappings.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoResponse Clone() {
      return new MappingsInfoResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "mappings" field.</summary>
    public const int MappingsFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo mappings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo Mappings {
      get { return mappings_; }
      set {
        mappings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingsInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingsInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(Mappings, other.Mappings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (mappings_ != null) hash ^= Mappings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (mappings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mappings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (mappings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mappings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingsInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.mappings_ != null) {
        if (mappings_ == null) {
          mappings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo();
        }
        Mappings.MergeFrom(other.Mappings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (mappings_ == null) {
              mappings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo();
            }
            input.ReadMessage(mappings_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetupContextRequest : pb::IMessage<SetupContextRequest> {
    private static readonly pb::MessageParser<SetupContextRequest> _parser = new pb::MessageParser<SetupContextRequest>(() => new SetupContextRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetupContextRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextRequest(SetupContextRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextRequest Clone() {
      return new SetupContextRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetupContextRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetupContextRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetupContextRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SetupContextResponse : pb::IMessage<SetupContextResponse> {
    private static readonly pb::MessageParser<SetupContextResponse> _parser = new pb::MessageParser<SetupContextResponse>(() => new SetupContextResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetupContextResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextResponse(SetupContextResponse other) : this() {
      status_ = other.status_;
      SetupContext = other.setupContext_ != null ? other.SetupContext.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextResponse Clone() {
      return new SetupContextResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "setup_context" field.</summary>
    public const int SetupContextFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo setupContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo SetupContext {
      get { return setupContext_; }
      set {
        setupContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetupContextResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetupContextResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(SetupContext, other.SetupContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (setupContext_ != null) hash ^= SetupContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (setupContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SetupContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (setupContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetupContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetupContextResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.setupContext_ != null) {
        if (setupContext_ == null) {
          setupContext_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo();
        }
        SetupContext.MergeFrom(other.SetupContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (setupContext_ == null) {
              setupContext_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo();
            }
            input.ReadMessage(setupContext_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountMetadataRequest : pb::IMessage<AccountMetadataRequest> {
    private static readonly pb::MessageParser<AccountMetadataRequest> _parser = new pb::MessageParser<AccountMetadataRequest>(() => new AccountMetadataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountMetadataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataRequest(AccountMetadataRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataRequest Clone() {
      return new AccountMetadataRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountMetadataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountMetadataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountMetadataRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountMetadataResponse : pb::IMessage<AccountMetadataResponse> {
    private static readonly pb::MessageParser<AccountMetadataResponse> _parser = new pb::MessageParser<AccountMetadataResponse>(() => new AccountMetadataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountMetadataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataResponse(AccountMetadataResponse other) : this() {
      status_ = other.status_;
      ErrorInfo = other.errorInfo_ != null ? other.ErrorInfo.Clone() : null;
      AccountMetadata = other.accountMetadata_ != null ? other.AccountMetadata.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataResponse Clone() {
      return new AccountMetadataResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    /// <summary>Field number for the "account_metadata" field.</summary>
    public const int AccountMetadataFieldNumber = 3;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo accountMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo AccountMetadata {
      get { return accountMetadata_; }
      set {
        accountMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountMetadataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountMetadataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      if (!object.Equals(AccountMetadata, other.AccountMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (accountMetadata_ != null) hash ^= AccountMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (errorInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrorInfo);
      }
      if (accountMetadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AccountMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (accountMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountMetadataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      if (other.accountMetadata_ != null) {
        if (accountMetadata_ == null) {
          accountMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo();
        }
        AccountMetadata.MergeFrom(other.AccountMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (errorInfo_ == null) {
              errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
            }
            input.ReadMessage(errorInfo_);
            break;
          }
          case 26: {
            if (accountMetadata_ == null) {
              accountMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo();
            }
            input.ReadMessage(accountMetadata_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountRequest : pb::IMessage<AddAccountRequest> {
    private static readonly pb::MessageParser<AddAccountRequest> _parser = new pb::MessageParser<AddAccountRequest>(() => new AddAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest(AddAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      password_ = other.password_;
      useNewProtocol_ = other.useNewProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest Clone() {
      return new AddAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_new_protocol" field.</summary>
    public const int UseNewProtocolFieldNumber = 3;
    private bool useNewProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseNewProtocol {
      get { return useNewProtocol_; }
      set {
        useNewProtocol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Password != other.Password) return false;
      if (UseNewProtocol != other.UseNewProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (UseNewProtocol != false) hash ^= UseNewProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (UseNewProtocol != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseNewProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (UseNewProtocol != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.UseNewProtocol != false) {
        UseNewProtocol = other.UseNewProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            UseNewProtocol = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountResponse : pb::IMessage<AddAccountResponse> {
    private static readonly pb::MessageParser<AddAccountResponse> _parser = new pb::MessageParser<AddAccountResponse>(() => new AddAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse(AddAccountResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse Clone() {
      return new AddAccountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAccountRequest : pb::IMessage<RemoveAccountRequest> {
    private static readonly pb::MessageParser<RemoveAccountRequest> _parser = new pb::MessageParser<RemoveAccountRequest>(() => new RemoveAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountRequest(RemoveAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountRequest Clone() {
      return new RemoveAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAccountResponse : pb::IMessage<RemoveAccountResponse> {
    private static readonly pb::MessageParser<RemoveAccountResponse> _parser = new pb::MessageParser<RemoveAccountResponse>(() => new RemoveAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountResponse(RemoveAccountResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountResponse Clone() {
      return new RemoveAccountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeAccountRequest : pb::IMessage<ChangeAccountRequest> {
    private static readonly pb::MessageParser<ChangeAccountRequest> _parser = new pb::MessageParser<ChangeAccountRequest>(() => new ChangeAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountRequest(ChangeAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      password_ = other.password_;
      useNewProtocol_ = other.useNewProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountRequest Clone() {
      return new ChangeAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_new_protocol" field.</summary>
    public const int UseNewProtocolFieldNumber = 3;
    private bool useNewProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseNewProtocol {
      get { return useNewProtocol_; }
      set {
        useNewProtocol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Password != other.Password) return false;
      if (UseNewProtocol != other.UseNewProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (UseNewProtocol != false) hash ^= UseNewProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (UseNewProtocol != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseNewProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (UseNewProtocol != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.UseNewProtocol != false) {
        UseNewProtocol = other.UseNewProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            UseNewProtocol = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeAccountResponse : pb::IMessage<ChangeAccountResponse> {
    private static readonly pb::MessageParser<ChangeAccountResponse> _parser = new pb::MessageParser<ChangeAccountResponse>(() => new ChangeAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountResponse(ChangeAccountResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountResponse Clone() {
      return new ChangeAccountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountRequest : pb::IMessage<TestAccountRequest> {
    private static readonly pb::MessageParser<TestAccountRequest> _parser = new pb::MessageParser<TestAccountRequest>(() => new TestAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountRequest(TestAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountRequest Clone() {
      return new TestAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountResponse : pb::IMessage<TestAccountResponse> {
    private static readonly pb::MessageParser<TestAccountResponse> _parser = new pb::MessageParser<TestAccountResponse>(() => new TestAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountResponse(TestAccountResponse other) : this() {
      status_ = other.status_;
      ErrorInfo = other.errorInfo_ != null ? other.ErrorInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountResponse Clone() {
      return new TestAccountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (errorInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (errorInfo_ == null) {
              errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
            }
            input.ReadMessage(errorInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountCredsRequest : pb::IMessage<TestAccountCredsRequest> {
    private static readonly pb::MessageParser<TestAccountCredsRequest> _parser = new pb::MessageParser<TestAccountCredsRequest>(() => new TestAccountCredsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountCredsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsRequest(TestAccountCredsRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      password_ = other.password_;
      useNewProtocol_ = other.useNewProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsRequest Clone() {
      return new TestAccountCredsRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_new_protocol" field.</summary>
    public const int UseNewProtocolFieldNumber = 3;
    private bool useNewProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseNewProtocol {
      get { return useNewProtocol_; }
      set {
        useNewProtocol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountCredsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountCredsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Password != other.Password) return false;
      if (UseNewProtocol != other.UseNewProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (UseNewProtocol != false) hash ^= UseNewProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (UseNewProtocol != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseNewProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (UseNewProtocol != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountCredsRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.UseNewProtocol != false) {
        UseNewProtocol = other.UseNewProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            UseNewProtocol = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountCredsResponse : pb::IMessage<TestAccountCredsResponse> {
    private static readonly pb::MessageParser<TestAccountCredsResponse> _parser = new pb::MessageParser<TestAccountCredsResponse>(() => new TestAccountCredsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountCredsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsResponse(TestAccountCredsResponse other) : this() {
      status_ = other.status_;
      ErrorInfo = other.errorInfo_ != null ? other.ErrorInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsResponse Clone() {
      return new TestAccountCredsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountCredsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountCredsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (errorInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountCredsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (errorInfo_ == null) {
              errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
            }
            input.ReadMessage(errorInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadPackageRequest : pb::IMessage<UploadPackageRequest> {
    private static readonly pb::MessageParser<UploadPackageRequest> _parser = new pb::MessageParser<UploadPackageRequest>(() => new UploadPackageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageRequest(UploadPackageRequest other) : this() {
      fileName_ = other.fileName_;
      packageBinary_ = other.packageBinary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageRequest Clone() {
      return new UploadPackageRequest(this);
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 1;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_binary" field.</summary>
    public const int PackageBinaryFieldNumber = 2;
    private pb::ByteString packageBinary_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PackageBinary {
      get { return packageBinary_; }
      set {
        packageBinary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileName != other.FileName) return false;
      if (PackageBinary != other.PackageBinary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (PackageBinary.Length != 0) hash ^= PackageBinary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (PackageBinary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PackageBinary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (PackageBinary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PackageBinary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPackageRequest other) {
      if (other == null) {
        return;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.PackageBinary.Length != 0) {
        PackageBinary = other.PackageBinary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 18: {
            PackageBinary = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadPackageResponse : pb::IMessage<UploadPackageResponse> {
    private static readonly pb::MessageParser<UploadPackageResponse> _parser = new pb::MessageParser<UploadPackageResponse>(() => new UploadPackageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPackageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageResponse(UploadPackageResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageResponse Clone() {
      return new UploadPackageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPackageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPackageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPackageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemovePackageRequest : pb::IMessage<RemovePackageRequest> {
    private static readonly pb::MessageParser<RemovePackageRequest> _parser = new pb::MessageParser<RemovePackageRequest>(() => new RemovePackageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageRequest(RemovePackageRequest other) : this() {
      Package = other.package_ != null ? other.Package.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageRequest Clone() {
      return new RemovePackageRequest(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (package_ != null) hash ^= Package.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (package_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Package);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePackageRequest other) {
      if (other == null) {
        return;
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
        }
        Package.MergeFrom(other.Package);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (package_ == null) {
              package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemovePackageResponse : pb::IMessage<RemovePackageResponse> {
    private static readonly pb::MessageParser<RemovePackageResponse> _parser = new pb::MessageParser<RemovePackageResponse>(() => new RemovePackageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePackageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageResponse(RemovePackageResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageResponse Clone() {
      return new RemovePackageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePackageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePackageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePackageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadPackageRequest : pb::IMessage<DownloadPackageRequest> {
    private static readonly pb::MessageParser<DownloadPackageRequest> _parser = new pb::MessageParser<DownloadPackageRequest>(() => new DownloadPackageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadPackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageRequest(DownloadPackageRequest other) : this() {
      Package = other.package_ != null ? other.Package.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageRequest Clone() {
      return new DownloadPackageRequest(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadPackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadPackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (package_ != null) hash ^= Package.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (package_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Package);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadPackageRequest other) {
      if (other == null) {
        return;
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
        }
        Package.MergeFrom(other.Package);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (package_ == null) {
              package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadPackageResponse : pb::IMessage<DownloadPackageResponse> {
    private static readonly pb::MessageParser<DownloadPackageResponse> _parser = new pb::MessageParser<DownloadPackageResponse>(() => new DownloadPackageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadPackageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageResponse(DownloadPackageResponse other) : this() {
      status_ = other.status_;
      packageBinary_ = other.packageBinary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageResponse Clone() {
      return new DownloadPackageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "package_binary" field.</summary>
    public const int PackageBinaryFieldNumber = 2;
    private pb::ByteString packageBinary_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PackageBinary {
      get { return packageBinary_; }
      set {
        packageBinary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadPackageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadPackageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (PackageBinary != other.PackageBinary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (PackageBinary.Length != 0) hash ^= PackageBinary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (PackageBinary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PackageBinary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (PackageBinary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PackageBinary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadPackageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.PackageBinary.Length != 0) {
        PackageBinary = other.PackageBinary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.Request.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            PackageBinary = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
