<UserControl x:Class="TickTrader.BotTerminal.ChartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             xmlns:l="clr-namespace:TickTrader.BotTerminal"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>

        <Style TargetType="l:FlatButton" BasedOn="{StaticResource FlatButton_Style}">
            <Setter Property="HighlightBackground" Value="{DynamicResource Menu_BackgroundBrush}"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Padding" Value="3,2,3,2"/>
        </Style>
        
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>

        <ContextMenu x:Key="MainChartPanelContextMenu" Style="{StaticResource ContextMenu_Style}">
            
            <l:MenuItemSelector Header="{l:Resx ContextMenu_Periods}"
                                ItemsSource="{Binding AvailablePeriods}"
                                SelectedItem="{Binding SelectedPeriod, Mode=TwoWay}"
                                DisplayMemberPath="Key"/>
            
            <Separator/>

            <l:MenuItemSelector Header="{l:Resx ContextMenu_ChartType}"
                                ItemsSource="{Binding Chart.ChartTypes}"
                                SelectedItem="{Binding Chart.SelectedChartType, Mode=TwoWay}">
                <l:MenuItemSelector.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{l:ResxBinding Prefix=ChartType_}"/>
                    </DataTemplate>
                </l:MenuItemSelector.ItemTemplate>
            </l:MenuItemSelector>

            <l:MenuItemSelector Header="{l:Resx ContextMenu_Timeline}"
                                ItemsSource="{Binding Chart.AvailableTimelines}"
                                SelectedItem="{Binding Chart.TimelineType, Mode=TwoWay}">
                <l:MenuItemSelector.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{l:ResxBinding Prefix=TimelineType_}"/>
                    </DataTemplate>
                </l:MenuItemSelector.ItemTemplate>
            </l:MenuItemSelector>
            <Separator/>
            
            <MenuItem Header="Add Indicator" ItemsSource="{Binding Chart.AvailableIndicators}" DisplayMemberPath="DisplayName"
                              cal:Message.Attach="OpenIndicator($originalsourcecontext)" />
            
            <MenuItem Header="Indicators" ItemsSource="{Binding Indicators}"
                      Visibility="{Binding Converter={StaticResource BoolToVisConverter}, Path=HasIndicators}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                            <l:FlatButton Content="x" VerticalAlignment="Center" cal:Message.Attach="Close"/>
                        </StackPanel>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
            
        </ContextMenu>

        <Style x:Key="MainChartStyle" TargetType="s:SciChartSurface">
            <Setter Property="ChartModifier">
                <Setter.Value>
                    <s:ModifierGroup>
                        <s:YAxisDragModifier/>
                        <s:XAxisDragModifier/>
                        <s:MouseWheelZoomModifier/>
                        <s:ZoomPanModifier ClipModeX="ClipAtExtents"/>
                    </s:ModifierGroup>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="0" />
            <!--<Setter Property="YAxis">
                <Setter.Value>
                    <s:NumericAxis GrowBy="0.1, 0.1" AutoAlignVisibleRange="True" AutoRange="Always"/>
                </Setter.Value>
            </Setter-->
        </Style>

        <DataTemplate DataType="{x:Type UIElement}">
            <ContentControl Content="{Binding}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type l:IndicatorPaneViewModel}">
            <ContentControl cal:View.Model="{Binding}" />
        </DataTemplate>

    </UserControl.Resources>

    <!--<s:SciChartSurface RenderableSeries="{Binding Chart.Series}"
                               XAxis="{Binding Chart.Navigator.TimeAxis}"
                               ContextMenu="{StaticResource MainChartPanelContextMenu}">
        <s:SciChartSurface.YAxis>
            <s:NumericAxis GrowBy="0.1, 0.1" AutoAlignVisibleRange="True" AutoRange="Always"/>
        </s:SciChartSurface.YAxis>
    </s:SciChartSurface>-->

    <ItemsControl>
        <ItemsControl.Resources>
            <CollectionViewSource x:Key="indicatorPanesViewSrc" Source="{Binding Panes}"/>
        </ItemsControl.Resources>
        <ItemsControl.ItemsSource>
            <CompositeCollection>
                <Grid>
                    <s:SciChartSurface RenderableSeries="{Binding Series}"
                                       Style="{StaticResource MainChartStyle}"
                                       XAxis="{Binding Chart.TimeAxis}"
                                       ContextMenu="{StaticResource MainChartPanelContextMenu}">
                        <s:SciChartSurface.YAxis>
                            <s:NumericAxis GrowBy="0.1, 0.1" AutoRange="Always"/>
                        </s:SciChartSurface.YAxis>
                    </s:SciChartSurface>
                    <l:BusyIndicator Visibility="{Binding Path=Chart.IsLoading, Converter={StaticResource boolToVisibilityConverter}}"/>
                </Grid>
                <CollectionContainer Collection="{Binding Source={StaticResource indicatorPanesViewSrc}}"/>
            </CompositeCollection>
        </ItemsControl.ItemsSource>
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <l:SplitterPanel Margin="4" NewElementSizeRatio="0.2" />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
    </ItemsControl>
    
</UserControl>
