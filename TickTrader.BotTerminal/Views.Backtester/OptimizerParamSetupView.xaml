<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:l="clr-namespace:TickTrader.BotTerminal">

    <!-- Numeric Range Editor Template -->
   
    <DataTemplate x:Key="RangeSetEditorTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
           
            <Label Content="From:" Grid.Row="0" Grid.Column="0"/>
            <Label Content="Step:" Grid.Row="0" Grid.Column="1"/>
            <Label Content="To:" Grid.Row="0" Grid.Column="2"/>
            <TextBox Text="{l:ValidationBinding MinStr.Value}" Grid.Row="1" Grid.Column="0" Margin="2"/>
            <TextBox Text="{l:ValidationBinding StepStr.Value}" Grid.Row="1" Grid.Column="1" Margin="2"/>
            <TextBox Text="{l:ValidationBinding MaxStr.Value }" Grid.Row="1" Grid.Column="2" Margin="2"/>
        </Grid>
    </DataTemplate>

    <!-- Checklist Editor Template -->

    <DataTemplate x:Key="ChecklistSetEditorTemplate">
        <ListBox ItemsSource="{Binding Items}" MinHeight="120">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked.Value}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </DataTemplate>

    <!-- String Editor Template -->

    <DataTemplate x:Key="StringSetEditorTemplate">
    </DataTemplate>

    <!-- File Set Editor Template -->

    <DataTemplate x:Key="FileSetEditorTemplate">
    </DataTemplate>

    <ControlTemplate x:Key="OptimizerParamSetup.Classic">
        <Grid Background="{TemplateBinding Background}" MinWidth="220">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ContentControl Name="editorCC" Content="{Binding Model}"/>

            <Grid Name="ButtonsPanel" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Content="Ok" Grid.Column="0" IsEnabled="{Binding IsValid.Value}"
                        cal:Message.Attach="Ok"
                        Style="{StaticResource Backtester.Classic.DlgButtonStyle}"/>
                <Button Content="Cancel"
                        cal:Message.Attach="Cancel"
                        Style="{StaticResource Backtester.Classic.DlgButtonStyle}"
                        Grid.Column="1"/>
            </Grid>
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Model.EditorType}" Value="NumericRange">
                <Setter TargetName="editorCC" Property="ContentTemplate" Value="{StaticResource RangeSetEditorTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.EditorType}" Value="Checklist">
                <Setter TargetName="editorCC" Property="ContentTemplate" Value="{StaticResource ChecklistSetEditorTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.EditorType}" Value="StringSet">
                <Setter TargetName="editorCC" Property="ContentTemplate" Value="{StaticResource StringSetEditorTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Model.EditorType}" Value="FileSet">
                <Setter TargetName="editorCC" Property="ContentTemplate" Value="{StaticResource FileSetEditorTemplate}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <!-- Classic Style  -->

    <Style x:Key="OptimizerParamSetupViewStyle.Classic" TargetType="Window">
        <Setter Property="Template" Value="{StaticResource OptimizerParamSetup.Classic}"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="380"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="Background" Value="{DynamicResource Dialog_Background}"/>
    </Style>

</ResourceDictionary>