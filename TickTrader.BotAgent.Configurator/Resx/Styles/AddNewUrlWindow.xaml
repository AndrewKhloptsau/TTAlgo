<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TickTrader.BotAgent.Configurator">

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="HeaderStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="BaseTextBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="22"/>
        <Setter Property="FontSize" Value="14"/>
        <!--<Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="PortTextBoxStyle" BasedOn="{StaticResource BaseTextBoxStyle}" TargetType="TextBox">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="24"/>
    </Style>

    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="5 0 5 10"/>
        <Setter Property="Content" Value="Cancel"/>
    </Style>

    <Style x:Key="AddAndOkButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Content" Value="Ok"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=newPort}" Value="True">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=newHost}" Value="True">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CurrentUri.OldUri}" Value="{x:Null}">
                <Setter Property="Content" Value="Add"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxBase" TargetType="ComboBox">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="ComboBoxScheme" BasedOn="{StaticResource ComboBoxBase}" TargetType="ComboBox">
        <Setter Property="Width" Value="70"/>
    </Style>

    <Style x:Key="ComboBoxHost" BasedOn="{StaticResource ComboBoxBase}" TargetType="ComboBox">
        <Setter Property="Width" Value="170"/>
        <Setter Property="IsEditable" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>

            <DataTrigger Binding="{Binding ElementName=newPort, Path=(Validation.HasError)}" Value="True">
                <Setter Property="ToolTip" Value="{Binding ElementName=newPort, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="Foreground" Value="Red"/>

            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>