<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:l="clr-namespace:TickTrader.BotTerminal"
    xmlns:dk="http://schemas.xceed.com/wpf/xaml/avalondock">

    <Style x:Key="BotNameLabelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Shell_PrimaryForeground}"/>
    </Style>

    <!--<dk:LayoutAnchorableFloatingWindow x:Key="BotStateView">
        <dk:LayoutAnchorablePaneGroup>
            <dk:LayoutAnchorablePane>
                <dk:LayoutAnchorable>
                    <ContentControl>
                        <TextBlock>
                            One
                        </TextBlock>
                    </ContentControl>
                </dk:LayoutAnchorable>                
            </dk:LayoutAnchorablePane>

            <dk:LayoutAnchorablePane>
                <dk:LayoutAnchorable>
                    <ContentControl>
                        <TextBlock>
                            Twooooo
                        </TextBlock>
                    </ContentControl>
                </dk:LayoutAnchorable>
            </dk:LayoutAnchorablePane>
            
        </dk:LayoutAnchorablePaneGroup>
    </dk:LayoutAnchorableFloatingWindow>-->
    
    <ControlTemplate x:Key="BotStateView">
        <Grid Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <l:FlatButton cal:Message.Attach="StartStop" Style="{DynamicResource BotStateStartStopButtonStyle}" HorizontalAlignment="Left" Grid.Column="0" IsEnabled="{Binding CanStartStop}"/>
                <l:FlatButton cal:Message.Attach="OpenSettings" Style="{DynamicResource BotSettingsButtonStyle}" HorizontalAlignment="Right" Grid.Column="2"/>
                <TextBlock Style="{DynamicResource StatusLabelStyle}" Text="{Binding ExecStatus}" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" />
            </Grid>

            <l:TabControl Grid.Row="2" Style="{DynamicResource DialogTabStyle}" Margin="5"
                          VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <TabItem Header="Status">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <TextBlock Text="{Binding CustomStatus}" TextWrapping="NoWrap" VerticalAlignment="Stretch"
                                   Margin="4"/>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Bot Info">
                    <TextBlock Text="{Binding Path=BotInfo, Mode=OneWay}" TextWrapping="Wrap" VerticalAlignment="Stretch"
                               Margin="4"/>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Logs" Background="Transparent"/>
                            <Border Grid.Column="3" Margin="5 0 0 0">
                                <TextBlock Margin="5 0" Text="{Binding ErrorsCount}"></TextBlock>
                                <Border.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger  Binding="{Binding ErrorsCount, Converter={l:NumericalComparative ComparisonOption=AboveZero}}" Value="True">
                                                <Setter Property="Border.Background" Value="{DynamicResource RateDownColor}"/>
                                            </DataTrigger>
                                            <DataTrigger  Binding="{Binding ErrorsCount, Converter={l:NumericalComparative ComparisonOption=EqualZero}}" Value="True">
                                                <Setter Property="Border.Background" Value="{DynamicResource Shell_SecondaryForeground}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </TabItem.Header>
                    <TabItem.Style>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Clear" cal:Message.Attach="Clear"/>
                                        <MenuItem Header="Show in folder" 
                                                  cal:Message.Attach="Browse"
                                                  cal:Bind.ModelWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}"/>

                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabItem.Style>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <DockPanel Grid.Row="0" Style="{DynamicResource DockPanelAsToolBarStyle}">
                            <ComboBox DockPanel.Dock="Left" Width="100" SelectedItem="{Binding TypeFilter, Delay=200}" ItemsSource="{Binding Source={l:EnumToItemSource {x:Type l:MessageTypeFilter}}}" IsEditable="False" SelectedIndex="0"/>
                            <l:FlatButton DockPanel.Dock="Left" Content="Show in folder" Margin="5 0 0 0" Padding="5 0" 
                                          Style="{DynamicResource PanelActionButtonStyle}"
                                          cal:Message.Attach="Browse"/>
                            <l:FlatButton DockPanel.Dock="Left" Content="Clear" Margin="5 0 0 0" Padding="5 0"
                                          Style="{DynamicResource PanelActionButtonStyle}"
                                          cal:Message.Attach="Clear"/>
                        </DockPanel>
                        <TextBox Grid.Row="1" Text="{Binding TextFilter, Delay=500, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="155" Margin="5 0 0 0" Style="{DynamicResource SearchTextBox_Style}"/>
                        <DataGrid Name="Orders" Grid.Row="2" Style="{DynamicResource DataGrid_Style}" 
                              ItemsSource="{Binding BotLogs.SourceCollection}"
                              EnableRowVirtualization="True"
                              AutoGenerateColumns="False" 
                              CanUserAddRows="False" 
                              CanUserDeleteRows="False" 
                              SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTextColumn SortMemberPath="Time" 
                                    Binding="{Binding Time, Converter={StaticResource FullDateTimeFormat}}"
                                    SortDirection="Ascending" Header="{l:Resx Journal_Time}" Width="Auto"/>
                                <DataGridTemplateColumn Header="{l:Resx Journal_Message}" Width="3*" ClipboardContentBinding="{Binding Message}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.Column="0" CornerRadius="5" Width="10" Height="10" Background="{Binding Type, Converter={StaticResource MsgTypeToBrush}}" BorderBrush="Black" BorderThickness="1">
                                                    <Border CornerRadius="5">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0.5,0.5" EndPoint="0,0">
                                                                <GradientStop Color="#00FFFFFF" Offset="0.0" />
                                                                <GradientStop Color="#AAFFFFFF" Offset="0.5" />
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>
                                                </Border>
                                                <TextBlock Grid.Column="1" Text="{Binding Message}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
            </l:TabControl>
        </Grid>

    </ControlTemplate>

    <Style x:Key="BotStateViewStyle.Common" TargetType="UserControl">
        <Setter Property="Background" Value="{DynamicResource Dialog_Background}"/>
        <Setter Property="l:Settings.Provider" Value="{Binding Bot.StateViewSettings}" />
    </Style>

    <Style x:Key="BotStateViewStyle" TargetType="UserControl" BasedOn="{StaticResource BotStateViewStyle.Common}">
        <Setter Property="Template" Value="{StaticResource BotStateView}"/>
        <Style.Resources>
            <Style x:Key="StatusLabelStyle" TargetType="TextBlock">
                <Setter Property="FontStyle" Value="Italic" />
                <Setter Property="Foreground" Value="{DynamicResource Shell_SecondaryForeground}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ExecStatus}" Value="Starting...">
                        <Setter Property="Foreground" Value="Yellow"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ExecStatus}" Value="Stopping...">
                        <Setter Property="Foreground" Value="Yellow"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ExecStatus}" Value="Running">
                        <Setter Property="Foreground" Value="LightGreen"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="BotStateViewStyle.Classic" TargetType="UserControl" BasedOn="{StaticResource BotStateViewStyle.Common}">
        <Setter Property="Template" Value="{StaticResource BotStateView}"/>
        <Style.Resources>
            <Style x:Key="StatusLabelStyle" TargetType="TextBlock">
                <Setter Property="FontStyle" Value="Italic" />
                <Setter Property="Foreground" Value="{DynamicResource Shell_SecondaryForeground}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ExecStatus}" Value="Starting...">
                        <Setter Property="Foreground" Value="Orange"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ExecStatus}" Value="Stopping...">
                        <Setter Property="Foreground" Value="Orange"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ExecStatus}" Value="Running">
                        <Setter Property="Foreground" Value="DarkGreen"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>
