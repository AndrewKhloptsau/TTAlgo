// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bot_agent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TickTrader.Algo.Protocol.Grpc.Lib {

  /// <summary>Holder for reflection information generated from bot_agent.proto</summary>
  public static partial class BotAgentReflection {

    #region Descriptor
    /// <summary>File descriptor for bot_agent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BotAgentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9ib3RfYWdlbnQucHJvdG8SIVRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYhodZ29vZ2xlX3Byb3Rvcy90aW1lc3RhbXAucHJvdG8aCmtleXMu",
            "cHJvdG8aDm1ldGFkYXRhLnByb3RvGgxjb25maWcucHJvdG8i2AEKDVJlcXVl",
            "c3RSZXN1bHQSTgoGc3RhdHVzGAEgASgOMj4uVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLlJlcXVlc3RSZXN1bHQuUmVxdWVzdFN0YXR1cxIP",
            "CgdtZXNzYWdlGAIgASgJImYKDVJlcXVlc3RTdGF0dXMSCwoHU1VDQ0VTUxAA",
            "EhkKFUlOVEVSTkFMX1NFUlZFUl9FUlJPUhABEhAKDFVOQVVUSE9SSVpFRBAC",
            "EgoKBlJFSkVDVBADEg8KC05PVF9BTExPV0VEEAQiXQoMTG9naW5SZXF1ZXN0",
            "Eg0KBWxvZ2luGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJEhUKDW1ham9yX3Zl",
            "cnNpb24YAyABKAUSFQoNbWlub3JfdmVyc2lvbhgEIAEoBSLHAwoNTG9naW5S",
            "ZXNwb25zZRJFCgtleGVjX3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxn",
            "by5Qcm90b2NvbC5HcnBjLkxpYi5SZXF1ZXN0UmVzdWx0EkoKBWVycm9yGAIg",
            "ASgOMjsuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkxvZ2lu",
            "UmVzcG9uc2UuTG9naW5FcnJvchIVCg1tYWpvcl92ZXJzaW9uGAMgASgFEhUK",
            "DW1pbm9yX3ZlcnNpb24YBCABKAUSEgoKc2Vzc2lvbl9pZBgFIAEoCRIUCgxh",
            "Y2Nlc3NfdG9rZW4YBiABKAkSUgoMYWNjZXNzX2xldmVsGAcgASgOMjwuVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkxvZ2luUmVzcG9uc2Uu",
            "QWNjZXNzTGV2ZWwiRQoKTG9naW5FcnJvchIICgROT05FEAASFwoTSU5WQUxJ",
            "RF9DUkVERU5USUFMUxABEhQKEFZFUlNJT05fTUlTTUFUQ0gQAiIwCgtBY2Nl",
            "c3NMZXZlbBIKCgZWSUVXRVIQABIKCgZERUFMRVIQARIJCgVBRE1JThACIg8K",
            "DUxvZ291dFJlcXVlc3Qi7AEKDkxvZ291dFJlc3BvbnNlEkUKC2V4ZWNfcmVz",
            "dWx0GAEgASgLMjAuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGli",
            "LlJlcXVlc3RSZXN1bHQSTgoGcmVhc29uGAIgASgOMj4uVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLkxvZ291dFJlc3BvbnNlLkxvZ291dFJl",
            "YXNvbhIMCgR0ZXh0GAMgASgJIjUKDExvZ291dFJlYXNvbhISCg5DTElFTlRf",
            "UkVRVUVTVBAAEhEKDVNFUlZFUl9MT0dPVVQQASISChBIZWFydGJlYXRSZXF1",
            "ZXN0IloKEUhlYXJ0YmVhdFJlc3BvbnNlEkUKC2V4ZWNfcmVzdWx0GAEgASgL",
            "MjAuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3RS",
            "ZXN1bHQiEQoPU25hcHNob3RSZXF1ZXN0IqkEChBTbmFwc2hvdFJlc3BvbnNl",
            "EkUKC2V4ZWNfcmVzdWx0GAEgASgLMjAuVGlja1RyYWRlci5BbGdvLlByb3Rv",
            "Y29sLkdycGMuTGliLlJlcXVlc3RSZXN1bHQSTAoMYXBpX21ldGFkYXRhGAIg",
            "ASgLMjYuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFwaU1l",
            "dGFkYXRhUmVzcG9uc2USTgoNbWFwcGluZ3NfaW5mbxgDIAEoCzI3LlRpY2tU",
            "cmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5NYXBwaW5nc0luZm9SZXNw",
            "b25zZRJOCg1zZXR1cF9jb250ZXh0GAQgASgLMjcuVGlja1RyYWRlci5BbGdv",
            "LlByb3RvY29sLkdycGMuTGliLlNldHVwQ29udGV4dFJlc3BvbnNlEkwKDHBh",
            "Y2thZ2VfbGlzdBgFIAEoCzI2LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYi5QYWNrYWdlTGlzdFJlc3BvbnNlEkwKDGFjY291bnRfbGlzdBgG",
            "IAEoCzI2LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5BY2Nv",
            "dW50TGlzdFJlc3BvbnNlEkQKCGJvdF9saXN0GAcgASgLMjIuVGlja1RyYWRl",
            "ci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJvdExpc3RSZXNwb25zZSIbChlT",
            "dWJzY3JpYmVUb1VwZGF0ZXNSZXF1ZXN0It4ECgpVcGRhdGVJbmZvEkYKBHR5",
            "cGUYASABKA4yOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "VXBkYXRlSW5mby5VcGRhdGVUeXBlEkcKB3BhY2thZ2UYBSABKAsyNC5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUGFja2FnZVVwZGF0ZUlu",
            "Zm9IABJSCg1wYWNrYWdlX3N0YXRlGAYgASgLMjkuVGlja1RyYWRlci5BbGdv",
            "LlByb3RvY29sLkdycGMuTGliLlBhY2thZ2VTdGF0ZVVwZGF0ZUluZm9IABJH",
            "CgdhY2NvdW50GAcgASgLMjQuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdy",
            "cGMuTGliLkFjY291bnRVcGRhdGVJbmZvSAASUgoNYWNjb3VudF9zdGF0ZRgI",
            "IAEoCzI5LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5BY2Nv",
            "dW50U3RhdGVVcGRhdGVJbmZvSAASPwoDYm90GAkgASgLMjAuVGlja1RyYWRl",
            "ci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJvdFVwZGF0ZUluZm9IABJKCgli",
            "b3Rfc3RhdGUYCiABKAsyNS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuQm90U3RhdGVVcGRhdGVJbmZvSAAiMgoKVXBkYXRlVHlwZRIJCgVB",
            "RERFRBAAEgwKCFJFUExBQ0VEEAESCwoHUkVNT1ZFRBACQg0KC3VwZGF0ZV9p",
            "bmZvIlQKEVBhY2thZ2VVcGRhdGVJbmZvEj8KB3BhY2thZ2UYASABKAsyLi5U",
            "aWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUGFja2FnZUluZm8i",
            "WQoWUGFja2FnZVN0YXRlVXBkYXRlSW5mbxI/CgdwYWNrYWdlGAEgASgLMi4u",
            "VGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlBhY2thZ2VJbmZv",
            "IlkKEUFjY291bnRVcGRhdGVJbmZvEkQKB2FjY291bnQYASABKAsyMy5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudE1vZGVsSW5m",
            "byJeChZBY2NvdW50U3RhdGVVcGRhdGVJbmZvEkQKB2FjY291bnQYASABKAsy",
            "My5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudE1v",
            "ZGVsSW5mbyJNCg1Cb3RVcGRhdGVJbmZvEjwKA2JvdBgBIAEoCzIvLlRpY2tU",
            "cmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5Cb3RNb2RlbEluZm8iUgoS",
            "Qm90U3RhdGVVcGRhdGVJbmZvEjwKA2JvdBgBIAEoCzIvLlRpY2tUcmFkZXIu",
            "QWxnby5Qcm90b2NvbC5HcnBjLkxpYi5Cb3RNb2RlbEluZm8iFAoSQXBpTWV0",
            "YWRhdGFSZXF1ZXN0IqYBChNBcGlNZXRhZGF0YVJlc3BvbnNlEkUKC2V4ZWNf",
            "cmVzdWx0GAEgASgLMjAuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMu",
            "TGliLlJlcXVlc3RSZXN1bHQSSAoMYXBpX21ldGFkYXRhGAIgASgLMjIuVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFwaU1ldGFkYXRhSW5m",
            "byIVChNNYXBwaW5nc0luZm9SZXF1ZXN0IqkBChRNYXBwaW5nc0luZm9SZXNw",
            "b25zZRJFCgtleGVjX3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxnby5Q",
            "cm90b2NvbC5HcnBjLkxpYi5SZXF1ZXN0UmVzdWx0EkoKCG1hcHBpbmdzGAIg",
            "ASgLMjguVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLk1hcHBp",
            "bmdDb2xsZWN0aW9uSW5mbyIVChNTZXR1cENvbnRleHRSZXF1ZXN0IqkBChRT",
            "ZXR1cENvbnRleHRSZXNwb25zZRJFCgtleGVjX3Jlc3VsdBgBIAEoCzIwLlRp",
            "Y2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZXF1ZXN0UmVzdWx0",
            "EkoKDXNldHVwX2NvbnRleHQYAiABKAsyMy5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuU2V0dXBDb250ZXh0SW5mbyJYChZBY2NvdW50TWV0",
            "YWRhdGFSZXF1ZXN0Ej4KB2FjY291bnQYASABKAsyLS5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudEtleSL+AQoXQWNjb3VudE1l",
            "dGFkYXRhUmVzcG9uc2USRQoLZXhlY19yZXN1bHQYASABKAsyMC5UaWNrVHJh",
            "ZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdFJlc3VsdBJKCgpl",
            "cnJvcl9pbmZvGAIgASgLMjYuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdy",
            "cGMuTGliLkNvbm5lY3Rpb25FcnJvckluZm8SUAoQYWNjb3VudF9tZXRhZGF0",
            "YRgDIAEoCzI2LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5B",
            "Y2NvdW50TWV0YWRhdGFJbmZvIhAKDkJvdExpc3RSZXF1ZXN0IpcBCg9Cb3RM",
            "aXN0UmVzcG9uc2USRQoLZXhlY19yZXN1bHQYASABKAsyMC5UaWNrVHJhZGVy",
            "LkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdFJlc3VsdBI9CgRib3Rz",
            "GAIgAygLMi8uVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJv",
            "dE1vZGVsSW5mbyKQAQoNQWRkQm90UmVxdWVzdBI+CgdhY2NvdW50GAEgASgL",
            "Mi0uVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFjY291bnRL",
            "ZXkSPwoGY29uZmlnGAIgASgLMi8uVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLlBsdWdpbkNvbmZpZyJXCg5BZGRCb3RSZXNwb25zZRJFCgtl",
            "eGVjX3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYi5SZXF1ZXN0UmVzdWx0Ik4KEFJlbW92ZUJvdFJlcXVlc3QSDgoG",
            "Ym90X2lkGAEgASgJEhEKCWNsZWFuX2xvZxgCIAEoCBIXCg9jbGVhbl9hbGdv",
            "X2RhdGEYAyABKAgiWgoRUmVtb3ZlQm90UmVzcG9uc2USRQoLZXhlY19yZXN1",
            "bHQYASABKAsyMC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "UmVxdWVzdFJlc3VsdCIhCg9TdGFydEJvdFJlcXVlc3QSDgoGYm90X2lkGAEg",
            "ASgJIlkKEFN0YXJ0Qm90UmVzcG9uc2USRQoLZXhlY19yZXN1bHQYASABKAsy",
            "MC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdFJl",
            "c3VsdCIgCg5TdG9wQm90UmVxdWVzdBIOCgZib3RfaWQYASABKAkiWAoPU3Rv",
            "cEJvdFJlc3BvbnNlEkUKC2V4ZWNfcmVzdWx0GAEgASgLMjAuVGlja1RyYWRl",
            "ci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3RSZXN1bHQibQoWQ2hh",
            "bmdlQm90Q29uZmlnUmVxdWVzdBIOCgZib3RfaWQYASABKAkSQwoKbmV3X2Nv",
            "bmZpZxgCIAEoCzIvLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5QbHVnaW5Db25maWciYAoXQ2hhbmdlQm90Q29uZmlnUmVzcG9uc2USRQoL",
            "ZXhlY19yZXN1bHQYASABKAsyMC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wu",
            "R3JwYy5MaWIuUmVxdWVzdFJlc3VsdCIUChJBY2NvdW50TGlzdFJlcXVlc3Qi",
            "owEKE0FjY291bnRMaXN0UmVzcG9uc2USRQoLZXhlY19yZXN1bHQYASABKAsy",
            "MC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdFJl",
            "c3VsdBJFCghhY2NvdW50cxgCIAMoCzIzLlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5BY2NvdW50TW9kZWxJbmZvIn8KEUFkZEFjY291bnRS",
            "ZXF1ZXN0Ej4KB2FjY291bnQYASABKAsyLS5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuQWNjb3VudEtleRIQCghwYXNzd29yZBgCIAEoCRIY",
            "ChB1c2VfbmV3X3Byb3RvY29sGAMgASgIIlsKEkFkZEFjY291bnRSZXNwb25z",
            "ZRJFCgtleGVjX3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5SZXF1ZXN0UmVzdWx0IlYKFFJlbW92ZUFjY291bnRS",
            "ZXF1ZXN0Ej4KB2FjY291bnQYASABKAsyLS5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuQWNjb3VudEtleSJeChVSZW1vdmVBY2NvdW50UmVz",
            "cG9uc2USRQoLZXhlY19yZXN1bHQYASABKAsyMC5UaWNrVHJhZGVyLkFsZ28u",
            "UHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdFJlc3VsdCKCAQoUQ2hhbmdlQWNj",
            "b3VudFJlcXVlc3QSPgoHYWNjb3VudBgBIAEoCzItLlRpY2tUcmFkZXIuQWxn",
            "by5Qcm90b2NvbC5HcnBjLkxpYi5BY2NvdW50S2V5EhAKCHBhc3N3b3JkGAIg",
            "ASgJEhgKEHVzZV9uZXdfcHJvdG9jb2wYAyABKAgiXgoVQ2hhbmdlQWNjb3Vu",
            "dFJlc3BvbnNlEkUKC2V4ZWNfcmVzdWx0GAEgASgLMjAuVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3RSZXN1bHQiVAoSVGVzdEFj",
            "Y291bnRSZXF1ZXN0Ej4KB2FjY291bnQYASABKAsyLS5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudEtleSKoAQoTVGVzdEFjY291",
            "bnRSZXNwb25zZRJFCgtleGVjX3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIu",
            "QWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZXF1ZXN0UmVzdWx0EkoKCmVycm9y",
            "X2luZm8YAiABKAsyNi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuQ29ubmVjdGlvbkVycm9ySW5mbyKFAQoXVGVzdEFjY291bnRDcmVkc1Jl",
            "cXVlc3QSPgoHYWNjb3VudBgBIAEoCzItLlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5BY2NvdW50S2V5EhAKCHBhc3N3b3JkGAIgASgJEhgK",
            "EHVzZV9uZXdfcHJvdG9jb2wYAyABKAgirQEKGFRlc3RBY2NvdW50Q3JlZHNS",
            "ZXNwb25zZRJFCgtleGVjX3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxn",
            "by5Qcm90b2NvbC5HcnBjLkxpYi5SZXF1ZXN0UmVzdWx0EkoKCmVycm9yX2lu",
            "Zm8YAiABKAsyNi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "Q29ubmVjdGlvbkVycm9ySW5mbyIUChJQYWNrYWdlTGlzdFJlcXVlc3QingEK",
            "E1BhY2thZ2VMaXN0UmVzcG9uc2USRQoLZXhlY19yZXN1bHQYASABKAsyMC5U",
            "aWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVxdWVzdFJlc3Vs",
            "dBJACghwYWNrYWdlcxgCIAMoCzIuLlRpY2tUcmFkZXIuQWxnby5Qcm90b2Nv",
            "bC5HcnBjLkxpYi5QYWNrYWdlSW5mbyIxChFGaWxlQ2h1bmtTZXR0aW5ncxIM",
            "CgRzaXplGAEgASgFEg4KBm9mZnNldBgCIAEoBSI5CglGaWxlQ2h1bmsSCgoC",
            "aWQYASABKAUSDgoGYmluYXJ5GAIgASgMEhAKCGlzX2ZpbmFsGAMgASgIIpoB",
            "Cg5QYWNrYWdlRGV0YWlscxI6CgNrZXkYASABKAsyLS5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuUGFja2FnZUtleRJMCg5jaHVua19zZXR0",
            "aW5ncxgCIAEoCzI0LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5GaWxlQ2h1bmtTZXR0aW5ncyKkAQoUVXBsb2FkUGFja2FnZVJlcXVlc3QS",
            "RAoHcGFja2FnZRgKIAEoCzIxLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYi5QYWNrYWdlRGV0YWlsc0gAEj0KBWNodW5rGAsgASgLMiwuVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkZpbGVDaHVua0gAQgcK",
            "BXZhbHVlIl4KFVVwbG9hZFBhY2thZ2VSZXNwb25zZRJFCgtleGVjX3Jlc3Vs",
            "dBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5S",
            "ZXF1ZXN0UmVzdWx0IlYKFFJlbW92ZVBhY2thZ2VSZXF1ZXN0Ej4KB3BhY2th",
            "Z2UYASABKAsyLS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "UGFja2FnZUtleSJeChVSZW1vdmVQYWNrYWdlUmVzcG9uc2USRQoLZXhlY19y",
            "ZXN1bHQYASABKAsyMC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuUmVxdWVzdFJlc3VsdCJcChZEb3dubG9hZFBhY2thZ2VSZXF1ZXN0EkIK",
            "B3BhY2thZ2UYASABKAsyMS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuUGFja2FnZURldGFpbHMinQEKF0Rvd25sb2FkUGFja2FnZVJlc3Bv",
            "bnNlEkUKC2V4ZWNfcmVzdWx0GAEgASgLMjAuVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLlJlcXVlc3RSZXN1bHQSOwoFY2h1bmsYAiABKAsy",
            "LC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuRmlsZUNodW5r",
            "IiIKEEJvdFN0YXR1c1JlcXVlc3QSDgoGYm90X2lkGAEgASgJInoKEUJvdFN0",
            "YXR1c1Jlc3BvbnNlEkUKC2V4ZWNfcmVzdWx0GAEgASgLMjAuVGlja1RyYWRl",
            "ci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3RSZXN1bHQSDgoGYm90",
            "X2lkGAIgASgJEg4KBnN0YXR1cxgDIAEoCSJqCg5Cb3RMb2dzUmVxdWVzdBIO",
            "CgZib3RfaWQYASABKAkSNQoRbGFzdF9sb2dfdGltZV91dGMYAiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEhEKCW1heF9jb3VudBgDIAEoBSKo",
            "AQoPQm90TG9nc1Jlc3BvbnNlEkUKC2V4ZWNfcmVzdWx0GAEgASgLMjAuVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3RSZXN1bHQS",
            "DgoGYm90X2lkGAIgASgJEj4KBGxvZ3MYAyADKAsyMC5UaWNrVHJhZGVyLkFs",
            "Z28uUHJvdG9jb2wuR3JwYy5MaWIuTG9nUmVjb3JkSW5mbyJ3ChRCb3RGb2xk",
            "ZXJJbmZvUmVxdWVzdBIOCgZib3RfaWQYASABKAkSTwoJZm9sZGVyX2lkGAIg",
            "ASgOMjwuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJvdEZv",
            "bGRlckluZm8uQm90Rm9sZGVySWQipQEKFUJvdEZvbGRlckluZm9SZXNwb25z",
            "ZRJFCgtleGVjX3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5SZXF1ZXN0UmVzdWx0EkUKC2ZvbGRlcl9pbmZvGAMg",
            "ASgLMjAuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJvdEZv",
            "bGRlckluZm8ieAoVQ2xlYXJCb3RGb2xkZXJSZXF1ZXN0Eg4KBmJvdF9pZBgB",
            "IAEoCRJPCglmb2xkZXJfaWQYAiABKA4yPC5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuQm90Rm9sZGVySW5mby5Cb3RGb2xkZXJJZCJfChZD",
            "bGVhckJvdEZvbGRlclJlc3BvbnNlEkUKC2V4ZWNfcmVzdWx0GAEgASgLMjAu",
            "VGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcXVlc3RSZXN1",
            "bHQiigEKFERlbGV0ZUJvdEZpbGVSZXF1ZXN0Eg4KBmJvdF9pZBgBIAEoCRJP",
            "Cglmb2xkZXJfaWQYAiABKA4yPC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wu",
            "R3JwYy5MaWIuQm90Rm9sZGVySW5mby5Cb3RGb2xkZXJJZBIRCglmaWxlX25h",
            "bWUYAyABKAkiXgoVRGVsZXRlQm90RmlsZVJlc3BvbnNlEkUKC2V4ZWNfcmVz",
            "dWx0GAEgASgLMjAuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGli",
            "LlJlcXVlc3RSZXN1bHQi0gEKDkJvdEZpbGVEZXRhaWxzEg4KBmJvdF9pZBgB",
            "IAEoCRJPCglmb2xkZXJfaWQYAiABKA4yPC5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuQm90Rm9sZGVySW5mby5Cb3RGb2xkZXJJZBIRCglm",
            "aWxlX25hbWUYAyABKAkSTAoOY2h1bmtfc2V0dGluZ3MYBCABKAsyNC5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuRmlsZUNodW5rU2V0dGlu",
            "Z3MiWQoWRG93bmxvYWRCb3RGaWxlUmVxdWVzdBI/CgRmaWxlGAEgASgLMjEu",
            "VGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkJvdEZpbGVEZXRh",
            "aWxzIp0BChdEb3dubG9hZEJvdEZpbGVSZXNwb25zZRJFCgtleGVjX3Jlc3Vs",
            "dBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5S",
            "ZXF1ZXN0UmVzdWx0EjsKBWNodW5rGAIgASgLMiwuVGlja1RyYWRlci5BbGdv",
            "LlByb3RvY29sLkdycGMuTGliLkZpbGVDaHVuayKhAQoUVXBsb2FkQm90Rmls",
            "ZVJlcXVlc3QSQQoEZmlsZRgKIAEoCzIxLlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5Cb3RGaWxlRGV0YWlsc0gAEj0KBWNodW5rGAsgASgL",
            "MiwuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkZpbGVDaHVu",
            "a0gAQgcKBXZhbHVlIl4KFVVwbG9hZEJvdEZpbGVSZXNwb25zZRJFCgtleGVj",
            "X3Jlc3VsdBgBIAEoCzIwLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBj",
            "LkxpYi5SZXF1ZXN0UmVzdWx0MocgCghCb3RBZ2VudBJqCgVMb2dpbhIvLlRp",
            "Y2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5Mb2dpblJlcXVlc3Qa",
            "MC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuTG9naW5SZXNw",
            "b25zZRJtCgZMb2dvdXQSMC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuTG9nb3V0UmVxdWVzdBoxLlRpY2tUcmFkZXIuQWxnby5Qcm90b2Nv",
            "bC5HcnBjLkxpYi5Mb2dvdXRSZXNwb25zZRJ2CglIZWFydGJlYXQSMy5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuSGVhcnRiZWF0UmVxdWVz",
            "dBo0LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5IZWFydGJl",
            "YXRSZXNwb25zZRJ2CgtHZXRTbmFwc2hvdBIyLlRpY2tUcmFkZXIuQWxnby5Q",
            "cm90b2NvbC5HcnBjLkxpYi5TbmFwc2hvdFJlcXVlc3QaMy5UaWNrVHJhZGVy",
            "LkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuU25hcHNob3RSZXNwb25zZRKDAQoS",
            "U3Vic2NyaWJlVG9VcGRhdGVzEjwuVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLlN1YnNjcmliZVRvVXBkYXRlc1JlcXVlc3QaLS5UaWNrVHJh",
            "ZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuVXBkYXRlSW5mbzABEn8KDkdl",
            "dEFwaU1ldGFkYXRhEjUuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMu",
            "TGliLkFwaU1ldGFkYXRhUmVxdWVzdBo2LlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5BcGlNZXRhZGF0YVJlc3BvbnNlEoIBCg9HZXRNYXBw",
            "aW5nc0luZm8SNi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "TWFwcGluZ3NJbmZvUmVxdWVzdBo3LlRpY2tUcmFkZXIuQWxnby5Qcm90b2Nv",
            "bC5HcnBjLkxpYi5NYXBwaW5nc0luZm9SZXNwb25zZRKCAQoPR2V0U2V0dXBD",
            "b250ZXh0EjYuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlNl",
            "dHVwQ29udGV4dFJlcXVlc3QaNy5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wu",
            "R3JwYy5MaWIuU2V0dXBDb250ZXh0UmVzcG9uc2USiwEKEkdldEFjY291bnRN",
            "ZXRhZGF0YRI5LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5B",
            "Y2NvdW50TWV0YWRhdGFSZXF1ZXN0GjouVGlja1RyYWRlci5BbGdvLlByb3Rv",
            "Y29sLkdycGMuTGliLkFjY291bnRNZXRhZGF0YVJlc3BvbnNlEnMKCkdldEJv",
            "dExpc3QSMS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQm90",
            "TGlzdFJlcXVlc3QaMi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuQm90TGlzdFJlc3BvbnNlEm0KBkFkZEJvdBIwLlRpY2tUcmFkZXIuQWxn",
            "by5Qcm90b2NvbC5HcnBjLkxpYi5BZGRCb3RSZXF1ZXN0GjEuVGlja1RyYWRl",
            "ci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFkZEJvdFJlc3BvbnNlEnYKCVJl",
            "bW92ZUJvdBIzLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5S",
            "ZW1vdmVCb3RSZXF1ZXN0GjQuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdy",
            "cGMuTGliLlJlbW92ZUJvdFJlc3BvbnNlEnMKCFN0YXJ0Qm90EjIuVGlja1Ry",
            "YWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlN0YXJ0Qm90UmVxdWVzdBoz",
            "LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5TdGFydEJvdFJl",
            "c3BvbnNlEnAKB1N0b3BCb3QSMS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wu",
            "R3JwYy5MaWIuU3RvcEJvdFJlcXVlc3QaMi5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuU3RvcEJvdFJlc3BvbnNlEogBCg9DaGFuZ2VCb3RD",
            "b25maWcSOS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQ2hh",
            "bmdlQm90Q29uZmlnUmVxdWVzdBo6LlRpY2tUcmFkZXIuQWxnby5Qcm90b2Nv",
            "bC5HcnBjLkxpYi5DaGFuZ2VCb3RDb25maWdSZXNwb25zZRJ/Cg5HZXRBY2Nv",
            "dW50TGlzdBI1LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5B",
            "Y2NvdW50TGlzdFJlcXVlc3QaNi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wu",
            "R3JwYy5MaWIuQWNjb3VudExpc3RSZXNwb25zZRJ5CgpBZGRBY2NvdW50EjQu",
            "VGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFkZEFjY291bnRS",
            "ZXF1ZXN0GjUuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkFk",
            "ZEFjY291bnRSZXNwb25zZRKCAQoNUmVtb3ZlQWNjb3VudBI3LlRpY2tUcmFk",
            "ZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZW1vdmVBY2NvdW50UmVxdWVz",
            "dBo4LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZW1vdmVB",
            "Y2NvdW50UmVzcG9uc2USggEKDUNoYW5nZUFjY291bnQSNy5UaWNrVHJhZGVy",
            "LkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQ2hhbmdlQWNjb3VudFJlcXVlc3Qa",
            "OC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQ2hhbmdlQWNj",
            "b3VudFJlc3BvbnNlEnwKC1Rlc3RBY2NvdW50EjUuVGlja1RyYWRlci5BbGdv",
            "LlByb3RvY29sLkdycGMuTGliLlRlc3RBY2NvdW50UmVxdWVzdBo2LlRpY2tU",
            "cmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5UZXN0QWNjb3VudFJlc3Bv",
            "bnNlEosBChBUZXN0QWNjb3VudENyZWRzEjouVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLlRlc3RBY2NvdW50Q3JlZHNSZXF1ZXN0GjsuVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlRlc3RBY2NvdW50Q3Jl",
            "ZHNSZXNwb25zZRJ/Cg5HZXRQYWNrYWdlTGlzdBI1LlRpY2tUcmFkZXIuQWxn",
            "by5Qcm90b2NvbC5HcnBjLkxpYi5QYWNrYWdlTGlzdFJlcXVlc3QaNi5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUGFja2FnZUxpc3RSZXNw",
            "b25zZRKEAQoNVXBsb2FkUGFja2FnZRI3LlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5VcGxvYWRQYWNrYWdlUmVxdWVzdBo4LlRpY2tUcmFk",
            "ZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5VcGxvYWRQYWNrYWdlUmVzcG9u",
            "c2UoARKCAQoNUmVtb3ZlUGFja2FnZRI3LlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5SZW1vdmVQYWNrYWdlUmVxdWVzdBo4LlRpY2tUcmFk",
            "ZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZW1vdmVQYWNrYWdlUmVzcG9u",
            "c2USigEKD0Rvd25sb2FkUGFja2FnZRI5LlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5Eb3dubG9hZFBhY2thZ2VSZXF1ZXN0GjouVGlja1Ry",
            "YWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLkRvd25sb2FkUGFja2FnZVJl",
            "c3BvbnNlMAESeQoMR2V0Qm90U3RhdHVzEjMuVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLkJvdFN0YXR1c1JlcXVlc3QaNC5UaWNrVHJhZGVy",
            "LkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQm90U3RhdHVzUmVzcG9uc2UScwoK",
            "R2V0Qm90TG9ncxIxLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5Cb3RMb2dzUmVxdWVzdBoyLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5H",
            "cnBjLkxpYi5Cb3RMb2dzUmVzcG9uc2UShQEKEEdldEJvdEZvbGRlckluZm8S",
            "Ny5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQm90Rm9sZGVy",
            "SW5mb1JlcXVlc3QaOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuQm90Rm9sZGVySW5mb1Jlc3BvbnNlEoUBCg5DbGVhckJvdEZvbGRlchI4",
            "LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5DbGVhckJvdEZv",
            "bGRlclJlcXVlc3QaOS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuQ2xlYXJCb3RGb2xkZXJSZXNwb25zZRKCAQoNRGVsZXRlQm90RmlsZRI3",
            "LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5EZWxldGVCb3RG",
            "aWxlUmVxdWVzdBo4LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5EZWxldGVCb3RGaWxlUmVzcG9uc2USigEKD0Rvd25sb2FkQm90RmlsZRI5",
            "LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5Eb3dubG9hZEJv",
            "dEZpbGVSZXF1ZXN0GjouVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMu",
            "TGliLkRvd25sb2FkQm90RmlsZVJlc3BvbnNlMAEShAEKDVVwbG9hZEJvdEZp",
            "bGUSNy5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuVXBsb2Fk",
            "Qm90RmlsZVJlcXVlc3QaOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuVXBsb2FkQm90RmlsZVJlc3BvbnNlKAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::TickTrader.Algo.Protocol.Grpc.Lib.KeysReflection.Descriptor, global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor, global::TickTrader.Algo.Protocol.Grpc.Lib.ConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult), global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult.Parser, new[]{ "Status", "Message" }, null, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult.Types.RequestStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LoginRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.LoginRequest.Parser, new[]{ "Login", "Password", "MajorVersion", "MinorVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Parser, new[]{ "ExecResult", "Error", "MajorVersion", "MinorVersion", "SessionId", "AccessToken", "AccessLevel" }, null, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError), typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.AccessLevel) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Parser, new[]{ "ExecResult", "Reason", "Text" }, null, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.HeartbeatRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.HeartbeatRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.HeartbeatResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.HeartbeatResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SnapshotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.SnapshotRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SnapshotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.SnapshotResponse.Parser, new[]{ "ExecResult", "ApiMetadata", "MappingsInfo", "SetupContext", "PackageList", "AccountList", "BotList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SubscribeToUpdatesRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.SubscribeToUpdatesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Parser, new[]{ "Type", "Package", "PackageState", "Account", "AccountState", "Bot", "BotState" }, new[]{ "UpdateInfo" }, new[]{ typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo.Parser, new[]{ "Package" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageStateUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageStateUpdateInfo.Parser, new[]{ "Package" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo.Parser, new[]{ "Bot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo.Parser, new[]{ "Bot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse.Parser, new[]{ "ExecResult", "ApiMetadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse.Parser, new[]{ "ExecResult", "Mappings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse.Parser, new[]{ "ExecResult", "SetupContext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataRequest.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataResponse.Parser, new[]{ "ExecResult", "ErrorInfo", "AccountMetadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotListRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.BotListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse.Parser, new[]{ "ExecResult", "Bots" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotRequest.Parser, new[]{ "Account", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AddBotResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotRequest.Parser, new[]{ "BotId", "CleanLog", "CleanAlgoData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveBotResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotRequest.Parser, new[]{ "BotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.StartBotResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotRequest.Parser, new[]{ "BotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.StopBotResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigRequest.Parser, new[]{ "BotId", "NewConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeBotConfigResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse.Parser, new[]{ "ExecResult", "Accounts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountRequest.Parser, new[]{ "Account", "Password", "UseNewProtocol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.AddAccountResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountRequest.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.RemoveAccountResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountRequest.Parser, new[]{ "Account", "Password", "UseNewProtocol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.ChangeAccountResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountRequest.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountResponse.Parser, new[]{ "ExecResult", "ErrorInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsRequest.Parser, new[]{ "Account", "Password", "UseNewProtocol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.TestAccountCredsResponse.Parser, new[]{ "ExecResult", "ErrorInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse.Parser, new[]{ "ExecResult", "Packages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings), global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings.Parser, new[]{ "Size", "Offset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk), global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk.Parser, new[]{ "Id", "Binary", "IsFinal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails.Parser, new[]{ "Key", "ChunkSettings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageRequest.Parser, new[]{ "Package", "Chunk" }, new[]{ "Value" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.UploadPackageResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageRequest.Parser, new[]{ "Package" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.RemovePackageResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageRequest.Parser, new[]{ "Package" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadPackageResponse.Parser, new[]{ "ExecResult", "Chunk" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotStatusRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.BotStatusRequest.Parser, new[]{ "BotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotStatusResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.BotStatusResponse.Parser, new[]{ "ExecResult", "BotId", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotLogsRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.BotLogsRequest.Parser, new[]{ "BotId", "LastLogTimeUtc", "MaxCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotLogsResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.BotLogsResponse.Parser, new[]{ "ExecResult", "BotId", "Logs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfoRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfoRequest.Parser, new[]{ "BotId", "FolderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfoResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfoResponse.Parser, new[]{ "ExecResult", "FolderInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ClearBotFolderRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.ClearBotFolderRequest.Parser, new[]{ "BotId", "FolderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ClearBotFolderResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.ClearBotFolderResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DeleteBotFileRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.DeleteBotFileRequest.Parser, new[]{ "BotId", "FolderId", "FileName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DeleteBotFileResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.DeleteBotFileResponse.Parser, new[]{ "ExecResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails), global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails.Parser, new[]{ "BotId", "FolderId", "FileName", "ChunkSettings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadBotFileRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadBotFileRequest.Parser, new[]{ "File" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadBotFileResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.DownloadBotFileResponse.Parser, new[]{ "ExecResult", "Chunk" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UploadBotFileRequest), global::TickTrader.Algo.Protocol.Grpc.Lib.UploadBotFileRequest.Parser, new[]{ "File", "Chunk" }, new[]{ "Value" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.UploadBotFileResponse), global::TickTrader.Algo.Protocol.Grpc.Lib.UploadBotFileResponse.Parser, new[]{ "ExecResult" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestResult : pb::IMessage<RequestResult> {
    private static readonly pb::MessageParser<RequestResult> _parser = new pb::MessageParser<RequestResult>(() => new RequestResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestResult(RequestResult other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestResult Clone() {
      return new RequestResult(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult.Types.RequestStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult.Types.RequestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestResult other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult.Types.RequestStatus) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RequestResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RequestStatus {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        [pbr::OriginalName("INTERNAL_SERVER_ERROR")] InternalServerError = 1,
        [pbr::OriginalName("UNAUTHORIZED")] Unauthorized = 2,
        [pbr::OriginalName("REJECT")] Reject = 3,
        [pbr::OriginalName("NOT_ALLOWED")] NotAllowed = 4,
      }

    }
    #endregion

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      login_ = other.login_;
      password_ = other.password_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 3;
    private int majorVersion_;
    /// <summary>
    /// client version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 4;
    private int minorVersion_;
    /// <summary>
    /// client version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (Password != other.Password) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MinorVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      error_ = other.error_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      sessionId_ = other.sessionId_;
      accessToken_ = other.accessToken_;
      accessLevel_ = other.accessLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 3;
    private int majorVersion_;
    /// <summary>
    /// server version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 4;
    private int minorVersion_;
    /// <summary>
    /// server version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 5;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 6;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_level" field.</summary>
    public const int AccessLevelFieldNumber = 7;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.AccessLevel accessLevel_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.AccessLevel AccessLevel {
      get { return accessLevel_; }
      set {
        accessLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (Error != other.Error) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      if (SessionId != other.SessionId) return false;
      if (AccessToken != other.AccessToken) return false;
      if (AccessLevel != other.AccessLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (AccessLevel != 0) hash ^= AccessLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (Error != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Error);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinorVersion);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SessionId);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AccessToken);
      }
      if (AccessLevel != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) AccessLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (AccessLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccessLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.AccessLevel != 0) {
        AccessLevel = other.AccessLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 16: {
            error_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.LoginError) input.ReadEnum();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 42: {
            SessionId = input.ReadString();
            break;
          }
          case 50: {
            AccessToken = input.ReadString();
            break;
          }
          case 56: {
            accessLevel_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.LoginResponse.Types.AccessLevel) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LoginError {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("INVALID_CREDENTIALS")] InvalidCredentials = 1,
        [pbr::OriginalName("VERSION_MISMATCH")] VersionMismatch = 2,
      }

      public enum AccessLevel {
        [pbr::OriginalName("VIEWER")] Viewer = 0,
        [pbr::OriginalName("DEALER")] Dealer = 1,
        [pbr::OriginalName("ADMIN")] Admin = 2,
      }

    }
    #endregion

  }

  public sealed partial class LogoutRequest : pb::IMessage<LogoutRequest> {
    private static readonly pb::MessageParser<LogoutRequest> _parser = new pb::MessageParser<LogoutRequest>(() => new LogoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest(LogoutRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest Clone() {
      return new LogoutRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LogoutResponse : pb::IMessage<LogoutResponse> {
    private static readonly pb::MessageParser<LogoutResponse> _parser = new pb::MessageParser<LogoutResponse>(() => new LogoutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse(LogoutResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      reason_ = other.reason_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse Clone() {
      return new LogoutResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 3;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (Reason != other.Reason) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (Reason != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Reason);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 16: {
            reason_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.LogoutResponse.Types.LogoutReason) input.ReadEnum();
            break;
          }
          case 26: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LogoutResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LogoutReason {
        [pbr::OriginalName("CLIENT_REQUEST")] ClientRequest = 0,
        [pbr::OriginalName("SERVER_LOGOUT")] ServerLogout = 1,
      }

    }
    #endregion

  }

  public sealed partial class HeartbeatRequest : pb::IMessage<HeartbeatRequest> {
    private static readonly pb::MessageParser<HeartbeatRequest> _parser = new pb::MessageParser<HeartbeatRequest>(() => new HeartbeatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartbeatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatRequest(HeartbeatRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatRequest Clone() {
      return new HeartbeatRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartbeatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartbeatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartbeatRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class HeartbeatResponse : pb::IMessage<HeartbeatResponse> {
    private static readonly pb::MessageParser<HeartbeatResponse> _parser = new pb::MessageParser<HeartbeatResponse>(() => new HeartbeatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartbeatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatResponse(HeartbeatResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartbeatResponse Clone() {
      return new HeartbeatResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartbeatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartbeatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartbeatResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SnapshotRequest : pb::IMessage<SnapshotRequest> {
    private static readonly pb::MessageParser<SnapshotRequest> _parser = new pb::MessageParser<SnapshotRequest>(() => new SnapshotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnapshotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotRequest(SnapshotRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotRequest Clone() {
      return new SnapshotRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnapshotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnapshotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnapshotRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SnapshotResponse : pb::IMessage<SnapshotResponse> {
    private static readonly pb::MessageParser<SnapshotResponse> _parser = new pb::MessageParser<SnapshotResponse>(() => new SnapshotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnapshotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotResponse(SnapshotResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      ApiMetadata = other.apiMetadata_ != null ? other.ApiMetadata.Clone() : null;
      MappingsInfo = other.mappingsInfo_ != null ? other.MappingsInfo.Clone() : null;
      SetupContext = other.setupContext_ != null ? other.SetupContext.Clone() : null;
      PackageList = other.packageList_ != null ? other.PackageList.Clone() : null;
      AccountList = other.accountList_ != null ? other.AccountList.Clone() : null;
      BotList = other.botList_ != null ? other.BotList.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotResponse Clone() {
      return new SnapshotResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "api_metadata" field.</summary>
    public const int ApiMetadataFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse apiMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse ApiMetadata {
      get { return apiMetadata_; }
      set {
        apiMetadata_ = value;
      }
    }

    /// <summary>Field number for the "mappings_info" field.</summary>
    public const int MappingsInfoFieldNumber = 3;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse mappingsInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse MappingsInfo {
      get { return mappingsInfo_; }
      set {
        mappingsInfo_ = value;
      }
    }

    /// <summary>Field number for the "setup_context" field.</summary>
    public const int SetupContextFieldNumber = 4;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse setupContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse SetupContext {
      get { return setupContext_; }
      set {
        setupContext_ = value;
      }
    }

    /// <summary>Field number for the "package_list" field.</summary>
    public const int PackageListFieldNumber = 5;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse packageList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse PackageList {
      get { return packageList_; }
      set {
        packageList_ = value;
      }
    }

    /// <summary>Field number for the "account_list" field.</summary>
    public const int AccountListFieldNumber = 6;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse accountList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse AccountList {
      get { return accountList_; }
      set {
        accountList_ = value;
      }
    }

    /// <summary>Field number for the "bot_list" field.</summary>
    public const int BotListFieldNumber = 7;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse botList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse BotList {
      get { return botList_; }
      set {
        botList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnapshotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnapshotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(ApiMetadata, other.ApiMetadata)) return false;
      if (!object.Equals(MappingsInfo, other.MappingsInfo)) return false;
      if (!object.Equals(SetupContext, other.SetupContext)) return false;
      if (!object.Equals(PackageList, other.PackageList)) return false;
      if (!object.Equals(AccountList, other.AccountList)) return false;
      if (!object.Equals(BotList, other.BotList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (apiMetadata_ != null) hash ^= ApiMetadata.GetHashCode();
      if (mappingsInfo_ != null) hash ^= MappingsInfo.GetHashCode();
      if (setupContext_ != null) hash ^= SetupContext.GetHashCode();
      if (packageList_ != null) hash ^= PackageList.GetHashCode();
      if (accountList_ != null) hash ^= AccountList.GetHashCode();
      if (botList_ != null) hash ^= BotList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (apiMetadata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApiMetadata);
      }
      if (mappingsInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MappingsInfo);
      }
      if (setupContext_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SetupContext);
      }
      if (packageList_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PackageList);
      }
      if (accountList_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AccountList);
      }
      if (botList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BotList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (apiMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApiMetadata);
      }
      if (mappingsInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MappingsInfo);
      }
      if (setupContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetupContext);
      }
      if (packageList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageList);
      }
      if (accountList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountList);
      }
      if (botList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BotList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnapshotResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.apiMetadata_ != null) {
        if (apiMetadata_ == null) {
          apiMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse();
        }
        ApiMetadata.MergeFrom(other.ApiMetadata);
      }
      if (other.mappingsInfo_ != null) {
        if (mappingsInfo_ == null) {
          mappingsInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse();
        }
        MappingsInfo.MergeFrom(other.MappingsInfo);
      }
      if (other.setupContext_ != null) {
        if (setupContext_ == null) {
          setupContext_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse();
        }
        SetupContext.MergeFrom(other.SetupContext);
      }
      if (other.packageList_ != null) {
        if (packageList_ == null) {
          packageList_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse();
        }
        PackageList.MergeFrom(other.PackageList);
      }
      if (other.accountList_ != null) {
        if (accountList_ == null) {
          accountList_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse();
        }
        AccountList.MergeFrom(other.AccountList);
      }
      if (other.botList_ != null) {
        if (botList_ == null) {
          botList_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse();
        }
        BotList.MergeFrom(other.BotList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (apiMetadata_ == null) {
              apiMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataResponse();
            }
            input.ReadMessage(apiMetadata_);
            break;
          }
          case 26: {
            if (mappingsInfo_ == null) {
              mappingsInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingsInfoResponse();
            }
            input.ReadMessage(mappingsInfo_);
            break;
          }
          case 34: {
            if (setupContext_ == null) {
              setupContext_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextResponse();
            }
            input.ReadMessage(setupContext_);
            break;
          }
          case 42: {
            if (packageList_ == null) {
              packageList_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageListResponse();
            }
            input.ReadMessage(packageList_);
            break;
          }
          case 50: {
            if (accountList_ == null) {
              accountList_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountListResponse();
            }
            input.ReadMessage(accountList_);
            break;
          }
          case 58: {
            if (botList_ == null) {
              botList_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotListResponse();
            }
            input.ReadMessage(botList_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeToUpdatesRequest : pb::IMessage<SubscribeToUpdatesRequest> {
    private static readonly pb::MessageParser<SubscribeToUpdatesRequest> _parser = new pb::MessageParser<SubscribeToUpdatesRequest>(() => new SubscribeToUpdatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeToUpdatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToUpdatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToUpdatesRequest(SubscribeToUpdatesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeToUpdatesRequest Clone() {
      return new SubscribeToUpdatesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeToUpdatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeToUpdatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeToUpdatesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UpdateInfo : pb::IMessage<UpdateInfo> {
    private static readonly pb::MessageParser<UpdateInfo> _parser = new pb::MessageParser<UpdateInfo>(() => new UpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo(UpdateInfo other) : this() {
      type_ = other.type_;
      switch (other.UpdateInfoCase) {
        case UpdateInfoOneofCase.Package:
          Package = other.Package.Clone();
          break;
        case UpdateInfoOneofCase.PackageState:
          PackageState = other.PackageState.Clone();
          break;
        case UpdateInfoOneofCase.Account:
          Account = other.Account.Clone();
          break;
        case UpdateInfoOneofCase.AccountState:
          AccountState = other.AccountState.Clone();
          break;
        case UpdateInfoOneofCase.Bot:
          Bot = other.Bot.Clone();
          break;
        case UpdateInfoOneofCase.BotState:
          BotState = other.BotState.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo Clone() {
      return new UpdateInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo Package {
      get { return updateInfoCase_ == UpdateInfoOneofCase.Package ? (global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.Package;
      }
    }

    /// <summary>Field number for the "package_state" field.</summary>
    public const int PackageStateFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageStateUpdateInfo PackageState {
      get { return updateInfoCase_ == UpdateInfoOneofCase.PackageState ? (global::TickTrader.Algo.Protocol.Grpc.Lib.PackageStateUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.PackageState;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo Account {
      get { return updateInfoCase_ == UpdateInfoOneofCase.Account ? (global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.Account;
      }
    }

    /// <summary>Field number for the "account_state" field.</summary>
    public const int AccountStateFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo AccountState {
      get { return updateInfoCase_ == UpdateInfoOneofCase.AccountState ? (global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.AccountState;
      }
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo Bot {
      get { return updateInfoCase_ == UpdateInfoOneofCase.Bot ? (global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.Bot;
      }
    }

    /// <summary>Field number for the "bot_state" field.</summary>
    public const int BotStateFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo BotState {
      get { return updateInfoCase_ == UpdateInfoOneofCase.BotState ? (global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo) updateInfo_ : null; }
      set {
        updateInfo_ = value;
        updateInfoCase_ = value == null ? UpdateInfoOneofCase.None : UpdateInfoOneofCase.BotState;
      }
    }

    private object updateInfo_;
    /// <summary>Enum of possible cases for the "update_info" oneof.</summary>
    public enum UpdateInfoOneofCase {
      None = 0,
      Package = 5,
      PackageState = 6,
      Account = 7,
      AccountState = 8,
      Bot = 9,
      BotState = 10,
    }
    private UpdateInfoOneofCase updateInfoCase_ = UpdateInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfoOneofCase UpdateInfoCase {
      get { return updateInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUpdateInfo() {
      updateInfoCase_ = UpdateInfoOneofCase.None;
      updateInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Package, other.Package)) return false;
      if (!object.Equals(PackageState, other.PackageState)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(AccountState, other.AccountState)) return false;
      if (!object.Equals(Bot, other.Bot)) return false;
      if (!object.Equals(BotState, other.BotState)) return false;
      if (UpdateInfoCase != other.UpdateInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.Package) hash ^= Package.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.PackageState) hash ^= PackageState.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.Account) hash ^= Account.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) hash ^= AccountState.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.Bot) hash ^= Bot.GetHashCode();
      if (updateInfoCase_ == UpdateInfoOneofCase.BotState) hash ^= BotState.GetHashCode();
      hash ^= (int) updateInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Package) {
        output.WriteRawTag(42);
        output.WriteMessage(Package);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.PackageState) {
        output.WriteRawTag(50);
        output.WriteMessage(PackageState);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Account) {
        output.WriteRawTag(58);
        output.WriteMessage(Account);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) {
        output.WriteRawTag(66);
        output.WriteMessage(AccountState);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Bot) {
        output.WriteRawTag(74);
        output.WriteMessage(Bot);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.BotState) {
        output.WriteRawTag(82);
        output.WriteMessage(BotState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Package) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.PackageState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageState);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Account) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountState);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.Bot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (updateInfoCase_ == UpdateInfoOneofCase.BotState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BotState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.UpdateInfoCase) {
        case UpdateInfoOneofCase.Package:
          if (Package == null) {
            Package = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo();
          }
          Package.MergeFrom(other.Package);
          break;
        case UpdateInfoOneofCase.PackageState:
          if (PackageState == null) {
            PackageState = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageStateUpdateInfo();
          }
          PackageState.MergeFrom(other.PackageState);
          break;
        case UpdateInfoOneofCase.Account:
          if (Account == null) {
            Account = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo();
          }
          Account.MergeFrom(other.Account);
          break;
        case UpdateInfoOneofCase.AccountState:
          if (AccountState == null) {
            AccountState = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo();
          }
          AccountState.MergeFrom(other.AccountState);
          break;
        case UpdateInfoOneofCase.Bot:
          if (Bot == null) {
            Bot = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo();
          }
          Bot.MergeFrom(other.Bot);
          break;
        case UpdateInfoOneofCase.BotState:
          if (BotState == null) {
            BotState = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo();
          }
          BotState.MergeFrom(other.BotState);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.UpdateInfo.Types.UpdateType) input.ReadEnum();
            break;
          }
          case 42: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.Package) {
              subBuilder.MergeFrom(Package);
            }
            input.ReadMessage(subBuilder);
            Package = subBuilder;
            break;
          }
          case 50: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.PackageStateUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageStateUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.PackageState) {
              subBuilder.MergeFrom(PackageState);
            }
            input.ReadMessage(subBuilder);
            PackageState = subBuilder;
            break;
          }
          case 58: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.Account) {
              subBuilder.MergeFrom(Account);
            }
            input.ReadMessage(subBuilder);
            Account = subBuilder;
            break;
          }
          case 66: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountStateUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.AccountState) {
              subBuilder.MergeFrom(AccountState);
            }
            input.ReadMessage(subBuilder);
            AccountState = subBuilder;
            break;
          }
          case 74: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.Bot) {
              subBuilder.MergeFrom(Bot);
            }
            input.ReadMessage(subBuilder);
            Bot = subBuilder;
            break;
          }
          case 82: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotStateUpdateInfo();
            if (updateInfoCase_ == UpdateInfoOneofCase.BotState) {
              subBuilder.MergeFrom(BotState);
            }
            input.ReadMessage(subBuilder);
            BotState = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UpdateType {
        [pbr::OriginalName("ADDED")] Added = 0,
        [pbr::OriginalName("REPLACED")] Replaced = 1,
        [pbr::OriginalName("REMOVED")] Removed = 2,
      }

    }
    #endregion

  }

  public sealed partial class PackageUpdateInfo : pb::IMessage<PackageUpdateInfo> {
    private static readonly pb::MessageParser<PackageUpdateInfo> _parser = new pb::MessageParser<PackageUpdateInfo>(() => new PackageUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageUpdateInfo(PackageUpdateInfo other) : this() {
      Package = other.package_ != null ? other.Package.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageUpdateInfo Clone() {
      return new PackageUpdateInfo(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (package_ != null) hash ^= Package.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (package_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Package);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo();
        }
        Package.MergeFrom(other.Package);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (package_ == null) {
              package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageStateUpdateInfo : pb::IMessage<PackageStateUpdateInfo> {
    private static readonly pb::MessageParser<PackageStateUpdateInfo> _parser = new pb::MessageParser<PackageStateUpdateInfo>(() => new PackageStateUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageStateUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageStateUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageStateUpdateInfo(PackageStateUpdateInfo other) : this() {
      Package = other.package_ != null ? other.Package.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageStateUpdateInfo Clone() {
      return new PackageStateUpdateInfo(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageStateUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageStateUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (package_ != null) hash ^= Package.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (package_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Package);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageStateUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo();
        }
        Package.MergeFrom(other.Package);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (package_ == null) {
              package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountUpdateInfo : pb::IMessage<AccountUpdateInfo> {
    private static readonly pb::MessageParser<AccountUpdateInfo> _parser = new pb::MessageParser<AccountUpdateInfo>(() => new AccountUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateInfo(AccountUpdateInfo other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateInfo Clone() {
      return new AccountUpdateInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountStateUpdateInfo : pb::IMessage<AccountStateUpdateInfo> {
    private static readonly pb::MessageParser<AccountStateUpdateInfo> _parser = new pb::MessageParser<AccountStateUpdateInfo>(() => new AccountStateUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountStateUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateUpdateInfo(AccountStateUpdateInfo other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateUpdateInfo Clone() {
      return new AccountStateUpdateInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountStateUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountStateUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountStateUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotUpdateInfo : pb::IMessage<BotUpdateInfo> {
    private static readonly pb::MessageParser<BotUpdateInfo> _parser = new pb::MessageParser<BotUpdateInfo>(() => new BotUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotUpdateInfo(BotUpdateInfo other) : this() {
      Bot = other.bot_ != null ? other.Bot.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotUpdateInfo Clone() {
      return new BotUpdateInfo(this);
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo bot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo Bot {
      get { return bot_; }
      set {
        bot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bot, other.Bot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bot_ != null) hash ^= Bot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.bot_ != null) {
        if (bot_ == null) {
          bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
        }
        Bot.MergeFrom(other.Bot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bot_ == null) {
              bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
            }
            input.ReadMessage(bot_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotStateUpdateInfo : pb::IMessage<BotStateUpdateInfo> {
    private static readonly pb::MessageParser<BotStateUpdateInfo> _parser = new pb::MessageParser<BotStateUpdateInfo>(() => new BotStateUpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotStateUpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStateUpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStateUpdateInfo(BotStateUpdateInfo other) : this() {
      Bot = other.bot_ != null ? other.Bot.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStateUpdateInfo Clone() {
      return new BotStateUpdateInfo(this);
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo bot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo Bot {
      get { return bot_; }
      set {
        bot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotStateUpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotStateUpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bot, other.Bot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bot_ != null) hash ^= Bot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotStateUpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.bot_ != null) {
        if (bot_ == null) {
          bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
        }
        Bot.MergeFrom(other.Bot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bot_ == null) {
              bot_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo();
            }
            input.ReadMessage(bot_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApiMetadataRequest : pb::IMessage<ApiMetadataRequest> {
    private static readonly pb::MessageParser<ApiMetadataRequest> _parser = new pb::MessageParser<ApiMetadataRequest>(() => new ApiMetadataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiMetadataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataRequest(ApiMetadataRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataRequest Clone() {
      return new ApiMetadataRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiMetadataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiMetadataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiMetadataRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ApiMetadataResponse : pb::IMessage<ApiMetadataResponse> {
    private static readonly pb::MessageParser<ApiMetadataResponse> _parser = new pb::MessageParser<ApiMetadataResponse>(() => new ApiMetadataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiMetadataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataResponse(ApiMetadataResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      ApiMetadata = other.apiMetadata_ != null ? other.ApiMetadata.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataResponse Clone() {
      return new ApiMetadataResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "api_metadata" field.</summary>
    public const int ApiMetadataFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo apiMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo ApiMetadata {
      get { return apiMetadata_; }
      set {
        apiMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiMetadataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiMetadataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(ApiMetadata, other.ApiMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (apiMetadata_ != null) hash ^= ApiMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (apiMetadata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApiMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (apiMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApiMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiMetadataResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.apiMetadata_ != null) {
        if (apiMetadata_ == null) {
          apiMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo();
        }
        ApiMetadata.MergeFrom(other.ApiMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (apiMetadata_ == null) {
              apiMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo();
            }
            input.ReadMessage(apiMetadata_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MappingsInfoRequest : pb::IMessage<MappingsInfoRequest> {
    private static readonly pb::MessageParser<MappingsInfoRequest> _parser = new pb::MessageParser<MappingsInfoRequest>(() => new MappingsInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingsInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoRequest(MappingsInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoRequest Clone() {
      return new MappingsInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingsInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingsInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingsInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class MappingsInfoResponse : pb::IMessage<MappingsInfoResponse> {
    private static readonly pb::MessageParser<MappingsInfoResponse> _parser = new pb::MessageParser<MappingsInfoResponse>(() => new MappingsInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingsInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoResponse(MappingsInfoResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      Mappings = other.mappings_ != null ? other.Mappings.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingsInfoResponse Clone() {
      return new MappingsInfoResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "mappings" field.</summary>
    public const int MappingsFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo mappings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo Mappings {
      get { return mappings_; }
      set {
        mappings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingsInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingsInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(Mappings, other.Mappings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (mappings_ != null) hash ^= Mappings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (mappings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mappings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (mappings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mappings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingsInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.mappings_ != null) {
        if (mappings_ == null) {
          mappings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo();
        }
        Mappings.MergeFrom(other.Mappings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (mappings_ == null) {
              mappings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo();
            }
            input.ReadMessage(mappings_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetupContextRequest : pb::IMessage<SetupContextRequest> {
    private static readonly pb::MessageParser<SetupContextRequest> _parser = new pb::MessageParser<SetupContextRequest>(() => new SetupContextRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetupContextRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextRequest(SetupContextRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextRequest Clone() {
      return new SetupContextRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetupContextRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetupContextRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetupContextRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SetupContextResponse : pb::IMessage<SetupContextResponse> {
    private static readonly pb::MessageParser<SetupContextResponse> _parser = new pb::MessageParser<SetupContextResponse>(() => new SetupContextResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetupContextResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextResponse(SetupContextResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      SetupContext = other.setupContext_ != null ? other.SetupContext.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextResponse Clone() {
      return new SetupContextResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "setup_context" field.</summary>
    public const int SetupContextFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo setupContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo SetupContext {
      get { return setupContext_; }
      set {
        setupContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetupContextResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetupContextResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(SetupContext, other.SetupContext)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (setupContext_ != null) hash ^= SetupContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (setupContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SetupContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (setupContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetupContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetupContextResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.setupContext_ != null) {
        if (setupContext_ == null) {
          setupContext_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo();
        }
        SetupContext.MergeFrom(other.SetupContext);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (setupContext_ == null) {
              setupContext_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo();
            }
            input.ReadMessage(setupContext_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountMetadataRequest : pb::IMessage<AccountMetadataRequest> {
    private static readonly pb::MessageParser<AccountMetadataRequest> _parser = new pb::MessageParser<AccountMetadataRequest>(() => new AccountMetadataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountMetadataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataRequest(AccountMetadataRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataRequest Clone() {
      return new AccountMetadataRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountMetadataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountMetadataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountMetadataRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountMetadataResponse : pb::IMessage<AccountMetadataResponse> {
    private static readonly pb::MessageParser<AccountMetadataResponse> _parser = new pb::MessageParser<AccountMetadataResponse>(() => new AccountMetadataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountMetadataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataResponse(AccountMetadataResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      ErrorInfo = other.errorInfo_ != null ? other.ErrorInfo.Clone() : null;
      AccountMetadata = other.accountMetadata_ != null ? other.AccountMetadata.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataResponse Clone() {
      return new AccountMetadataResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    /// <summary>Field number for the "account_metadata" field.</summary>
    public const int AccountMetadataFieldNumber = 3;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo accountMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo AccountMetadata {
      get { return accountMetadata_; }
      set {
        accountMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountMetadataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountMetadataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      if (!object.Equals(AccountMetadata, other.AccountMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (accountMetadata_ != null) hash ^= AccountMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (errorInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrorInfo);
      }
      if (accountMetadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AccountMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (accountMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountMetadataResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      if (other.accountMetadata_ != null) {
        if (accountMetadata_ == null) {
          accountMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo();
        }
        AccountMetadata.MergeFrom(other.AccountMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (errorInfo_ == null) {
              errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
            }
            input.ReadMessage(errorInfo_);
            break;
          }
          case 26: {
            if (accountMetadata_ == null) {
              accountMetadata_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo();
            }
            input.ReadMessage(accountMetadata_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotListRequest : pb::IMessage<BotListRequest> {
    private static readonly pb::MessageParser<BotListRequest> _parser = new pb::MessageParser<BotListRequest>(() => new BotListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListRequest(BotListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListRequest Clone() {
      return new BotListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BotListResponse : pb::IMessage<BotListResponse> {
    private static readonly pb::MessageParser<BotListResponse> _parser = new pb::MessageParser<BotListResponse>(() => new BotListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListResponse(BotListResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      bots_ = other.bots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotListResponse Clone() {
      return new BotListResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "bots" field.</summary>
    public const int BotsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo> _repeated_bots_codec
        = pb::FieldCodec.ForMessage(18, global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo> bots_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.BotModelInfo> Bots {
      get { return bots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if(!bots_.Equals(other.bots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      hash ^= bots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      bots_.WriteTo(output, _repeated_bots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      size += bots_.CalculateSize(_repeated_bots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotListResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      bots_.Add(other.bots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            bots_.AddEntriesFrom(input, _repeated_bots_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddBotRequest : pb::IMessage<AddBotRequest> {
    private static readonly pb::MessageParser<AddBotRequest> _parser = new pb::MessageParser<AddBotRequest>(() => new AddBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotRequest(AddBotRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      Config = other.config_ != null ? other.Config.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotRequest Clone() {
      return new AddBotRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          config_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            if (config_ == null) {
              config_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
            }
            input.ReadMessage(config_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddBotResponse : pb::IMessage<AddBotResponse> {
    private static readonly pb::MessageParser<AddBotResponse> _parser = new pb::MessageParser<AddBotResponse>(() => new AddBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotResponse(AddBotResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBotResponse Clone() {
      return new AddBotResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveBotRequest : pb::IMessage<RemoveBotRequest> {
    private static readonly pb::MessageParser<RemoveBotRequest> _parser = new pb::MessageParser<RemoveBotRequest>(() => new RemoveBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotRequest(RemoveBotRequest other) : this() {
      botId_ = other.botId_;
      cleanLog_ = other.cleanLog_;
      cleanAlgoData_ = other.cleanAlgoData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotRequest Clone() {
      return new RemoveBotRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clean_log" field.</summary>
    public const int CleanLogFieldNumber = 2;
    private bool cleanLog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CleanLog {
      get { return cleanLog_; }
      set {
        cleanLog_ = value;
      }
    }

    /// <summary>Field number for the "clean_algo_data" field.</summary>
    public const int CleanAlgoDataFieldNumber = 3;
    private bool cleanAlgoData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CleanAlgoData {
      get { return cleanAlgoData_; }
      set {
        cleanAlgoData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (CleanLog != other.CleanLog) return false;
      if (CleanAlgoData != other.CleanAlgoData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (CleanLog != false) hash ^= CleanLog.GetHashCode();
      if (CleanAlgoData != false) hash ^= CleanAlgoData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (CleanLog != false) {
        output.WriteRawTag(16);
        output.WriteBool(CleanLog);
      }
      if (CleanAlgoData != false) {
        output.WriteRawTag(24);
        output.WriteBool(CleanAlgoData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (CleanLog != false) {
        size += 1 + 1;
      }
      if (CleanAlgoData != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.CleanLog != false) {
        CleanLog = other.CleanLog;
      }
      if (other.CleanAlgoData != false) {
        CleanAlgoData = other.CleanAlgoData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 16: {
            CleanLog = input.ReadBool();
            break;
          }
          case 24: {
            CleanAlgoData = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveBotResponse : pb::IMessage<RemoveBotResponse> {
    private static readonly pb::MessageParser<RemoveBotResponse> _parser = new pb::MessageParser<RemoveBotResponse>(() => new RemoveBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotResponse(RemoveBotResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBotResponse Clone() {
      return new RemoveBotResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartBotRequest : pb::IMessage<StartBotRequest> {
    private static readonly pb::MessageParser<StartBotRequest> _parser = new pb::MessageParser<StartBotRequest>(() => new StartBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotRequest(StartBotRequest other) : this() {
      botId_ = other.botId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotRequest Clone() {
      return new StartBotRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartBotResponse : pb::IMessage<StartBotResponse> {
    private static readonly pb::MessageParser<StartBotResponse> _parser = new pb::MessageParser<StartBotResponse>(() => new StartBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotResponse(StartBotResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBotResponse Clone() {
      return new StartBotResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopBotRequest : pb::IMessage<StopBotRequest> {
    private static readonly pb::MessageParser<StopBotRequest> _parser = new pb::MessageParser<StopBotRequest>(() => new StopBotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopBotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotRequest(StopBotRequest other) : this() {
      botId_ = other.botId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotRequest Clone() {
      return new StopBotRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopBotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopBotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopBotRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopBotResponse : pb::IMessage<StopBotResponse> {
    private static readonly pb::MessageParser<StopBotResponse> _parser = new pb::MessageParser<StopBotResponse>(() => new StopBotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopBotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotResponse(StopBotResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopBotResponse Clone() {
      return new StopBotResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopBotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopBotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopBotResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeBotConfigRequest : pb::IMessage<ChangeBotConfigRequest> {
    private static readonly pb::MessageParser<ChangeBotConfigRequest> _parser = new pb::MessageParser<ChangeBotConfigRequest>(() => new ChangeBotConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeBotConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigRequest(ChangeBotConfigRequest other) : this() {
      botId_ = other.botId_;
      NewConfig = other.newConfig_ != null ? other.NewConfig.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigRequest Clone() {
      return new ChangeBotConfigRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_config" field.</summary>
    public const int NewConfigFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig newConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig NewConfig {
      get { return newConfig_; }
      set {
        newConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeBotConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeBotConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (!object.Equals(NewConfig, other.NewConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (newConfig_ != null) hash ^= NewConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (newConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (newConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeBotConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.newConfig_ != null) {
        if (newConfig_ == null) {
          newConfig_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
        }
        NewConfig.MergeFrom(other.NewConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 18: {
            if (newConfig_ == null) {
              newConfig_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginConfig();
            }
            input.ReadMessage(newConfig_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeBotConfigResponse : pb::IMessage<ChangeBotConfigResponse> {
    private static readonly pb::MessageParser<ChangeBotConfigResponse> _parser = new pb::MessageParser<ChangeBotConfigResponse>(() => new ChangeBotConfigResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeBotConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigResponse(ChangeBotConfigResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeBotConfigResponse Clone() {
      return new ChangeBotConfigResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeBotConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeBotConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeBotConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountListRequest : pb::IMessage<AccountListRequest> {
    private static readonly pb::MessageParser<AccountListRequest> _parser = new pb::MessageParser<AccountListRequest>(() => new AccountListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListRequest(AccountListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListRequest Clone() {
      return new AccountListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AccountListResponse : pb::IMessage<AccountListResponse> {
    private static readonly pb::MessageParser<AccountListResponse> _parser = new pb::MessageParser<AccountListResponse>(() => new AccountListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListResponse(AccountListResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      accounts_ = other.accounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountListResponse Clone() {
      return new AccountListResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(18, global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo> accounts_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.AccountModelInfo> Accounts {
      get { return accounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if(!accounts_.Equals(other.accounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      hash ^= accounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountListResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      accounts_.Add(other.accounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountRequest : pb::IMessage<AddAccountRequest> {
    private static readonly pb::MessageParser<AddAccountRequest> _parser = new pb::MessageParser<AddAccountRequest>(() => new AddAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest(AddAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      password_ = other.password_;
      useNewProtocol_ = other.useNewProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest Clone() {
      return new AddAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_new_protocol" field.</summary>
    public const int UseNewProtocolFieldNumber = 3;
    private bool useNewProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseNewProtocol {
      get { return useNewProtocol_; }
      set {
        useNewProtocol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Password != other.Password) return false;
      if (UseNewProtocol != other.UseNewProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (UseNewProtocol != false) hash ^= UseNewProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (UseNewProtocol != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseNewProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (UseNewProtocol != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.UseNewProtocol != false) {
        UseNewProtocol = other.UseNewProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            UseNewProtocol = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountResponse : pb::IMessage<AddAccountResponse> {
    private static readonly pb::MessageParser<AddAccountResponse> _parser = new pb::MessageParser<AddAccountResponse>(() => new AddAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse(AddAccountResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse Clone() {
      return new AddAccountResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAccountRequest : pb::IMessage<RemoveAccountRequest> {
    private static readonly pb::MessageParser<RemoveAccountRequest> _parser = new pb::MessageParser<RemoveAccountRequest>(() => new RemoveAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountRequest(RemoveAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountRequest Clone() {
      return new RemoveAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAccountResponse : pb::IMessage<RemoveAccountResponse> {
    private static readonly pb::MessageParser<RemoveAccountResponse> _parser = new pb::MessageParser<RemoveAccountResponse>(() => new RemoveAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountResponse(RemoveAccountResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountResponse Clone() {
      return new RemoveAccountResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeAccountRequest : pb::IMessage<ChangeAccountRequest> {
    private static readonly pb::MessageParser<ChangeAccountRequest> _parser = new pb::MessageParser<ChangeAccountRequest>(() => new ChangeAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountRequest(ChangeAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      password_ = other.password_;
      useNewProtocol_ = other.useNewProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountRequest Clone() {
      return new ChangeAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_new_protocol" field.</summary>
    public const int UseNewProtocolFieldNumber = 3;
    private bool useNewProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseNewProtocol {
      get { return useNewProtocol_; }
      set {
        useNewProtocol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Password != other.Password) return false;
      if (UseNewProtocol != other.UseNewProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (UseNewProtocol != false) hash ^= UseNewProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (UseNewProtocol != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseNewProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (UseNewProtocol != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.UseNewProtocol != false) {
        UseNewProtocol = other.UseNewProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            UseNewProtocol = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeAccountResponse : pb::IMessage<ChangeAccountResponse> {
    private static readonly pb::MessageParser<ChangeAccountResponse> _parser = new pb::MessageParser<ChangeAccountResponse>(() => new ChangeAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountResponse(ChangeAccountResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeAccountResponse Clone() {
      return new ChangeAccountResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountRequest : pb::IMessage<TestAccountRequest> {
    private static readonly pb::MessageParser<TestAccountRequest> _parser = new pb::MessageParser<TestAccountRequest>(() => new TestAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountRequest(TestAccountRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountRequest Clone() {
      return new TestAccountRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountResponse : pb::IMessage<TestAccountResponse> {
    private static readonly pb::MessageParser<TestAccountResponse> _parser = new pb::MessageParser<TestAccountResponse>(() => new TestAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountResponse(TestAccountResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      ErrorInfo = other.errorInfo_ != null ? other.ErrorInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountResponse Clone() {
      return new TestAccountResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (errorInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (errorInfo_ == null) {
              errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
            }
            input.ReadMessage(errorInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountCredsRequest : pb::IMessage<TestAccountCredsRequest> {
    private static readonly pb::MessageParser<TestAccountCredsRequest> _parser = new pb::MessageParser<TestAccountCredsRequest>(() => new TestAccountCredsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountCredsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsRequest(TestAccountCredsRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      password_ = other.password_;
      useNewProtocol_ = other.useNewProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsRequest Clone() {
      return new TestAccountCredsRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_new_protocol" field.</summary>
    public const int UseNewProtocolFieldNumber = 3;
    private bool useNewProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseNewProtocol {
      get { return useNewProtocol_; }
      set {
        useNewProtocol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountCredsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountCredsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Password != other.Password) return false;
      if (UseNewProtocol != other.UseNewProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (UseNewProtocol != false) hash ^= UseNewProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (UseNewProtocol != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseNewProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (UseNewProtocol != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountCredsRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.UseNewProtocol != false) {
        UseNewProtocol = other.UseNewProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            UseNewProtocol = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestAccountCredsResponse : pb::IMessage<TestAccountCredsResponse> {
    private static readonly pb::MessageParser<TestAccountCredsResponse> _parser = new pb::MessageParser<TestAccountCredsResponse>(() => new TestAccountCredsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestAccountCredsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsResponse(TestAccountCredsResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      ErrorInfo = other.errorInfo_ != null ? other.ErrorInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestAccountCredsResponse Clone() {
      return new TestAccountCredsResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "error_info" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo errorInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestAccountCredsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestAccountCredsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(ErrorInfo, other.ErrorInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (errorInfo_ != null) hash ^= ErrorInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (errorInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrorInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (errorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestAccountCredsResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.errorInfo_ != null) {
        if (errorInfo_ == null) {
          errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
        }
        ErrorInfo.MergeFrom(other.ErrorInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (errorInfo_ == null) {
              errorInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ConnectionErrorInfo();
            }
            input.ReadMessage(errorInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageListRequest : pb::IMessage<PackageListRequest> {
    private static readonly pb::MessageParser<PackageListRequest> _parser = new pb::MessageParser<PackageListRequest>(() => new PackageListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListRequest(PackageListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListRequest Clone() {
      return new PackageListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PackageListResponse : pb::IMessage<PackageListResponse> {
    private static readonly pb::MessageParser<PackageListResponse> _parser = new pb::MessageParser<PackageListResponse>(() => new PackageListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListResponse(PackageListResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      packages_ = other.packages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageListResponse Clone() {
      return new PackageListResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "packages" field.</summary>
    public const int PackagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo> _repeated_packages_codec
        = pb::FieldCodec.ForMessage(18, global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo> packages_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo> Packages {
      get { return packages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if(!packages_.Equals(other.packages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      hash ^= packages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      packages_.WriteTo(output, _repeated_packages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      size += packages_.CalculateSize(_repeated_packages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageListResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      packages_.Add(other.packages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            packages_.AddEntriesFrom(input, _repeated_packages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileChunkSettings : pb::IMessage<FileChunkSettings> {
    private static readonly pb::MessageParser<FileChunkSettings> _parser = new pb::MessageParser<FileChunkSettings>(() => new FileChunkSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileChunkSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChunkSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChunkSettings(FileChunkSettings other) : this() {
      size_ = other.size_;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChunkSettings Clone() {
      return new FileChunkSettings(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileChunkSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileChunkSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Size != other.Size) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Size != 0) hash ^= Size.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Size != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Size);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileChunkSettings other) {
      if (other == null) {
        return;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Size = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileChunk : pb::IMessage<FileChunk> {
    private static readonly pb::MessageParser<FileChunk> _parser = new pb::MessageParser<FileChunk>(() => new FileChunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChunk(FileChunk other) : this() {
      id_ = other.id_;
      binary_ = other.binary_;
      isFinal_ = other.isFinal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChunk Clone() {
      return new FileChunk(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "binary" field.</summary>
    public const int BinaryFieldNumber = 2;
    private pb::ByteString binary_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Binary {
      get { return binary_; }
      set {
        binary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_final" field.</summary>
    public const int IsFinalFieldNumber = 3;
    private bool isFinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFinal {
      get { return isFinal_; }
      set {
        isFinal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Binary != other.Binary) return false;
      if (IsFinal != other.IsFinal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Binary.Length != 0) hash ^= Binary.GetHashCode();
      if (IsFinal != false) hash ^= IsFinal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Binary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Binary);
      }
      if (IsFinal != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsFinal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Binary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Binary);
      }
      if (IsFinal != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileChunk other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Binary.Length != 0) {
        Binary = other.Binary;
      }
      if (other.IsFinal != false) {
        IsFinal = other.IsFinal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Binary = input.ReadBytes();
            break;
          }
          case 24: {
            IsFinal = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageDetails : pb::IMessage<PackageDetails> {
    private static readonly pb::MessageParser<PackageDetails> _parser = new pb::MessageParser<PackageDetails>(() => new PackageDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageDetails(PackageDetails other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      ChunkSettings = other.chunkSettings_ != null ? other.ChunkSettings.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageDetails Clone() {
      return new PackageDetails(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "chunk_settings" field.</summary>
    public const int ChunkSettingsFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings chunkSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings ChunkSettings {
      get { return chunkSettings_; }
      set {
        chunkSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(ChunkSettings, other.ChunkSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (chunkSettings_ != null) hash ^= ChunkSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (chunkSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ChunkSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (chunkSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChunkSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageDetails other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.chunkSettings_ != null) {
        if (chunkSettings_ == null) {
          chunkSettings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings();
        }
        ChunkSettings.MergeFrom(other.ChunkSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            if (chunkSettings_ == null) {
              chunkSettings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings();
            }
            input.ReadMessage(chunkSettings_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadPackageRequest : pb::IMessage<UploadPackageRequest> {
    private static readonly pb::MessageParser<UploadPackageRequest> _parser = new pb::MessageParser<UploadPackageRequest>(() => new UploadPackageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageRequest(UploadPackageRequest other) : this() {
      switch (other.ValueCase) {
        case ValueOneofCase.Package:
          Package = other.Package.Clone();
          break;
        case ValueOneofCase.Chunk:
          Chunk = other.Chunk.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageRequest Clone() {
      return new UploadPackageRequest(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails Package {
      get { return valueCase_ == ValueOneofCase.Package ? (global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Package;
      }
    }

    /// <summary>Field number for the "chunk" field.</summary>
    public const int ChunkFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk Chunk {
      get { return valueCase_ == ValueOneofCase.Chunk ? (global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Chunk;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      Package = 10,
      Chunk = 11,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      if (!object.Equals(Chunk, other.Chunk)) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.Package) hash ^= Package.GetHashCode();
      if (valueCase_ == ValueOneofCase.Chunk) hash ^= Chunk.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (valueCase_ == ValueOneofCase.Package) {
        output.WriteRawTag(82);
        output.WriteMessage(Package);
      }
      if (valueCase_ == ValueOneofCase.Chunk) {
        output.WriteRawTag(90);
        output.WriteMessage(Chunk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.Package) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (valueCase_ == ValueOneofCase.Chunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chunk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPackageRequest other) {
      if (other == null) {
        return;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.Package:
          if (Package == null) {
            Package = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails();
          }
          Package.MergeFrom(other.Package);
          break;
        case ValueOneofCase.Chunk:
          if (Chunk == null) {
            Chunk = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
          }
          Chunk.MergeFrom(other.Chunk);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails();
            if (valueCase_ == ValueOneofCase.Package) {
              subBuilder.MergeFrom(Package);
            }
            input.ReadMessage(subBuilder);
            Package = subBuilder;
            break;
          }
          case 90: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
            if (valueCase_ == ValueOneofCase.Chunk) {
              subBuilder.MergeFrom(Chunk);
            }
            input.ReadMessage(subBuilder);
            Chunk = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadPackageResponse : pb::IMessage<UploadPackageResponse> {
    private static readonly pb::MessageParser<UploadPackageResponse> _parser = new pb::MessageParser<UploadPackageResponse>(() => new UploadPackageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPackageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageResponse(UploadPackageResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPackageResponse Clone() {
      return new UploadPackageResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPackageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPackageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPackageResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemovePackageRequest : pb::IMessage<RemovePackageRequest> {
    private static readonly pb::MessageParser<RemovePackageRequest> _parser = new pb::MessageParser<RemovePackageRequest>(() => new RemovePackageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageRequest(RemovePackageRequest other) : this() {
      Package = other.package_ != null ? other.Package.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageRequest Clone() {
      return new RemovePackageRequest(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (package_ != null) hash ^= Package.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (package_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Package);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePackageRequest other) {
      if (other == null) {
        return;
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
        }
        Package.MergeFrom(other.Package);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (package_ == null) {
              package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemovePackageResponse : pb::IMessage<RemovePackageResponse> {
    private static readonly pb::MessageParser<RemovePackageResponse> _parser = new pb::MessageParser<RemovePackageResponse>(() => new RemovePackageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePackageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageResponse(RemovePackageResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePackageResponse Clone() {
      return new RemovePackageResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePackageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePackageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePackageResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadPackageRequest : pb::IMessage<DownloadPackageRequest> {
    private static readonly pb::MessageParser<DownloadPackageRequest> _parser = new pb::MessageParser<DownloadPackageRequest>(() => new DownloadPackageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadPackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageRequest(DownloadPackageRequest other) : this() {
      Package = other.package_ != null ? other.Package.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageRequest Clone() {
      return new DownloadPackageRequest(this);
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadPackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadPackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Package, other.Package)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (package_ != null) hash ^= Package.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (package_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Package);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadPackageRequest other) {
      if (other == null) {
        return;
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails();
        }
        Package.MergeFrom(other.Package);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (package_ == null) {
              package_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageDetails();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadPackageResponse : pb::IMessage<DownloadPackageResponse> {
    private static readonly pb::MessageParser<DownloadPackageResponse> _parser = new pb::MessageParser<DownloadPackageResponse>(() => new DownloadPackageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadPackageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageResponse(DownloadPackageResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      Chunk = other.chunk_ != null ? other.Chunk.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPackageResponse Clone() {
      return new DownloadPackageResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "chunk" field.</summary>
    public const int ChunkFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk chunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk Chunk {
      get { return chunk_; }
      set {
        chunk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadPackageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadPackageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(Chunk, other.Chunk)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (chunk_ != null) hash ^= Chunk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (chunk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Chunk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (chunk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chunk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadPackageResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.chunk_ != null) {
        if (chunk_ == null) {
          chunk_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
        }
        Chunk.MergeFrom(other.Chunk);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (chunk_ == null) {
              chunk_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
            }
            input.ReadMessage(chunk_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotStatusRequest : pb::IMessage<BotStatusRequest> {
    private static readonly pb::MessageParser<BotStatusRequest> _parser = new pb::MessageParser<BotStatusRequest>(() => new BotStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStatusRequest(BotStatusRequest other) : this() {
      botId_ = other.botId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStatusRequest Clone() {
      return new BotStatusRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotStatusResponse : pb::IMessage<BotStatusResponse> {
    private static readonly pb::MessageParser<BotStatusResponse> _parser = new pb::MessageParser<BotStatusResponse>(() => new BotStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStatusResponse(BotStatusResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      botId_ = other.botId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotStatusResponse Clone() {
      return new BotStatusResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 2;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (BotId != other.BotId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (BotId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BotId);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            BotId = input.ReadString();
            break;
          }
          case 26: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotLogsRequest : pb::IMessage<BotLogsRequest> {
    private static readonly pb::MessageParser<BotLogsRequest> _parser = new pb::MessageParser<BotLogsRequest>(() => new BotLogsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotLogsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotLogsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotLogsRequest(BotLogsRequest other) : this() {
      botId_ = other.botId_;
      LastLogTimeUtc = other.lastLogTimeUtc_ != null ? other.LastLogTimeUtc.Clone() : null;
      maxCount_ = other.maxCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotLogsRequest Clone() {
      return new BotLogsRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_log_time_utc" field.</summary>
    public const int LastLogTimeUtcFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastLogTimeUtc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastLogTimeUtc {
      get { return lastLogTimeUtc_; }
      set {
        lastLogTimeUtc_ = value;
      }
    }

    /// <summary>Field number for the "max_count" field.</summary>
    public const int MaxCountFieldNumber = 3;
    private int maxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotLogsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotLogsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (!object.Equals(LastLogTimeUtc, other.LastLogTimeUtc)) return false;
      if (MaxCount != other.MaxCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (lastLogTimeUtc_ != null) hash ^= LastLogTimeUtc.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (lastLogTimeUtc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastLogTimeUtc);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (lastLogTimeUtc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastLogTimeUtc);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotLogsRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.lastLogTimeUtc_ != null) {
        if (lastLogTimeUtc_ == null) {
          lastLogTimeUtc_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastLogTimeUtc.MergeFrom(other.LastLogTimeUtc);
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 18: {
            if (lastLogTimeUtc_ == null) {
              lastLogTimeUtc_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(lastLogTimeUtc_);
            break;
          }
          case 24: {
            MaxCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotLogsResponse : pb::IMessage<BotLogsResponse> {
    private static readonly pb::MessageParser<BotLogsResponse> _parser = new pb::MessageParser<BotLogsResponse>(() => new BotLogsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotLogsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotLogsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotLogsResponse(BotLogsResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      botId_ = other.botId_;
      logs_ = other.logs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotLogsResponse Clone() {
      return new BotLogsResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 2;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.LogRecordInfo> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(26, global::TickTrader.Algo.Protocol.Grpc.Lib.LogRecordInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.LogRecordInfo> logs_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.LogRecordInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.LogRecordInfo> Logs {
      get { return logs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotLogsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotLogsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (BotId != other.BotId) return false;
      if(!logs_.Equals(other.logs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      hash ^= logs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (BotId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BotId);
      }
      logs_.WriteTo(output, _repeated_logs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotLogsResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      logs_.Add(other.logs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            BotId = input.ReadString();
            break;
          }
          case 26: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotFolderInfoRequest : pb::IMessage<BotFolderInfoRequest> {
    private static readonly pb::MessageParser<BotFolderInfoRequest> _parser = new pb::MessageParser<BotFolderInfoRequest>(() => new BotFolderInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotFolderInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFolderInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFolderInfoRequest(BotFolderInfoRequest other) : this() {
      botId_ = other.botId_;
      folderId_ = other.folderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFolderInfoRequest Clone() {
      return new BotFolderInfoRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId folderId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId FolderId {
      get { return folderId_; }
      set {
        folderId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotFolderInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotFolderInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (FolderId != other.FolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (FolderId != 0) hash ^= FolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (FolderId != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (FolderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotFolderInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.FolderId != 0) {
        FolderId = other.FolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 16: {
            folderId_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotFolderInfoResponse : pb::IMessage<BotFolderInfoResponse> {
    private static readonly pb::MessageParser<BotFolderInfoResponse> _parser = new pb::MessageParser<BotFolderInfoResponse>(() => new BotFolderInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotFolderInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFolderInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFolderInfoResponse(BotFolderInfoResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      FolderInfo = other.folderInfo_ != null ? other.FolderInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFolderInfoResponse Clone() {
      return new BotFolderInfoResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "folder_info" field.</summary>
    public const int FolderInfoFieldNumber = 3;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo folderInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo FolderInfo {
      get { return folderInfo_; }
      set {
        folderInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotFolderInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotFolderInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(FolderInfo, other.FolderInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (folderInfo_ != null) hash ^= FolderInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (folderInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FolderInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (folderInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FolderInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotFolderInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.folderInfo_ != null) {
        if (folderInfo_ == null) {
          folderInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo();
        }
        FolderInfo.MergeFrom(other.FolderInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 26: {
            if (folderInfo_ == null) {
              folderInfo_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo();
            }
            input.ReadMessage(folderInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClearBotFolderRequest : pb::IMessage<ClearBotFolderRequest> {
    private static readonly pb::MessageParser<ClearBotFolderRequest> _parser = new pb::MessageParser<ClearBotFolderRequest>(() => new ClearBotFolderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearBotFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearBotFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearBotFolderRequest(ClearBotFolderRequest other) : this() {
      botId_ = other.botId_;
      folderId_ = other.folderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearBotFolderRequest Clone() {
      return new ClearBotFolderRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId folderId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId FolderId {
      get { return folderId_; }
      set {
        folderId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearBotFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearBotFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (FolderId != other.FolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (FolderId != 0) hash ^= FolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (FolderId != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (FolderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearBotFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.FolderId != 0) {
        FolderId = other.FolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 16: {
            folderId_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClearBotFolderResponse : pb::IMessage<ClearBotFolderResponse> {
    private static readonly pb::MessageParser<ClearBotFolderResponse> _parser = new pb::MessageParser<ClearBotFolderResponse>(() => new ClearBotFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearBotFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearBotFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearBotFolderResponse(ClearBotFolderResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearBotFolderResponse Clone() {
      return new ClearBotFolderResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearBotFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearBotFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearBotFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteBotFileRequest : pb::IMessage<DeleteBotFileRequest> {
    private static readonly pb::MessageParser<DeleteBotFileRequest> _parser = new pb::MessageParser<DeleteBotFileRequest>(() => new DeleteBotFileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteBotFileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBotFileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBotFileRequest(DeleteBotFileRequest other) : this() {
      botId_ = other.botId_;
      folderId_ = other.folderId_;
      fileName_ = other.fileName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBotFileRequest Clone() {
      return new DeleteBotFileRequest(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId folderId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId FolderId {
      get { return folderId_; }
      set {
        folderId_ = value;
      }
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 3;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteBotFileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteBotFileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (FolderId != other.FolderId) return false;
      if (FileName != other.FileName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (FolderId != 0) hash ^= FolderId.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (FolderId != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FolderId);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FileName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (FolderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FolderId);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteBotFileRequest other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.FolderId != 0) {
        FolderId = other.FolderId;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 16: {
            folderId_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId) input.ReadEnum();
            break;
          }
          case 26: {
            FileName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteBotFileResponse : pb::IMessage<DeleteBotFileResponse> {
    private static readonly pb::MessageParser<DeleteBotFileResponse> _parser = new pb::MessageParser<DeleteBotFileResponse>(() => new DeleteBotFileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteBotFileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBotFileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBotFileResponse(DeleteBotFileResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBotFileResponse Clone() {
      return new DeleteBotFileResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteBotFileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteBotFileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteBotFileResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotFileDetails : pb::IMessage<BotFileDetails> {
    private static readonly pb::MessageParser<BotFileDetails> _parser = new pb::MessageParser<BotFileDetails>(() => new BotFileDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotFileDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFileDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFileDetails(BotFileDetails other) : this() {
      botId_ = other.botId_;
      folderId_ = other.folderId_;
      fileName_ = other.fileName_;
      ChunkSettings = other.chunkSettings_ != null ? other.ChunkSettings.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotFileDetails Clone() {
      return new BotFileDetails(this);
    }

    /// <summary>Field number for the "bot_id" field.</summary>
    public const int BotIdFieldNumber = 1;
    private string botId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BotId {
      get { return botId_; }
      set {
        botId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId folderId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId FolderId {
      get { return folderId_; }
      set {
        folderId_ = value;
      }
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 3;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chunk_settings" field.</summary>
    public const int ChunkSettingsFieldNumber = 4;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings chunkSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings ChunkSettings {
      get { return chunkSettings_; }
      set {
        chunkSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotFileDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotFileDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BotId != other.BotId) return false;
      if (FolderId != other.FolderId) return false;
      if (FileName != other.FileName) return false;
      if (!object.Equals(ChunkSettings, other.ChunkSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BotId.Length != 0) hash ^= BotId.GetHashCode();
      if (FolderId != 0) hash ^= FolderId.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (chunkSettings_ != null) hash ^= ChunkSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BotId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BotId);
      }
      if (FolderId != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FolderId);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FileName);
      }
      if (chunkSettings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ChunkSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BotId);
      }
      if (FolderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FolderId);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (chunkSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChunkSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotFileDetails other) {
      if (other == null) {
        return;
      }
      if (other.BotId.Length != 0) {
        BotId = other.BotId;
      }
      if (other.FolderId != 0) {
        FolderId = other.FolderId;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.chunkSettings_ != null) {
        if (chunkSettings_ == null) {
          chunkSettings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings();
        }
        ChunkSettings.MergeFrom(other.ChunkSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BotId = input.ReadString();
            break;
          }
          case 16: {
            folderId_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.BotFolderInfo.Types.BotFolderId) input.ReadEnum();
            break;
          }
          case 26: {
            FileName = input.ReadString();
            break;
          }
          case 34: {
            if (chunkSettings_ == null) {
              chunkSettings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunkSettings();
            }
            input.ReadMessage(chunkSettings_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadBotFileRequest : pb::IMessage<DownloadBotFileRequest> {
    private static readonly pb::MessageParser<DownloadBotFileRequest> _parser = new pb::MessageParser<DownloadBotFileRequest>(() => new DownloadBotFileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadBotFileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadBotFileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadBotFileRequest(DownloadBotFileRequest other) : this() {
      File = other.file_ != null ? other.File.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadBotFileRequest Clone() {
      return new DownloadBotFileRequest(this);
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails file_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadBotFileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadBotFileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(File, other.File)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (file_ != null) hash ^= File.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (file_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (file_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadBotFileRequest other) {
      if (other == null) {
        return;
      }
      if (other.file_ != null) {
        if (file_ == null) {
          file_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails();
        }
        File.MergeFrom(other.File);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (file_ == null) {
              file_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails();
            }
            input.ReadMessage(file_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadBotFileResponse : pb::IMessage<DownloadBotFileResponse> {
    private static readonly pb::MessageParser<DownloadBotFileResponse> _parser = new pb::MessageParser<DownloadBotFileResponse>(() => new DownloadBotFileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadBotFileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadBotFileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadBotFileResponse(DownloadBotFileResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      Chunk = other.chunk_ != null ? other.Chunk.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadBotFileResponse Clone() {
      return new DownloadBotFileResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    /// <summary>Field number for the "chunk" field.</summary>
    public const int ChunkFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk chunk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk Chunk {
      get { return chunk_; }
      set {
        chunk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadBotFileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadBotFileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      if (!object.Equals(Chunk, other.Chunk)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (chunk_ != null) hash ^= Chunk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (chunk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Chunk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (chunk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chunk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadBotFileResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      if (other.chunk_ != null) {
        if (chunk_ == null) {
          chunk_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
        }
        Chunk.MergeFrom(other.Chunk);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
          case 18: {
            if (chunk_ == null) {
              chunk_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
            }
            input.ReadMessage(chunk_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadBotFileRequest : pb::IMessage<UploadBotFileRequest> {
    private static readonly pb::MessageParser<UploadBotFileRequest> _parser = new pb::MessageParser<UploadBotFileRequest>(() => new UploadBotFileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadBotFileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBotFileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBotFileRequest(UploadBotFileRequest other) : this() {
      switch (other.ValueCase) {
        case ValueOneofCase.File:
          File = other.File.Clone();
          break;
        case ValueOneofCase.Chunk:
          Chunk = other.Chunk.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBotFileRequest Clone() {
      return new UploadBotFileRequest(this);
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails File {
      get { return valueCase_ == ValueOneofCase.File ? (global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.File;
      }
    }

    /// <summary>Field number for the "chunk" field.</summary>
    public const int ChunkFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk Chunk {
      get { return valueCase_ == ValueOneofCase.Chunk ? (global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Chunk;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      File = 10,
      Chunk = 11,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadBotFileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadBotFileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Chunk, other.Chunk)) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.File) hash ^= File.GetHashCode();
      if (valueCase_ == ValueOneofCase.Chunk) hash ^= Chunk.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (valueCase_ == ValueOneofCase.File) {
        output.WriteRawTag(82);
        output.WriteMessage(File);
      }
      if (valueCase_ == ValueOneofCase.Chunk) {
        output.WriteRawTag(90);
        output.WriteMessage(Chunk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.File) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (valueCase_ == ValueOneofCase.Chunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chunk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadBotFileRequest other) {
      if (other == null) {
        return;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.File:
          if (File == null) {
            File = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails();
          }
          File.MergeFrom(other.File);
          break;
        case ValueOneofCase.Chunk:
          if (Chunk == null) {
            Chunk = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
          }
          Chunk.MergeFrom(other.Chunk);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.BotFileDetails();
            if (valueCase_ == ValueOneofCase.File) {
              subBuilder.MergeFrom(File);
            }
            input.ReadMessage(subBuilder);
            File = subBuilder;
            break;
          }
          case 90: {
            global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk subBuilder = new global::TickTrader.Algo.Protocol.Grpc.Lib.FileChunk();
            if (valueCase_ == ValueOneofCase.Chunk) {
              subBuilder.MergeFrom(Chunk);
            }
            input.ReadMessage(subBuilder);
            Chunk = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadBotFileResponse : pb::IMessage<UploadBotFileResponse> {
    private static readonly pb::MessageParser<UploadBotFileResponse> _parser = new pb::MessageParser<UploadBotFileResponse>(() => new UploadBotFileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadBotFileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.BotAgentReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBotFileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBotFileResponse(UploadBotFileResponse other) : this() {
      ExecResult = other.execResult_ != null ? other.ExecResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadBotFileResponse Clone() {
      return new UploadBotFileResponse(this);
    }

    /// <summary>Field number for the "exec_result" field.</summary>
    public const int ExecResultFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult execResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult ExecResult {
      get { return execResult_; }
      set {
        execResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadBotFileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadBotFileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecResult, other.ExecResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (execResult_ != null) hash ^= ExecResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (execResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (execResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadBotFileResponse other) {
      if (other == null) {
        return;
      }
      if (other.execResult_ != null) {
        if (execResult_ == null) {
          execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
        }
        ExecResult.MergeFrom(other.ExecResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execResult_ == null) {
              execResult_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.RequestResult();
            }
            input.ReadMessage(execResult_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
