<project name="TickTrader Algo" default="help">

  <property name="MSBuildDir"          value="c:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\MSBuild\15.0\Bin\"      unless="${property::exists('MSBuildDir')}" />
  <property name="NSIS_Path"           value="c:\Program Files (x86)\NSIS\"      unless="${property::exists('NSIS_Path')}" />
  <property name="WinScpPath"          value="c:\Program Files (x86)\WinSCP\WinSCP.com" unless="${property::exists('WinScpPath')}" />

  <property name="Build"               value="0.0.0.0"                              unless="${property::exists('Build')}" />
  <property name="Configuration"       value="Release"                              unless="${property::exists('Configuration')}" />

  <property name="SourcesDir"          value=".\"                                   unless="${property::exists('SourcesDir')}" />
  <property name="SolutionFile"        value="${SourcesDir}Algo.sln"                unless="${property::exists('SolutionFile')}" />
  
  <property name="InstallUrl"          value="http://tp.dev.soft-fx.eu/bt.setup/"   unless="${property::exists('InstallUrl')}" />
  <property name="EnableClickOnce"     value="false"                                unless="${property::exists('EnableClickOnce')}" />
  

  <property name="OutputFolder"        value="${SourcesDir}build.ouput\" />
  <property name="PublishFolder"       value="${SourcesDir}bt.publish\"/>
  <property name="ToolsFolder"         value="${SourcesDir}tools\"  />

  <property name="TerminalProject"     value="${SourcesDir}TickTrader.BotTerminal\TickTrader.BotTerminal.csproj" />
  <property name="AgentProject"        value="${SourcesDir}TickTrader.BotAgent\TickTrader.BotAgent.csproj" />

  <property name="CoreBinDir"          value="${SourcesDir}TickTrader.Algo.Core\bin\${Configuration}" />
  <property name="VsPackageBinDir"     value="${SourcesDir}TickTrader.Algo.VS.Package\bin\${Configuration}"/>
  <property name="TerminalBinDir"      value="${SourcesDir}TickTrader.BotTerminal\bin\${Configuration}\" />
  <property name="AgentBinDir"         value="${SourcesDir}TickTrader.BotAgent\bin\${Configuration}\net462\publish\" />
  <property name="ConfiguratorBinDir"  value="${SourcesDir}TickTrader.BotAgent.Configurator\bin\${Configuration}\" />

  <property name="CoreZipFile"         value="${OutputFolder}Core ${Build}.zip" />
  <property name="TerminalZipFile"     value="${OutputFolder}BotTerminal ${Build}.zip" />
  <property name="AgentZipFile"        value="${OutputFolder}BotAgent ${Build}.x64.zip" />

  <property name="ProjectsToPackage"   value="TickTrader.Algo.Indicators,TickTrader.Algo.TestCollection,TickTrader.Algo.VersionTest,TickTrader.Algo.NewsIndicator" />


  <target name="help">
    <echo message="Use: nant.exe -buildfile:bot.terminal.build [Build|Clean]"/>
  </target>

  <target name="Build" >

    <call target="CleanOutput" />

    <call target="SetupMSBuild" />
    <call target="RestoreNugetPackages" />

    <call target="BuildSolution" />
    <call target="PublishAgent" />
    <if test="${EnableClickOnce=='true'}">
      <call target="PublishTerminal" />
    </if>

    <call target="CreatePackages" />
    <call target="CreateZipArtifacts" />

    <call target="CreateInstallers" />

  </target>

  <target name="Clean" >

    <call target="CleanOutput" />

    <call target="SetupMSBuild" />
    <call target="CleanSolution" />

  </target>

  <target name="CleanOutput">

    <delete>
      <fileset basedir="${OutputFolder}">
        <include name="*.zip" />
      </fileset>
    </delete>

    <delete>
      <fileset basedir="${OutputFolder}">
        <include name="*.exe" />
      </fileset>
    </delete>

    <delete>
      <fileset basedir="${OutputFolder}">
        <include name="*.ttalgo" />
      </fileset>
    </delete>
    
    <delete>
      <fileset basedir="${PublishFolder}">
        <include name="**/*" />
      </fileset>
    </delete>
    
    <delete>
      <fileset basedir="${AgentBinDir}">
        <include name="**/*" />
      </fileset>
    </delete>

  </target>

  <target name="RestoreNugetPackages">

    <exec program="${ToolsFolder}nuget.exe" workingdir="${SourcesDir}" verbose="true">
      <arg line="restore" />
      <arg line="${SolutionFile}" />
      <arg line="-Recursive" />
      <arg line="-NonInteractive" />
      <arg line="-Verbosity detailed" />
    </exec>

  </target>

  <target name="SetupMSBuild">

    <property name="MSBuild.SolutionDir" value="${SourcesDir}" />
    <property name="MSBuild.Output" value="${SourcesDir}Algo.build-${Configuration}.log" />
    <property name="MSBuild.Configuration" value="${Configuration}" />

  </target>

  <target name="BuildSolution">

    <property name="MSBuild.Target" value="Build" />
    <property name="MSBuild.TargetFile" value="${SolutionFile}" />
    <call target="RunMSBuildSolution" />

  </target>

  <target name="PublishAgent">

    <property name="MSBuild.Target" value="Publish" />
    <property name="MSBuild.TargetFile" value="${AgentProject}" />
    <call target="RunMSBuildProject" />

  </target>

  <target name="CleanSolution">

    <property name="MSBuild.Target" value="Clean" />
    
    <property name="MSBuild.TargetFile" value="${SolutionFile}" />
    <call target="RunMSBuildSolution" />

    <property name="MSBuild.TargetFile" value="${AgentProject}" />
    <call target="RunMSBuildProject" />

  </target>

  <target name="RunMSBuildSolution">

    <property name="MSBuild.Platform" value="Any CPU" />  
    <call target="RunMSBuild" />

  </target>

  <target name="RunMSBuildProject">

    <property name="MSBuild.Platform" value="AnyCPU" />  
    <call target="RunMSBuild" />

  </target>

  <target name="RunMSBuild">

    <exec program="${MSBuildDir}msbuild.exe" >
      <arg value="${MSBuild.TargetFile}" />
      <arg value="/t:${MSBuild.Target}" />
      <arg value="/maxcpucount" />
      <arg value="/fl" />
      <arg value="/flp:Verbosity=Normal;LogFile=${MSBuild.Output}" />
      <arg value="/clp:NoItemAndPropertyList" />
      <arg value="/verbosity:n" />
      <arg value="/nologo" />
      <arg value="/p:Configuration=${MSBuild.Configuration}" />
      <arg value="/p:Platform=${MSBuild.Platform}" />
      <arg value="/p:SolutionDir=${MSBuild.SolutionDir}" />
    </exec>

  </target>

  <target name="PublishTerminal">

    <property name="MSBuild.Target" value="Publish" />
    <property name="MSBuild.TargetFile" value="${TerminalProject}" />
    <call target="RunMSBuildClickOnce" />

    <copy file="${SourcesDir}ClickOnce\BotTerminal.Setup.html" tofile="${PublishFolder}\setup.html">
      <filterchain>
        <replacetokens>
          <token key="Build.Number" value="${Build}" />
        </replacetokens>
      </filterchain>
    </copy>

    <exec program="${WinScpPath}" verbose="true">
      <arg value="/command" />
      <arg value='"open sftp://${Ftp.User}:${Ftp.Pwd}@${Ftp.Host} -certificate=*"' />
      <arg value='"put ""${PublishFolder}"""' />
      <arg value='"close"' />
      <arg value='"exit"' />
    </exec>

  </target>

  <target name="RunMSBuildClickOnce">

    <property name="MSBuild.Platform" value="AnyCPU" />  

    <exec program="${MSBuildDir}msbuild.exe" >
      <arg value="${MSBuild.TargetFile}" />
      <arg value="/t:${MSBuild.Target}" />
      <arg value="/maxcpucount" />
      <arg value="/fl" />
      <arg value="/flp:Verbosity=Normal;LogFile=${MSBuild.Output}" />
      <arg value="/clp:NoItemAndPropertyList" />
      <arg value="/verbosity:n" />
      <arg value="/nologo" />
      <arg value="/p:Configuration=${MSBuild.Configuration}" />
      <arg value="/p:Platform=${MSBuild.Platform}" />
      <arg value="/p:SolutionDir=${MSBuild.SolutionDir}" />
      <arg value="/p:InstallUrl=${InstallUrl}" />
      <arg value="/p:ApplicationVersion=${Build}" />
    </exec>

  </target>

  <target name="CreateZipArtifacts">

    <copy todir="${TerminalBinDir}\Redist\">
      <fileset basedir="${VsPackageBinDir}">
        <include name="*.vsix" />
      </fileset>
    </copy>

    <copy file="${OutputFolder}\TickTrader.Algo.NewsIndicator.ttalgo" todir="${TerminalBinDir}\AlgoRepository\" />

    <copy todir="${AgentBinDir}\Configurator\">
      <fileset basedir="${ConfiguratorBinDir}">
        <include name ="*.*" />
        <include name ="**/*" />
      </fileset>
    </copy>

    <property name="Zip.SrcDir" value="${CoreBinDir}" />
    <property name="Zip.DstFile" value="${CoreZipFile}" />
    <call target="ZipDirectory" />

    <property name="Zip.SrcDir" value="${TerminalBinDir}" />
    <property name="Zip.DstFile" value="${TerminalZipFile}" />
    <call target="ZipDirectory" />

    <property name="Zip.SrcDir" value="${AgentBinDir}" />
    <property name="Zip.DstFile" value="${AgentZipFile}" />
    <call target="ZipDirectory" />
  
  </target>

  <target name="ZipDirectory">

    <zip zipfile="${Zip.DstFile}">
      <fileset basedir="${Zip.SrcDir}">
        <include name ="*.*" />
        <include name ="**/*" />
      </fileset>
    </zip>

  </target>

  <target name="CreatePackages">

    <foreach item="String" in="${ProjectsToPackage}" delim="," property="Package.Name">
      <call target="CreateAlgoPackage"/>
    </foreach>

  </target>

  <target name="CreateAlgoPackage">

    <exec program="${ToolsFolder}CmdUtil.exe">
      <arg value="build" />
      <arg value="path=${SourcesDir}${Package.Name}\bin\${Configuration}"/>
      <arg value="main=${Package.Name}.dll"/>
      <arg value="runtime=.NETFramework,Version=v4.5.2" />
      <arg value="ide=VS14.0" />
      <arg value="project=${SourcesDir}${Package.Name}\${Package.Name}.csproj" />
      <arg value="workspace=${SolutionFile}" />
      <arg value="output=${OutputFolder}" />
    </exec>

  </target>

  <target name="CreateInstallers">

    <property name="UtilDir" value="${SourcesDir}TickTrader.BotAgent.CmdUtil\bin\Release\" />
      
    <exec program="${UtilDir}TickTrader.BotAgent.CmdUtil.exe">
      <arg value="Mode=uninstall" />
      <arg value="AppDir=${AgentBinDir}" />
      <arg value="OutFile=${SourcesDir}TickTrader.BotAgent.Setup\BA.Setup.Uninstall.nsi" />
    </exec>
      
    <exec program="${NSIS_Path}\makensis.exe" >
      <arg value="/DPRODUCT_BUILD=${Build}" />
      <arg value="${SourcesDir}TickTrader.BotAgent.Setup\BA.Setup.nsi" />
    </exec>

  </target>

</project>