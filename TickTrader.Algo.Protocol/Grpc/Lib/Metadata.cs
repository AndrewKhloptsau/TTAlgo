// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TickTrader.Algo.Protocol.Grpc.Lib {

  /// <summary>Holder for reflection information generated from metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXRhZGF0YS5wcm90bxIhVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdy",
            "cGMuTGliGh1nb29nbGVfcHJvdG9zL3RpbWVzdGFtcC5wcm90bxoRZGVzY3Jp",
            "cHRvcnMucHJvdG8iKwoKQWNjb3VudEtleRIOCgZzZXJ2ZXIYASABKAkSDQoF",
            "bG9naW4YAiABKAkiYwoKUGFja2FnZUtleRIMCgRuYW1lGAEgASgJEkcKCGxv",
            "Y2F0aW9uGAIgASgOMjUuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMu",
            "TGliLlJlcG9zaXRvcnlMb2NhdGlvbiKJAQoJUGx1Z2luS2V5EhQKDHBhY2th",
            "Z2VfbmFtZRgBIAEoCRJPChBwYWNrYWdlX2xvY2F0aW9uGAIgASgOMjUuVGlj",
            "a1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcG9zaXRvcnlMb2Nh",
            "dGlvbhIVCg1kZXNjcmlwdG9yX2lkGAMgASgJIowBCgxSZWR1Y3Rpb25LZXkS",
            "FAoMcGFja2FnZV9uYW1lGAEgASgJEk8KEHBhY2thZ2VfbG9jYXRpb24YAiAB",
            "KA4yNS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVwb3Np",
            "dG9yeUxvY2F0aW9uEhUKDWRlc2NyaXB0b3JfaWQYAyABKAkipgEKCk1hcHBp",
            "bmdLZXkSSgoRcHJpbWFyeV9yZWR1Y3Rpb24YASABKAsyLy5UaWNrVHJhZGVy",
            "LkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVkdWN0aW9uS2V5EkwKE3NlY29u",
            "ZGFyeV9yZWR1Y3Rpb24YAiABKAsyLy5UaWNrVHJhZGVyLkFsZ28uUHJvdG9j",
            "b2wuR3JwYy5MaWIuUmVkdWN0aW9uS2V5IpsCCg9BcGlNZXRhZGF0YUluZm8S",
            "TwoLdGltZV9mcmFtZXMYASADKA4yOi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9j",
            "b2wuR3JwYy5MaWIuQXBpRGVzY3JpcHRvci5UaW1lRnJhbWUSTwoLbGluZV9z",
            "dHlsZXMYAiADKA4yOi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuQXBpRGVzY3JpcHRvci5MaW5lU3R5bGUSEwoLdGhpY2tuZXNzZXMYAyAD",
            "KAUSUQoMbWFya2VyX3NpemVzGAQgAygOMjsuVGlja1RyYWRlci5BbGdvLlBy",
            "b3RvY29sLkdycGMuTGliLkFwaURlc2NyaXB0b3IuTWFya2VyU2l6ZSKQAQoK",
            "UGx1Z2luSW5mbxI5CgNrZXkYASABKAsyLC5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuUGx1Z2luS2V5EkcKCmRlc2NyaXB0b3IYAiABKAsy",
            "My5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUGx1Z2luRGVz",
            "Y3JpcHRvciK6AQoLUGFja2FnZUluZm8SOgoDa2V5GAEgASgLMi0uVGlja1Ry",
            "YWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlBhY2thZ2VLZXkSLwoLY3Jl",
            "YXRlZF91dGMYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEj4K",
            "B3BsdWdpbnMYAyADKAsyLS5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuUGx1Z2luSW5mbyKZAQoNUmVkdWN0aW9uSW5mbxI8CgNrZXkYASAB",
            "KAsyLy5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVkdWN0",
            "aW9uS2V5EkoKCmRlc2NyaXB0b3IYAiABKAsyNi5UaWNrVHJhZGVyLkFsZ28u",
            "UHJvdG9jb2wuR3JwYy5MaWIuUmVkdWN0aW9uRGVzY3JpcHRvciIcCgxDdXJy",
            "ZW5jeUluZm8SDAoEbmFtZRgBIAEoCSIaCgpTeW1ib2xJbmZvEgwKBG5hbWUY",
            "ASABKAkiYgoTQWNjb3VudE1ldGFkYXRhSW5mbxI6CgNrZXkYASABKAsyLS5U",
            "aWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuQWNjb3VudEtleRIP",
            "CgdzeW1ib2xzGAIgAygJIl8KC01hcHBpbmdJbmZvEjoKA2tleRgBIAEoCzIt",
            "LlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5NYXBwaW5nS2V5",
            "EhQKDGRpc3BsYXlfbmFtZRgCIAEoCSKfBgoVTWFwcGluZ0NvbGxlY3Rpb25J",
            "bmZvEksKE2Jhcl90b19iYXJfbWFwcGluZ3MYASADKAsyLi5UaWNrVHJhZGVy",
            "LkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuTWFwcGluZ0luZm8STgoWYmFyX3Rv",
            "X2RvdWJsZV9tYXBwaW5ncxgCIAMoCzIuLlRpY2tUcmFkZXIuQWxnby5Qcm90",
            "b2NvbC5HcnBjLkxpYi5NYXBwaW5nSW5mbxJNChVxdW90ZV90b19iYXJfbWFw",
            "cGluZ3MYAyADKAsyLi5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuTWFwcGluZ0luZm8SUAoYcXVvdGVfdG9fZG91YmxlX21hcHBpbmdzGAQg",
            "AygLMi4uVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLk1hcHBp",
            "bmdJbmZvEloKIWRlZmF1bHRfZnVsbF9iYXJfdG9fYmFyX3JlZHVjdGlvbhgF",
            "IAEoCzIvLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5SZWR1",
            "Y3Rpb25LZXkSXQokZGVmYXVsdF9mdWxsX2Jhcl90b19kb3VibGVfcmVkdWN0",
            "aW9uGAYgASgLMi8uVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGli",
            "LlJlZHVjdGlvbktleRJYCh9kZWZhdWx0X2Jhcl90b19kb3VibGVfcmVkdWN0",
            "aW9uGAcgASgLMi8uVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGli",
            "LlJlZHVjdGlvbktleRJXCh5kZWZhdWx0X3F1b3RlX3RvX2Jhcl9yZWR1Y3Rp",
            "b24YCCABKAsyLy5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIu",
            "UmVkdWN0aW9uS2V5EloKIWRlZmF1bHRfcXVvdGVfdG9fZG91YmxlX3JlZHVj",
            "dGlvbhgJIAEoCzIvLlRpY2tUcmFkZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxp",
            "Yi5SZWR1Y3Rpb25LZXkizwEKEFNldHVwQ29udGV4dEluZm8SVgoSZGVmYXVs",
            "dF90aW1lX2ZyYW1lGAEgASgOMjouVGlja1RyYWRlci5BbGdvLlByb3RvY29s",
            "LkdycGMuTGliLkFwaURlc2NyaXB0b3IuVGltZUZyYW1lEhsKE2RlZmF1bHRf",
            "c3ltYm9sX2NvZGUYAiABKAkSRgoPZGVmYXVsdF9tYXBwaW5nGAMgASgLMi0u",
            "VGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLk1hcHBpbmdLZXki",
            "oAEKEVNldHVwTWV0YWRhdGFJbmZvEj8KA2FwaRgBIAEoCzIyLlRpY2tUcmFk",
            "ZXIuQWxnby5Qcm90b2NvbC5HcnBjLkxpYi5BcGlNZXRhZGF0YUluZm8SSgoI",
            "bWFwcGluZ3MYAiABKAsyOC5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3Jw",
            "Yy5MaWIuTWFwcGluZ0NvbGxlY3Rpb25JbmZvKnwKElJlcG9zaXRvcnlMb2Nh",
            "dGlvbhIMCghFTUJFRERFRBAAEhQKEExPQ0FMX1JFUE9TSVRPUlkQARIUChBM",
            "T0NBTF9FWFRFTlNJT05TEAISFQoRQ09NTU9OX1JFUE9TSVRPUlkQAxIVChFD",
            "T01NT05fRVhURU5TSU9OUxAEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::TickTrader.Algo.Protocol.Grpc.Lib.DescriptorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey.Parser, new[]{ "Server", "Login" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey.Parser, new[]{ "Name", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey), global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey.Parser, new[]{ "PackageName", "PackageLocation", "DescriptorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey), global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey.Parser, new[]{ "PackageName", "PackageLocation", "DescriptorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey.Parser, new[]{ "PrimaryReduction", "SecondaryReduction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo.Parser, new[]{ "TimeFrames", "LineStyles", "Thicknesses", "MarkerSizes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PluginInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.PluginInfo.Parser, new[]{ "Key", "Descriptor_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageInfo.Parser, new[]{ "Key", "CreatedUtc", "Plugins" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionInfo.Parser, new[]{ "Key", "Descriptor_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.CurrencyInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.CurrencyInfo.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SymbolInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.SymbolInfo.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountMetadataInfo.Parser, new[]{ "Key", "Symbols" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo.Parser, new[]{ "Key", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo.Parser, new[]{ "BarToBarMappings", "BarToDoubleMappings", "QuoteToBarMappings", "QuoteToDoubleMappings", "DefaultFullBarToBarReduction", "DefaultFullBarToDoubleReduction", "DefaultBarToDoubleReduction", "DefaultQuoteToBarReduction", "DefaultQuoteToDoubleReduction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.SetupContextInfo.Parser, new[]{ "DefaultTimeFrame", "DefaultSymbolCode", "DefaultMapping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.SetupMetadataInfo), global::TickTrader.Algo.Protocol.Grpc.Lib.SetupMetadataInfo.Parser, new[]{ "Api", "Mappings" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RepositoryLocation {
    [pbr::OriginalName("EMBEDDED")] Embedded = 0,
    [pbr::OriginalName("LOCAL_REPOSITORY")] LocalRepository = 1,
    [pbr::OriginalName("LOCAL_EXTENSIONS")] LocalExtensions = 2,
    [pbr::OriginalName("COMMON_REPOSITORY")] CommonRepository = 3,
    [pbr::OriginalName("COMMON_EXTENSIONS")] CommonExtensions = 4,
  }

  #endregion

  #region Messages
  public sealed partial class AccountKey : pb::IMessage<AccountKey> {
    private static readonly pb::MessageParser<AccountKey> _parser = new pb::MessageParser<AccountKey>(() => new AccountKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountKey(AccountKey other) : this() {
      server_ = other.server_;
      login_ = other.login_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountKey Clone() {
      return new AccountKey(this);
    }

    /// <summary>Field number for the "server" field.</summary>
    public const int ServerFieldNumber = 1;
    private string server_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Server {
      get { return server_; }
      set {
        server_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 2;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Server != other.Server) return false;
      if (Login != other.Login) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Server.Length != 0) hash ^= Server.GetHashCode();
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Server.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Server);
      }
      if (Login.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Login);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Server.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Server);
      }
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountKey other) {
      if (other == null) {
        return;
      }
      if (other.Server.Length != 0) {
        Server = other.Server;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Server = input.ReadString();
            break;
          }
          case 18: {
            Login = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageKey : pb::IMessage<PackageKey> {
    private static readonly pb::MessageParser<PackageKey> _parser = new pb::MessageParser<PackageKey>(() => new PackageKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageKey(PackageKey other) : this() {
      name_ = other.name_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageKey Clone() {
      return new PackageKey(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation location_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Location != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Location != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Location != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageKey other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Location != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            location_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PluginKey : pb::IMessage<PluginKey> {
    private static readonly pb::MessageParser<PluginKey> _parser = new pb::MessageParser<PluginKey>(() => new PluginKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginKey(PluginKey other) : this() {
      packageName_ = other.packageName_;
      packageLocation_ = other.packageLocation_;
      descriptorId_ = other.descriptorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginKey Clone() {
      return new PluginKey(this);
    }

    /// <summary>Field number for the "package_name" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_location" field.</summary>
    public const int PackageLocationFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation packageLocation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation PackageLocation {
      get { return packageLocation_; }
      set {
        packageLocation_ = value;
      }
    }

    /// <summary>Field number for the "descriptor_id" field.</summary>
    public const int DescriptorIdFieldNumber = 3;
    private string descriptorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptorId {
      get { return descriptorId_; }
      set {
        descriptorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (PackageLocation != other.PackageLocation) return false;
      if (DescriptorId != other.DescriptorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (PackageLocation != 0) hash ^= PackageLocation.GetHashCode();
      if (DescriptorId.Length != 0) hash ^= DescriptorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (PackageLocation != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DescriptorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (PackageLocation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginKey other) {
      if (other == null) {
        return;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.PackageLocation != 0) {
        PackageLocation = other.PackageLocation;
      }
      if (other.DescriptorId.Length != 0) {
        DescriptorId = other.DescriptorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            packageLocation_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation) input.ReadEnum();
            break;
          }
          case 26: {
            DescriptorId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReductionKey : pb::IMessage<ReductionKey> {
    private static readonly pb::MessageParser<ReductionKey> _parser = new pb::MessageParser<ReductionKey>(() => new ReductionKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReductionKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionKey(ReductionKey other) : this() {
      packageName_ = other.packageName_;
      packageLocation_ = other.packageLocation_;
      descriptorId_ = other.descriptorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionKey Clone() {
      return new ReductionKey(this);
    }

    /// <summary>Field number for the "package_name" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_location" field.</summary>
    public const int PackageLocationFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation packageLocation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation PackageLocation {
      get { return packageLocation_; }
      set {
        packageLocation_ = value;
      }
    }

    /// <summary>Field number for the "descriptor_id" field.</summary>
    public const int DescriptorIdFieldNumber = 3;
    private string descriptorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptorId {
      get { return descriptorId_; }
      set {
        descriptorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReductionKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReductionKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (PackageLocation != other.PackageLocation) return false;
      if (DescriptorId != other.DescriptorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (PackageLocation != 0) hash ^= PackageLocation.GetHashCode();
      if (DescriptorId.Length != 0) hash ^= DescriptorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (PackageLocation != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DescriptorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (PackageLocation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReductionKey other) {
      if (other == null) {
        return;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.PackageLocation != 0) {
        PackageLocation = other.PackageLocation;
      }
      if (other.DescriptorId.Length != 0) {
        DescriptorId = other.DescriptorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            packageLocation_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation) input.ReadEnum();
            break;
          }
          case 26: {
            DescriptorId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MappingKey : pb::IMessage<MappingKey> {
    private static readonly pb::MessageParser<MappingKey> _parser = new pb::MessageParser<MappingKey>(() => new MappingKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingKey(MappingKey other) : this() {
      PrimaryReduction = other.primaryReduction_ != null ? other.PrimaryReduction.Clone() : null;
      SecondaryReduction = other.secondaryReduction_ != null ? other.SecondaryReduction.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingKey Clone() {
      return new MappingKey(this);
    }

    /// <summary>Field number for the "primary_reduction" field.</summary>
    public const int PrimaryReductionFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey primaryReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey PrimaryReduction {
      get { return primaryReduction_; }
      set {
        primaryReduction_ = value;
      }
    }

    /// <summary>Field number for the "secondary_reduction" field.</summary>
    public const int SecondaryReductionFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey secondaryReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey SecondaryReduction {
      get { return secondaryReduction_; }
      set {
        secondaryReduction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrimaryReduction, other.PrimaryReduction)) return false;
      if (!object.Equals(SecondaryReduction, other.SecondaryReduction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (primaryReduction_ != null) hash ^= PrimaryReduction.GetHashCode();
      if (secondaryReduction_ != null) hash ^= SecondaryReduction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (primaryReduction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryReduction);
      }
      if (secondaryReduction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SecondaryReduction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (primaryReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryReduction);
      }
      if (secondaryReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecondaryReduction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingKey other) {
      if (other == null) {
        return;
      }
      if (other.primaryReduction_ != null) {
        if (primaryReduction_ == null) {
          primaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        PrimaryReduction.MergeFrom(other.PrimaryReduction);
      }
      if (other.secondaryReduction_ != null) {
        if (secondaryReduction_ == null) {
          secondaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        SecondaryReduction.MergeFrom(other.SecondaryReduction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (primaryReduction_ == null) {
              primaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(primaryReduction_);
            break;
          }
          case 18: {
            if (secondaryReduction_ == null) {
              secondaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(secondaryReduction_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApiMetadataInfo : pb::IMessage<ApiMetadataInfo> {
    private static readonly pb::MessageParser<ApiMetadataInfo> _parser = new pb::MessageParser<ApiMetadataInfo>(() => new ApiMetadataInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiMetadataInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataInfo(ApiMetadataInfo other) : this() {
      timeFrames_ = other.timeFrames_.Clone();
      lineStyles_ = other.lineStyles_.Clone();
      thicknesses_ = other.thicknesses_.Clone();
      markerSizes_ = other.markerSizes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMetadataInfo Clone() {
      return new ApiMetadataInfo(this);
    }

    /// <summary>Field number for the "time_frames" field.</summary>
    public const int TimeFramesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame> _repeated_timeFrames_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame) x);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame> timeFrames_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame> TimeFrames {
      get { return timeFrames_; }
    }

    /// <summary>Field number for the "line_styles" field.</summary>
    public const int LineStylesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.LineStyle> _repeated_lineStyles_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.LineStyle) x);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.LineStyle> lineStyles_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.LineStyle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.LineStyle> LineStyles {
      get { return lineStyles_; }
    }

    /// <summary>Field number for the "thicknesses" field.</summary>
    public const int ThicknessesFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_thicknesses_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> thicknesses_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Thicknesses {
      get { return thicknesses_; }
    }

    /// <summary>Field number for the "marker_sizes" field.</summary>
    public const int MarkerSizesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.MarkerSize> _repeated_markerSizes_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.MarkerSize) x);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.MarkerSize> markerSizes_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.MarkerSize>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.MarkerSize> MarkerSizes {
      get { return markerSizes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiMetadataInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiMetadataInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!timeFrames_.Equals(other.timeFrames_)) return false;
      if(!lineStyles_.Equals(other.lineStyles_)) return false;
      if(!thicknesses_.Equals(other.thicknesses_)) return false;
      if(!markerSizes_.Equals(other.markerSizes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= timeFrames_.GetHashCode();
      hash ^= lineStyles_.GetHashCode();
      hash ^= thicknesses_.GetHashCode();
      hash ^= markerSizes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      timeFrames_.WriteTo(output, _repeated_timeFrames_codec);
      lineStyles_.WriteTo(output, _repeated_lineStyles_codec);
      thicknesses_.WriteTo(output, _repeated_thicknesses_codec);
      markerSizes_.WriteTo(output, _repeated_markerSizes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += timeFrames_.CalculateSize(_repeated_timeFrames_codec);
      size += lineStyles_.CalculateSize(_repeated_lineStyles_codec);
      size += thicknesses_.CalculateSize(_repeated_thicknesses_codec);
      size += markerSizes_.CalculateSize(_repeated_markerSizes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiMetadataInfo other) {
      if (other == null) {
        return;
      }
      timeFrames_.Add(other.timeFrames_);
      lineStyles_.Add(other.lineStyles_);
      thicknesses_.Add(other.thicknesses_);
      markerSizes_.Add(other.markerSizes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            timeFrames_.AddEntriesFrom(input, _repeated_timeFrames_codec);
            break;
          }
          case 18:
          case 16: {
            lineStyles_.AddEntriesFrom(input, _repeated_lineStyles_codec);
            break;
          }
          case 26:
          case 24: {
            thicknesses_.AddEntriesFrom(input, _repeated_thicknesses_codec);
            break;
          }
          case 34:
          case 32: {
            markerSizes_.AddEntriesFrom(input, _repeated_markerSizes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PluginInfo : pb::IMessage<PluginInfo> {
    private static readonly pb::MessageParser<PluginInfo> _parser = new pb::MessageParser<PluginInfo>(() => new PluginInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginInfo(PluginInfo other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      Descriptor_ = other.descriptor_ != null ? other.Descriptor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginInfo Clone() {
      return new PluginInfo(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "descriptor" field.</summary>
    public const int Descriptor_FieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PluginDescriptor descriptor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PluginDescriptor Descriptor_ {
      get { return descriptor_; }
      set {
        descriptor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Descriptor_, other.Descriptor_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (descriptor_ != null) hash ^= Descriptor_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (descriptor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Descriptor_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (descriptor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Descriptor_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginInfo other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.descriptor_ != null) {
        if (descriptor_ == null) {
          descriptor_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginDescriptor();
        }
        Descriptor_.MergeFrom(other.Descriptor_);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            if (descriptor_ == null) {
              descriptor_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PluginDescriptor();
            }
            input.ReadMessage(descriptor_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageInfo : pb::IMessage<PackageInfo> {
    private static readonly pb::MessageParser<PackageInfo> _parser = new pb::MessageParser<PackageInfo>(() => new PackageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo(PackageInfo other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      CreatedUtc = other.createdUtc_ != null ? other.CreatedUtc.Clone() : null;
      plugins_ = other.plugins_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageInfo Clone() {
      return new PackageInfo(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "created_utc" field.</summary>
    public const int CreatedUtcFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdUtc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedUtc {
      get { return createdUtc_; }
      set {
        createdUtc_ = value;
      }
    }

    /// <summary>Field number for the "plugins" field.</summary>
    public const int PluginsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.PluginInfo> _repeated_plugins_codec
        = pb::FieldCodec.ForMessage(26, global::TickTrader.Algo.Protocol.Grpc.Lib.PluginInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PluginInfo> plugins_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PluginInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.PluginInfo> Plugins {
      get { return plugins_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(CreatedUtc, other.CreatedUtc)) return false;
      if(!plugins_.Equals(other.plugins_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (createdUtc_ != null) hash ^= CreatedUtc.GetHashCode();
      hash ^= plugins_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (createdUtc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedUtc);
      }
      plugins_.WriteTo(output, _repeated_plugins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (createdUtc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedUtc);
      }
      size += plugins_.CalculateSize(_repeated_plugins_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageInfo other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.createdUtc_ != null) {
        if (createdUtc_ == null) {
          createdUtc_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedUtc.MergeFrom(other.CreatedUtc);
      }
      plugins_.Add(other.plugins_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            if (createdUtc_ == null) {
              createdUtc_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createdUtc_);
            break;
          }
          case 26: {
            plugins_.AddEntriesFrom(input, _repeated_plugins_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReductionInfo : pb::IMessage<ReductionInfo> {
    private static readonly pb::MessageParser<ReductionInfo> _parser = new pb::MessageParser<ReductionInfo>(() => new ReductionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReductionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionInfo(ReductionInfo other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      Descriptor_ = other.descriptor_ != null ? other.Descriptor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionInfo Clone() {
      return new ReductionInfo(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "descriptor" field.</summary>
    public const int Descriptor_FieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionDescriptor descriptor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionDescriptor Descriptor_ {
      get { return descriptor_; }
      set {
        descriptor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReductionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReductionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Descriptor_, other.Descriptor_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (descriptor_ != null) hash ^= Descriptor_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (descriptor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Descriptor_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (descriptor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Descriptor_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReductionInfo other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.descriptor_ != null) {
        if (descriptor_ == null) {
          descriptor_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionDescriptor();
        }
        Descriptor_.MergeFrom(other.Descriptor_);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            if (descriptor_ == null) {
              descriptor_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionDescriptor();
            }
            input.ReadMessage(descriptor_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurrencyInfo : pb::IMessage<CurrencyInfo> {
    private static readonly pb::MessageParser<CurrencyInfo> _parser = new pb::MessageParser<CurrencyInfo>(() => new CurrencyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurrencyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrencyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrencyInfo(CurrencyInfo other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrencyInfo Clone() {
      return new CurrencyInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurrencyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurrencyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurrencyInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SymbolInfo : pb::IMessage<SymbolInfo> {
    private static readonly pb::MessageParser<SymbolInfo> _parser = new pb::MessageParser<SymbolInfo>(() => new SymbolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SymbolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolInfo(SymbolInfo other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolInfo Clone() {
      return new SymbolInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SymbolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SymbolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SymbolInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountMetadataInfo : pb::IMessage<AccountMetadataInfo> {
    private static readonly pb::MessageParser<AccountMetadataInfo> _parser = new pb::MessageParser<AccountMetadataInfo>(() => new AccountMetadataInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountMetadataInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataInfo(AccountMetadataInfo other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      symbols_ = other.symbols_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountMetadataInfo Clone() {
      return new AccountMetadataInfo(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "symbols" field.</summary>
    public const int SymbolsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_symbols_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> symbols_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Symbols {
      get { return symbols_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountMetadataInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountMetadataInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if(!symbols_.Equals(other.symbols_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      hash ^= symbols_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      symbols_.WriteTo(output, _repeated_symbols_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      size += symbols_.CalculateSize(_repeated_symbols_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountMetadataInfo other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
        }
        Key.MergeFrom(other.Key);
      }
      symbols_.Add(other.symbols_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            symbols_.AddEntriesFrom(input, _repeated_symbols_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MappingInfo : pb::IMessage<MappingInfo> {
    private static readonly pb::MessageParser<MappingInfo> _parser = new pb::MessageParser<MappingInfo>(() => new MappingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingInfo(MappingInfo other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingInfo Clone() {
      return new MappingInfo(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingInfo other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MappingCollectionInfo : pb::IMessage<MappingCollectionInfo> {
    private static readonly pb::MessageParser<MappingCollectionInfo> _parser = new pb::MessageParser<MappingCollectionInfo>(() => new MappingCollectionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingCollectionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingCollectionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingCollectionInfo(MappingCollectionInfo other) : this() {
      barToBarMappings_ = other.barToBarMappings_.Clone();
      barToDoubleMappings_ = other.barToDoubleMappings_.Clone();
      quoteToBarMappings_ = other.quoteToBarMappings_.Clone();
      quoteToDoubleMappings_ = other.quoteToDoubleMappings_.Clone();
      DefaultFullBarToBarReduction = other.defaultFullBarToBarReduction_ != null ? other.DefaultFullBarToBarReduction.Clone() : null;
      DefaultFullBarToDoubleReduction = other.defaultFullBarToDoubleReduction_ != null ? other.DefaultFullBarToDoubleReduction.Clone() : null;
      DefaultBarToDoubleReduction = other.defaultBarToDoubleReduction_ != null ? other.DefaultBarToDoubleReduction.Clone() : null;
      DefaultQuoteToBarReduction = other.defaultQuoteToBarReduction_ != null ? other.DefaultQuoteToBarReduction.Clone() : null;
      DefaultQuoteToDoubleReduction = other.defaultQuoteToDoubleReduction_ != null ? other.DefaultQuoteToDoubleReduction.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingCollectionInfo Clone() {
      return new MappingCollectionInfo(this);
    }

    /// <summary>Field number for the "bar_to_bar_mappings" field.</summary>
    public const int BarToBarMappingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> _repeated_barToBarMappings_codec
        = pb::FieldCodec.ForMessage(10, global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> barToBarMappings_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> BarToBarMappings {
      get { return barToBarMappings_; }
    }

    /// <summary>Field number for the "bar_to_double_mappings" field.</summary>
    public const int BarToDoubleMappingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> _repeated_barToDoubleMappings_codec
        = pb::FieldCodec.ForMessage(18, global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> barToDoubleMappings_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> BarToDoubleMappings {
      get { return barToDoubleMappings_; }
    }

    /// <summary>Field number for the "quote_to_bar_mappings" field.</summary>
    public const int QuoteToBarMappingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> _repeated_quoteToBarMappings_codec
        = pb::FieldCodec.ForMessage(26, global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> quoteToBarMappings_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> QuoteToBarMappings {
      get { return quoteToBarMappings_; }
    }

    /// <summary>Field number for the "quote_to_double_mappings" field.</summary>
    public const int QuoteToDoubleMappingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> _repeated_quoteToDoubleMappings_codec
        = pb::FieldCodec.ForMessage(34, global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo.Parser);
    private readonly pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> quoteToDoubleMappings_ = new pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TickTrader.Algo.Protocol.Grpc.Lib.MappingInfo> QuoteToDoubleMappings {
      get { return quoteToDoubleMappings_; }
    }

    /// <summary>Field number for the "default_full_bar_to_bar_reduction" field.</summary>
    public const int DefaultFullBarToBarReductionFieldNumber = 5;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey defaultFullBarToBarReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey DefaultFullBarToBarReduction {
      get { return defaultFullBarToBarReduction_; }
      set {
        defaultFullBarToBarReduction_ = value;
      }
    }

    /// <summary>Field number for the "default_full_bar_to_double_reduction" field.</summary>
    public const int DefaultFullBarToDoubleReductionFieldNumber = 6;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey defaultFullBarToDoubleReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey DefaultFullBarToDoubleReduction {
      get { return defaultFullBarToDoubleReduction_; }
      set {
        defaultFullBarToDoubleReduction_ = value;
      }
    }

    /// <summary>Field number for the "default_bar_to_double_reduction" field.</summary>
    public const int DefaultBarToDoubleReductionFieldNumber = 7;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey defaultBarToDoubleReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey DefaultBarToDoubleReduction {
      get { return defaultBarToDoubleReduction_; }
      set {
        defaultBarToDoubleReduction_ = value;
      }
    }

    /// <summary>Field number for the "default_quote_to_bar_reduction" field.</summary>
    public const int DefaultQuoteToBarReductionFieldNumber = 8;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey defaultQuoteToBarReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey DefaultQuoteToBarReduction {
      get { return defaultQuoteToBarReduction_; }
      set {
        defaultQuoteToBarReduction_ = value;
      }
    }

    /// <summary>Field number for the "default_quote_to_double_reduction" field.</summary>
    public const int DefaultQuoteToDoubleReductionFieldNumber = 9;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey defaultQuoteToDoubleReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey DefaultQuoteToDoubleReduction {
      get { return defaultQuoteToDoubleReduction_; }
      set {
        defaultQuoteToDoubleReduction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingCollectionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingCollectionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!barToBarMappings_.Equals(other.barToBarMappings_)) return false;
      if(!barToDoubleMappings_.Equals(other.barToDoubleMappings_)) return false;
      if(!quoteToBarMappings_.Equals(other.quoteToBarMappings_)) return false;
      if(!quoteToDoubleMappings_.Equals(other.quoteToDoubleMappings_)) return false;
      if (!object.Equals(DefaultFullBarToBarReduction, other.DefaultFullBarToBarReduction)) return false;
      if (!object.Equals(DefaultFullBarToDoubleReduction, other.DefaultFullBarToDoubleReduction)) return false;
      if (!object.Equals(DefaultBarToDoubleReduction, other.DefaultBarToDoubleReduction)) return false;
      if (!object.Equals(DefaultQuoteToBarReduction, other.DefaultQuoteToBarReduction)) return false;
      if (!object.Equals(DefaultQuoteToDoubleReduction, other.DefaultQuoteToDoubleReduction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= barToBarMappings_.GetHashCode();
      hash ^= barToDoubleMappings_.GetHashCode();
      hash ^= quoteToBarMappings_.GetHashCode();
      hash ^= quoteToDoubleMappings_.GetHashCode();
      if (defaultFullBarToBarReduction_ != null) hash ^= DefaultFullBarToBarReduction.GetHashCode();
      if (defaultFullBarToDoubleReduction_ != null) hash ^= DefaultFullBarToDoubleReduction.GetHashCode();
      if (defaultBarToDoubleReduction_ != null) hash ^= DefaultBarToDoubleReduction.GetHashCode();
      if (defaultQuoteToBarReduction_ != null) hash ^= DefaultQuoteToBarReduction.GetHashCode();
      if (defaultQuoteToDoubleReduction_ != null) hash ^= DefaultQuoteToDoubleReduction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      barToBarMappings_.WriteTo(output, _repeated_barToBarMappings_codec);
      barToDoubleMappings_.WriteTo(output, _repeated_barToDoubleMappings_codec);
      quoteToBarMappings_.WriteTo(output, _repeated_quoteToBarMappings_codec);
      quoteToDoubleMappings_.WriteTo(output, _repeated_quoteToDoubleMappings_codec);
      if (defaultFullBarToBarReduction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DefaultFullBarToBarReduction);
      }
      if (defaultFullBarToDoubleReduction_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DefaultFullBarToDoubleReduction);
      }
      if (defaultBarToDoubleReduction_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DefaultBarToDoubleReduction);
      }
      if (defaultQuoteToBarReduction_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DefaultQuoteToBarReduction);
      }
      if (defaultQuoteToDoubleReduction_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DefaultQuoteToDoubleReduction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += barToBarMappings_.CalculateSize(_repeated_barToBarMappings_codec);
      size += barToDoubleMappings_.CalculateSize(_repeated_barToDoubleMappings_codec);
      size += quoteToBarMappings_.CalculateSize(_repeated_quoteToBarMappings_codec);
      size += quoteToDoubleMappings_.CalculateSize(_repeated_quoteToDoubleMappings_codec);
      if (defaultFullBarToBarReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultFullBarToBarReduction);
      }
      if (defaultFullBarToDoubleReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultFullBarToDoubleReduction);
      }
      if (defaultBarToDoubleReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultBarToDoubleReduction);
      }
      if (defaultQuoteToBarReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultQuoteToBarReduction);
      }
      if (defaultQuoteToDoubleReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultQuoteToDoubleReduction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingCollectionInfo other) {
      if (other == null) {
        return;
      }
      barToBarMappings_.Add(other.barToBarMappings_);
      barToDoubleMappings_.Add(other.barToDoubleMappings_);
      quoteToBarMappings_.Add(other.quoteToBarMappings_);
      quoteToDoubleMappings_.Add(other.quoteToDoubleMappings_);
      if (other.defaultFullBarToBarReduction_ != null) {
        if (defaultFullBarToBarReduction_ == null) {
          defaultFullBarToBarReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        DefaultFullBarToBarReduction.MergeFrom(other.DefaultFullBarToBarReduction);
      }
      if (other.defaultFullBarToDoubleReduction_ != null) {
        if (defaultFullBarToDoubleReduction_ == null) {
          defaultFullBarToDoubleReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        DefaultFullBarToDoubleReduction.MergeFrom(other.DefaultFullBarToDoubleReduction);
      }
      if (other.defaultBarToDoubleReduction_ != null) {
        if (defaultBarToDoubleReduction_ == null) {
          defaultBarToDoubleReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        DefaultBarToDoubleReduction.MergeFrom(other.DefaultBarToDoubleReduction);
      }
      if (other.defaultQuoteToBarReduction_ != null) {
        if (defaultQuoteToBarReduction_ == null) {
          defaultQuoteToBarReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        DefaultQuoteToBarReduction.MergeFrom(other.DefaultQuoteToBarReduction);
      }
      if (other.defaultQuoteToDoubleReduction_ != null) {
        if (defaultQuoteToDoubleReduction_ == null) {
          defaultQuoteToDoubleReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        DefaultQuoteToDoubleReduction.MergeFrom(other.DefaultQuoteToDoubleReduction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            barToBarMappings_.AddEntriesFrom(input, _repeated_barToBarMappings_codec);
            break;
          }
          case 18: {
            barToDoubleMappings_.AddEntriesFrom(input, _repeated_barToDoubleMappings_codec);
            break;
          }
          case 26: {
            quoteToBarMappings_.AddEntriesFrom(input, _repeated_quoteToBarMappings_codec);
            break;
          }
          case 34: {
            quoteToDoubleMappings_.AddEntriesFrom(input, _repeated_quoteToDoubleMappings_codec);
            break;
          }
          case 42: {
            if (defaultFullBarToBarReduction_ == null) {
              defaultFullBarToBarReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(defaultFullBarToBarReduction_);
            break;
          }
          case 50: {
            if (defaultFullBarToDoubleReduction_ == null) {
              defaultFullBarToDoubleReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(defaultFullBarToDoubleReduction_);
            break;
          }
          case 58: {
            if (defaultBarToDoubleReduction_ == null) {
              defaultBarToDoubleReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(defaultBarToDoubleReduction_);
            break;
          }
          case 66: {
            if (defaultQuoteToBarReduction_ == null) {
              defaultQuoteToBarReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(defaultQuoteToBarReduction_);
            break;
          }
          case 74: {
            if (defaultQuoteToDoubleReduction_ == null) {
              defaultQuoteToDoubleReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(defaultQuoteToDoubleReduction_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetupContextInfo : pb::IMessage<SetupContextInfo> {
    private static readonly pb::MessageParser<SetupContextInfo> _parser = new pb::MessageParser<SetupContextInfo>(() => new SetupContextInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetupContextInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextInfo(SetupContextInfo other) : this() {
      defaultTimeFrame_ = other.defaultTimeFrame_;
      defaultSymbolCode_ = other.defaultSymbolCode_;
      DefaultMapping = other.defaultMapping_ != null ? other.DefaultMapping.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupContextInfo Clone() {
      return new SetupContextInfo(this);
    }

    /// <summary>Field number for the "default_time_frame" field.</summary>
    public const int DefaultTimeFrameFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame defaultTimeFrame_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame DefaultTimeFrame {
      get { return defaultTimeFrame_; }
      set {
        defaultTimeFrame_ = value;
      }
    }

    /// <summary>Field number for the "default_symbol_code" field.</summary>
    public const int DefaultSymbolCodeFieldNumber = 2;
    private string defaultSymbolCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultSymbolCode {
      get { return defaultSymbolCode_; }
      set {
        defaultSymbolCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_mapping" field.</summary>
    public const int DefaultMappingFieldNumber = 3;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey defaultMapping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey DefaultMapping {
      get { return defaultMapping_; }
      set {
        defaultMapping_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetupContextInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetupContextInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultTimeFrame != other.DefaultTimeFrame) return false;
      if (DefaultSymbolCode != other.DefaultSymbolCode) return false;
      if (!object.Equals(DefaultMapping, other.DefaultMapping)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultTimeFrame != 0) hash ^= DefaultTimeFrame.GetHashCode();
      if (DefaultSymbolCode.Length != 0) hash ^= DefaultSymbolCode.GetHashCode();
      if (defaultMapping_ != null) hash ^= DefaultMapping.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefaultTimeFrame != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DefaultTimeFrame);
      }
      if (DefaultSymbolCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DefaultSymbolCode);
      }
      if (defaultMapping_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DefaultMapping);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultTimeFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultTimeFrame);
      }
      if (DefaultSymbolCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultSymbolCode);
      }
      if (defaultMapping_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultMapping);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetupContextInfo other) {
      if (other == null) {
        return;
      }
      if (other.DefaultTimeFrame != 0) {
        DefaultTimeFrame = other.DefaultTimeFrame;
      }
      if (other.DefaultSymbolCode.Length != 0) {
        DefaultSymbolCode = other.DefaultSymbolCode;
      }
      if (other.defaultMapping_ != null) {
        if (defaultMapping_ == null) {
          defaultMapping_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey();
        }
        DefaultMapping.MergeFrom(other.DefaultMapping);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            defaultTimeFrame_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.ApiDescriptor.Types.TimeFrame) input.ReadEnum();
            break;
          }
          case 18: {
            DefaultSymbolCode = input.ReadString();
            break;
          }
          case 26: {
            if (defaultMapping_ == null) {
              defaultMapping_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey();
            }
            input.ReadMessage(defaultMapping_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetupMetadataInfo : pb::IMessage<SetupMetadataInfo> {
    private static readonly pb::MessageParser<SetupMetadataInfo> _parser = new pb::MessageParser<SetupMetadataInfo>(() => new SetupMetadataInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetupMetadataInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.MetadataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupMetadataInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupMetadataInfo(SetupMetadataInfo other) : this() {
      Api = other.api_ != null ? other.Api.Clone() : null;
      Mappings = other.mappings_ != null ? other.Mappings.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetupMetadataInfo Clone() {
      return new SetupMetadataInfo(this);
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo api_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo Api {
      get { return api_; }
      set {
        api_ = value;
      }
    }

    /// <summary>Field number for the "mappings" field.</summary>
    public const int MappingsFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo mappings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo Mappings {
      get { return mappings_; }
      set {
        mappings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetupMetadataInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetupMetadataInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Api, other.Api)) return false;
      if (!object.Equals(Mappings, other.Mappings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (api_ != null) hash ^= Api.GetHashCode();
      if (mappings_ != null) hash ^= Mappings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (api_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Api);
      }
      if (mappings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mappings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (api_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Api);
      }
      if (mappings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mappings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetupMetadataInfo other) {
      if (other == null) {
        return;
      }
      if (other.api_ != null) {
        if (api_ == null) {
          api_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo();
        }
        Api.MergeFrom(other.Api);
      }
      if (other.mappings_ != null) {
        if (mappings_ == null) {
          mappings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo();
        }
        Mappings.MergeFrom(other.Mappings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (api_ == null) {
              api_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ApiMetadataInfo();
            }
            input.ReadMessage(api_);
            break;
          }
          case 18: {
            if (mappings_ == null) {
              mappings_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.MappingCollectionInfo();
            }
            input.ReadMessage(mappings_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
