// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: keys.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TickTrader.Algo.Protocol.Grpc.Lib {

  /// <summary>Holder for reflection information generated from keys.proto</summary>
  public static partial class KeysReflection {

    #region Descriptor
    /// <summary>File descriptor for keys.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeysReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgprZXlzLnByb3RvEiFUaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIiKwoKQWNjb3VudEtleRIOCgZzZXJ2ZXIYASABKAkSDQoFbG9naW4YAiAB",
            "KAkiYwoKUGFja2FnZUtleRIMCgRuYW1lGAEgASgJEkcKCGxvY2F0aW9uGAIg",
            "ASgOMjUuVGlja1RyYWRlci5BbGdvLlByb3RvY29sLkdycGMuTGliLlJlcG9z",
            "aXRvcnlMb2NhdGlvbiKJAQoJUGx1Z2luS2V5EhQKDHBhY2thZ2VfbmFtZRgB",
            "IAEoCRJPChBwYWNrYWdlX2xvY2F0aW9uGAIgASgOMjUuVGlja1RyYWRlci5B",
            "bGdvLlByb3RvY29sLkdycGMuTGliLlJlcG9zaXRvcnlMb2NhdGlvbhIVCg1k",
            "ZXNjcmlwdG9yX2lkGAMgASgJIowBCgxSZWR1Y3Rpb25LZXkSFAoMcGFja2Fn",
            "ZV9uYW1lGAEgASgJEk8KEHBhY2thZ2VfbG9jYXRpb24YAiABKA4yNS5UaWNr",
            "VHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5MaWIuUmVwb3NpdG9yeUxvY2F0",
            "aW9uEhUKDWRlc2NyaXB0b3JfaWQYAyABKAkipgEKCk1hcHBpbmdLZXkSSgoR",
            "cHJpbWFyeV9yZWR1Y3Rpb24YASABKAsyLy5UaWNrVHJhZGVyLkFsZ28uUHJv",
            "dG9jb2wuR3JwYy5MaWIuUmVkdWN0aW9uS2V5EkwKE3NlY29uZGFyeV9yZWR1",
            "Y3Rpb24YAiABKAsyLy5UaWNrVHJhZGVyLkFsZ28uUHJvdG9jb2wuR3JwYy5M",
            "aWIuUmVkdWN0aW9uS2V5KnwKElJlcG9zaXRvcnlMb2NhdGlvbhIMCghFTUJF",
            "RERFRBAAEhQKEExPQ0FMX1JFUE9TSVRPUlkQARIUChBMT0NBTF9FWFRFTlNJ",
            "T05TEAISFQoRQ09NTU9OX1JFUE9TSVRPUlkQAxIVChFDT01NT05fRVhURU5T",
            "SU9OUxAEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey), global::TickTrader.Algo.Protocol.Grpc.Lib.AccountKey.Parser, new[]{ "Server", "Login" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey), global::TickTrader.Algo.Protocol.Grpc.Lib.PackageKey.Parser, new[]{ "Name", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey), global::TickTrader.Algo.Protocol.Grpc.Lib.PluginKey.Parser, new[]{ "PackageName", "PackageLocation", "DescriptorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey), global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey.Parser, new[]{ "PackageName", "PackageLocation", "DescriptorId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey), global::TickTrader.Algo.Protocol.Grpc.Lib.MappingKey.Parser, new[]{ "PrimaryReduction", "SecondaryReduction" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RepositoryLocation {
    [pbr::OriginalName("EMBEDDED")] Embedded = 0,
    [pbr::OriginalName("LOCAL_REPOSITORY")] LocalRepository = 1,
    [pbr::OriginalName("LOCAL_EXTENSIONS")] LocalExtensions = 2,
    [pbr::OriginalName("COMMON_REPOSITORY")] CommonRepository = 3,
    [pbr::OriginalName("COMMON_EXTENSIONS")] CommonExtensions = 4,
  }

  #endregion

  #region Messages
  public sealed partial class AccountKey : pb::IMessage<AccountKey> {
    private static readonly pb::MessageParser<AccountKey> _parser = new pb::MessageParser<AccountKey>(() => new AccountKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.KeysReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountKey(AccountKey other) : this() {
      server_ = other.server_;
      login_ = other.login_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountKey Clone() {
      return new AccountKey(this);
    }

    /// <summary>Field number for the "server" field.</summary>
    public const int ServerFieldNumber = 1;
    private string server_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Server {
      get { return server_; }
      set {
        server_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 2;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Server != other.Server) return false;
      if (Login != other.Login) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Server.Length != 0) hash ^= Server.GetHashCode();
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Server.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Server);
      }
      if (Login.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Login);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Server.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Server);
      }
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountKey other) {
      if (other == null) {
        return;
      }
      if (other.Server.Length != 0) {
        Server = other.Server;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Server = input.ReadString();
            break;
          }
          case 18: {
            Login = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageKey : pb::IMessage<PackageKey> {
    private static readonly pb::MessageParser<PackageKey> _parser = new pb::MessageParser<PackageKey>(() => new PackageKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.KeysReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageKey(PackageKey other) : this() {
      name_ = other.name_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageKey Clone() {
      return new PackageKey(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation location_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Location != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Location != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Location != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageKey other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Location != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            location_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PluginKey : pb::IMessage<PluginKey> {
    private static readonly pb::MessageParser<PluginKey> _parser = new pb::MessageParser<PluginKey>(() => new PluginKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.KeysReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginKey(PluginKey other) : this() {
      packageName_ = other.packageName_;
      packageLocation_ = other.packageLocation_;
      descriptorId_ = other.descriptorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginKey Clone() {
      return new PluginKey(this);
    }

    /// <summary>Field number for the "package_name" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_location" field.</summary>
    public const int PackageLocationFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation packageLocation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation PackageLocation {
      get { return packageLocation_; }
      set {
        packageLocation_ = value;
      }
    }

    /// <summary>Field number for the "descriptor_id" field.</summary>
    public const int DescriptorIdFieldNumber = 3;
    private string descriptorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptorId {
      get { return descriptorId_; }
      set {
        descriptorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (PackageLocation != other.PackageLocation) return false;
      if (DescriptorId != other.DescriptorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (PackageLocation != 0) hash ^= PackageLocation.GetHashCode();
      if (DescriptorId.Length != 0) hash ^= DescriptorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (PackageLocation != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DescriptorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (PackageLocation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginKey other) {
      if (other == null) {
        return;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.PackageLocation != 0) {
        PackageLocation = other.PackageLocation;
      }
      if (other.DescriptorId.Length != 0) {
        DescriptorId = other.DescriptorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            packageLocation_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation) input.ReadEnum();
            break;
          }
          case 26: {
            DescriptorId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReductionKey : pb::IMessage<ReductionKey> {
    private static readonly pb::MessageParser<ReductionKey> _parser = new pb::MessageParser<ReductionKey>(() => new ReductionKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReductionKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.KeysReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionKey(ReductionKey other) : this() {
      packageName_ = other.packageName_;
      packageLocation_ = other.packageLocation_;
      descriptorId_ = other.descriptorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReductionKey Clone() {
      return new ReductionKey(this);
    }

    /// <summary>Field number for the "package_name" field.</summary>
    public const int PackageNameFieldNumber = 1;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_location" field.</summary>
    public const int PackageLocationFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation packageLocation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation PackageLocation {
      get { return packageLocation_; }
      set {
        packageLocation_ = value;
      }
    }

    /// <summary>Field number for the "descriptor_id" field.</summary>
    public const int DescriptorIdFieldNumber = 3;
    private string descriptorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptorId {
      get { return descriptorId_; }
      set {
        descriptorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReductionKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReductionKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageName != other.PackageName) return false;
      if (PackageLocation != other.PackageLocation) return false;
      if (DescriptorId != other.DescriptorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (PackageLocation != 0) hash ^= PackageLocation.GetHashCode();
      if (DescriptorId.Length != 0) hash ^= DescriptorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageName);
      }
      if (PackageLocation != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DescriptorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (PackageLocation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PackageLocation);
      }
      if (DescriptorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReductionKey other) {
      if (other == null) {
        return;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.PackageLocation != 0) {
        PackageLocation = other.PackageLocation;
      }
      if (other.DescriptorId.Length != 0) {
        DescriptorId = other.DescriptorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageName = input.ReadString();
            break;
          }
          case 16: {
            packageLocation_ = (global::TickTrader.Algo.Protocol.Grpc.Lib.RepositoryLocation) input.ReadEnum();
            break;
          }
          case 26: {
            DescriptorId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MappingKey : pb::IMessage<MappingKey> {
    private static readonly pb::MessageParser<MappingKey> _parser = new pb::MessageParser<MappingKey>(() => new MappingKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MappingKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TickTrader.Algo.Protocol.Grpc.Lib.KeysReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingKey(MappingKey other) : this() {
      PrimaryReduction = other.primaryReduction_ != null ? other.PrimaryReduction.Clone() : null;
      SecondaryReduction = other.secondaryReduction_ != null ? other.SecondaryReduction.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MappingKey Clone() {
      return new MappingKey(this);
    }

    /// <summary>Field number for the "primary_reduction" field.</summary>
    public const int PrimaryReductionFieldNumber = 1;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey primaryReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey PrimaryReduction {
      get { return primaryReduction_; }
      set {
        primaryReduction_ = value;
      }
    }

    /// <summary>Field number for the "secondary_reduction" field.</summary>
    public const int SecondaryReductionFieldNumber = 2;
    private global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey secondaryReduction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey SecondaryReduction {
      get { return secondaryReduction_; }
      set {
        secondaryReduction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MappingKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MappingKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrimaryReduction, other.PrimaryReduction)) return false;
      if (!object.Equals(SecondaryReduction, other.SecondaryReduction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (primaryReduction_ != null) hash ^= PrimaryReduction.GetHashCode();
      if (secondaryReduction_ != null) hash ^= SecondaryReduction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (primaryReduction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryReduction);
      }
      if (secondaryReduction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SecondaryReduction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (primaryReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryReduction);
      }
      if (secondaryReduction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecondaryReduction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MappingKey other) {
      if (other == null) {
        return;
      }
      if (other.primaryReduction_ != null) {
        if (primaryReduction_ == null) {
          primaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        PrimaryReduction.MergeFrom(other.PrimaryReduction);
      }
      if (other.secondaryReduction_ != null) {
        if (secondaryReduction_ == null) {
          secondaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
        }
        SecondaryReduction.MergeFrom(other.SecondaryReduction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (primaryReduction_ == null) {
              primaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(primaryReduction_);
            break;
          }
          case 18: {
            if (secondaryReduction_ == null) {
              secondaryReduction_ = new global::TickTrader.Algo.Protocol.Grpc.Lib.ReductionKey();
            }
            input.ReadMessage(secondaryReduction_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
